services:
  copilot:
    image: tigergraphml/copilot:latest 
    container_name: copilot
    build:
      context: .
      dockerfile: copilot/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      - eventual-consistency-service
      - chat-history
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      MILVUS_CONFIG: "/code/configs/milvus_config.json"
      LOGLEVEL: "INFO"
      USE_CYPHER: "true"
    volumes:
      - ./configs/:/code/configs
      - ./common:/code/common
    networks:
      - copilot_local

  eventual-consistency-service:
    image: tigergraphml/ecc:latest
    container_name: eventual-consistency-service
    build:
      context: .
      dockerfile: eventual-consistency-service/Dockerfile
    ports:
      - 8001:8001
    environment:
      LLM_CONFIG: "/code/configs/llm_config.json"
      DB_CONFIG: "/code/configs/db_config.json"
      MILVUS_CONFIG: "/code/configs/milvus_config.json"
      LOGLEVEL: "INFO"
    volumes:
      - ./configs/:/code/configs
      - ./common:/code/common
    networks:
      - copilot_local

  chat-history:
    image: tigergraphml/chat-history:latest
    container_name: chat-history
    build:
      context: chat-history/
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    environment:
      CONFIG: "/configs/config.json"
      LOGLEVEL: "INFO"
    volumes:
      - ./chat-history/:/configs
    networks:
      - copilot_local
  # report-service:
  #   image: tigergraphml/report-service:latest
  #   container_name: report-service
  #   build:
  #     context: .
  #     dockerfile: report-service/Dockerfile
  #   ports:
  #     - 8002:8002
  #   environment:
  #     LLM_CONFIG: "/code/configs/llm_config.json"
  #     DB_CONFIG: "/code/configs/db_config.json"
  #     MILVUS_CONFIG: "/code/configs/milvus_config.json"
  #     LOGLEVEL: "INFO"
  #   volumes:
  #     - ./configs/:/code/configs
  #     - ./common:/code/common
      #
  ui:
    image: tigergraphml/copilot-ui:latest 
    container_name: ui 
    build:
      context: copilot-ui
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - copilot
    networks:
      - copilot_local

  nginx:
    container_name: nginx
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - ui
      - copilot
    networks:
      - copilot_local

networks:
  copilot_local:
