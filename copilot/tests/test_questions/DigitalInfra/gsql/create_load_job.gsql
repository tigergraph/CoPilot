USE GRAPH DigitalInfra
CREATE LOADING JOB load_digital_infra FOR GRAPH DigitalInfra {
    DEFINE FILENAME NodeMetricData;
    DEFINE FILENAME CallData;
    DEFINE FILENAME ContainerMetricData;

    LOAD NodeMetricData TO VERTEX NodeMetric VALUES(gsql_concat($1,$0), $0, $3, $2) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD NodeMetricData TO EDGE HAS_UTILIZATION VALUES($1 BareMetalNode, gsql_concat($1,$0) NodeMetric) USING SEPARATOR=",", HEADER="true", EOL="\n";


    LOAD ContainerMetricData TO VERTEX ContainerMetric VALUES(gsql_concat($2,$0), $0, $5, $4) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD ContainerMetricData TO EDGE DEPLOYED_ON VALUES($2, $3) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD ContainerMetricData TO EDGE RUNS_IN VALUES($1, $2) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD ContainerMetricData TO EDGE HAS_UTILIZATION VALUES($2 Container, gsql_concat($2,$0) ContainerMetric) USING SEPARATOR=",", HEADER="true", EOL="\n";
   
    LOAD CallData TO VERTEX MSCall VALUES(gsql_concat($1,$3), $0, $3, $10) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD CallData TO EDGE HAS VALUES($2, $1) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD CallData TO EDGE IN_TRACE VALUES(gsql_concat($1,$3), $1) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD CallData TO EDGE CALLS VALUES($5, $8) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD CallData TO EDGE MAKES_CALL VALUES($6, gsql_concat($1,$3)) USING SEPARATOR=",", HEADER="true", EOL="\n";
    LOAD CallData TO EDGE RECEIVES_CALL VALUES(gsql_concat($1,$3), $9) USING SEPARATOR=",", HEADER="true", EOL="\n";
}