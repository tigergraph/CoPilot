[I0423 17:32:37465010, 81644 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 17:32:37465010, 81644 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 17:32:37465246, 81644 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 17:32:37465246, 81644 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 17:32:38548837, 81644 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 17:32:38548837, 81644 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 17:32:38549193, 81644 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 17:32:38549193, 81644 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 17:32:38926026, 81644 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 17:32:38926026, 81644 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 17:32:39845867, 81644 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 17:32:39845867, 81644 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 17:32:39847071, 81644 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 17:32:39847071, 81644 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 17:32:40169644, 81644 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 17:32:40169644, 81644 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 17:32:43502324, 81644 main.py:71] /docs ENTRY request_id=dadbdc1c-19ba-4372-bd09-b7b904f21745
[I0423 17:32:43502324, 81644 main.py:71] /docs ENTRY request_id=dadbdc1c-19ba-4372-bd09-b7b904f21745
[I0423 17:32:44138265, 81644 main.py:71] /openapi.json ENTRY request_id=72022bd6-465f-427a-9f85-d0a14d287eb6
[I0423 17:32:44138265, 81644 main.py:71] /openapi.json ENTRY request_id=72022bd6-465f-427a-9f85-d0a14d287eb6
[I0423 17:59:37404863, 82098 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 17:59:37404863, 82098 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 17:59:37405028, 82098 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 17:59:37405028, 82098 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 17:59:38135595, 82098 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 17:59:38135595, 82098 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 17:59:38135912, 82098 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 17:59:38135912, 82098 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 17:59:38517367, 82098 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 17:59:38517367, 82098 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 17:59:39492792, 82098 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 17:59:39492792, 82098 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 17:59:39494376, 82098 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 17:59:39494376, 82098 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 17:59:39891975, 82098 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 17:59:39891975, 82098 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:16:54395298, 85965 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:16:54395298, 85965 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:16:54395885, 85965 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:16:54395885, 85965 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:16:56684719, 86036 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:16:56684719, 86036 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:16:56684884, 86036 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:16:56684884, 86036 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:16:57410316, 86036 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:16:57410316, 86036 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:16:57410658, 86036 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:16:57410658, 86036 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:16:57814343, 86036 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:16:57814343, 86036 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:16:58739937, 86036 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:16:58739937, 86036 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:16:58741042, 86036 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:16:58741042, 86036 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:16:59122689, 86036 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:16:59122689, 86036 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:36:32824047, 86036 main.py:71] /favicon.ico ENTRY request_id=5218f791-8227-4b85-b021-4e27108ac465
[I0423 19:36:32824047, 86036 main.py:71] /favicon.ico ENTRY request_id=5218f791-8227-4b85-b021-4e27108ac465
[I0423 19:36:32839815, 86036 main.py:97] "{\"timestamp\": \"2024-04-23T19:36:32.839726\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/favicon.ico\", \"actionName\": \"/favicon.ico\", \"status\": \"SUCCESS\", \"requestId\": \"5218f791-8227-4b85-b021-4e27108ac465\"}"
[I0423 19:36:32839815, 86036 main.py:97] "{\"timestamp\": \"2024-04-23T19:36:32.839726\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/favicon.ico\", \"actionName\": \"/favicon.ico\", \"status\": \"SUCCESS\", \"requestId\": \"5218f791-8227-4b85-b021-4e27108ac465\"}"
[I0423 19:43:21972235, 88642 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:43:21972235, 88642 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:43:21972402, 88642 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:43:21972402, 88642 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:43:22708612, 88642 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:43:22708612, 88642 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:43:22708951, 88642 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:43:22708951, 88642 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:43:23099850, 88642 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:43:23099850, 88642 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:43:23998100, 88642 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:43:23998100, 88642 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:43:24000002, 88642 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:43:24000002, 88642 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:43:24373486, 88642 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:43:24373486, 88642 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:43:32416594, 88769 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:43:32416594, 88769 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:43:32416774, 88769 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:43:32416774, 88769 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:43:33107812, 88769 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:43:33107812, 88769 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:43:33108198, 88769 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:43:33108198, 88769 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:43:33410762, 88769 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:43:33410762, 88769 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:43:34241439, 88769 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:43:34241439, 88769 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:43:34243578, 88769 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:43:34243578, 88769 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:43:34542514, 88769 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:43:34542514, 88769 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:45:34379897, 88867 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:45:34379897, 88867 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 19:45:34380074, 88867 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:45:34380074, 88867 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 19:45:35025801, 88867 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:45:35025801, 88867 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 19:45:35026135, 88867 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:45:35026135, 88867 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 19:45:35366303, 88867 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:45:35366303, 88867 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 19:45:36257870, 88867 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:45:36257870, 88867 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 19:45:36258864, 88867 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:45:36258864, 88867 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 19:45:36571246, 88867 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 19:45:36571246, 88867 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 20:33:45260547, 92183 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 20:33:45260547, 92183 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 20:33:45260741, 92183 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 20:33:45260741, 92183 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 20:33:45986730, 92183 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 20:33:45986730, 92183 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 20:33:45987091, 92183 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 20:33:45987091, 92183 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 20:33:46370320, 92183 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 20:33:46370320, 92183 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 20:33:47297019, 92183 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 20:33:47297019, 92183 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 20:33:47297514, 92183 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 20:33:47297514, 92183 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 20:33:47612127, 92183 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 20:33:47612127, 92183 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:00:56246788, 93051 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:00:56246788, 93051 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:00:56246979, 93051 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:00:56246979, 93051 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:00:56905912, 93051 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:00:56905912, 93051 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:00:56906311, 93051 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:00:56906311, 93051 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:00:57284702, 93051 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:00:57284702, 93051 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:00:58188287, 93051 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:00:58188287, 93051 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:00:58189921, 93051 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:00:58189921, 93051 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:00:58492811, 93051 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:00:58492811, 93051 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:23:16320074, 93882 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:23:16320074, 93882 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:23:16320258, 93882 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:23:16320258, 93882 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:23:16967286, 93882 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:23:16967286, 93882 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:23:16967654, 93882 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:23:16967654, 93882 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:23:17330145, 93882 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:23:17330145, 93882 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:23:18226064, 93882 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:23:18226064, 93882 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:23:18227594, 93882 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:23:18227594, 93882 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:23:18606251, 93882 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:23:18606251, 93882 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:24:34106161, 93957 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:24:34106161, 93957 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:24:34106343, 93957 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:24:34106343, 93957 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:24:34749555, 93957 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:24:34749555, 93957 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:24:34749927, 93957 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:24:34749927, 93957 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:24:40163616, 93957 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:24:40163616, 93957 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:24:41090070, 93957 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:24:41090070, 93957 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:24:41091592, 93957 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:24:41091592, 93957 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:24:41402670, 93957 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:24:41402670, 93957 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:24:56606512, 94014 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:24:56606512, 94014 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:24:56606707, 94014 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:24:56606707, 94014 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:24:57280204, 94014 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:24:57280204, 94014 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:24:57280566, 94014 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:24:57280566, 94014 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:24:57597357, 94014 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:24:57597357, 94014 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:24:58423934, 94014 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:24:58423934, 94014 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:24:58424723, 94014 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:24:58424723, 94014 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:24:58753370, 94014 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:24:58753370, 94014 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:24:58840113, 94014 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:24:58840113, 94014 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:24:58843700, 94014 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:24:58843700, 94014 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:28:53364448, 94293 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:28:53364448, 94293 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:28:53364628, 94293 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:28:53364628, 94293 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:28:54003908, 94293 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:28:54003908, 94293 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:28:54004278, 94293 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:28:54004278, 94293 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:28:54379602, 94293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:28:54379602, 94293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:28:55289005, 94293 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:28:55289005, 94293 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:28:55291161, 94293 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:28:55291161, 94293 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:28:55602840, 94293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:28:55602840, 94293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:28:55676465, 94293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:28:55676465, 94293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:28:55678346, 94293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:28:55678346, 94293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:08962590, 94574 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:45:08962590, 94574 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:45:08962764, 94574 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:45:08962764, 94574 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:45:09612025, 94574 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:45:09612025, 94574 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:45:09612396, 94574 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:45:09612396, 94574 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:45:09958982, 94574 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:45:09958982, 94574 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:45:10838079, 94574 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:45:10838079, 94574 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:45:10839945, 94574 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:45:10839945, 94574 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:45:11183721, 94574 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:45:11183721, 94574 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:45:11267792, 94574 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:11267792, 94574 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:11271793, 94574 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:11271793, 94574 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:11272215, 94574 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:45:11272215, 94574 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:45:11272516, 94574 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:45:11272516, 94574 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:45:11272758, 94574 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:45:11272758, 94574 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:45:11276248, 94574 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:45:11276248, 94574 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:45:45971097, 94624 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:45:45971097, 94624 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:45:45971273, 94624 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:45:45971273, 94624 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:45:46607475, 94624 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:45:46607475, 94624 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:45:46607840, 94624 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:45:46607840, 94624 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:45:46951663, 94624 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:45:46951663, 94624 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:45:47852362, 94624 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:45:47852362, 94624 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:45:47853142, 94624 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:45:47853142, 94624 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:45:48159617, 94624 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:45:48159617, 94624 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:45:48241782, 94624 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:48241782, 94624 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:48245204, 94624 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:48245204, 94624 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:45:48245596, 94624 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:45:48245596, 94624 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:45:48245860, 94624 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:45:48245860, 94624 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:45:48246083, 94624 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:45:48246083, 94624 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:45:48249292, 94624 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:45:48249292, 94624 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:45:48249991, 94624 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:45:48249991, 94624 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:45:48250957, 94624 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:45:48250957, 94624 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:45:48251187, 94624 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 21:45:48251187, 94624 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 21:45:48251952, 94624 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:45:48251952, 94624 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:47:12064872, 94695 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:47:12064872, 94695 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:47:12065047, 94695 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:47:12065047, 94695 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:47:12707501, 94695 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:47:12707501, 94695 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:47:12707886, 94695 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:47:12707886, 94695 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:47:13025204, 94695 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:47:13025204, 94695 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:47:13921981, 94695 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:47:13921981, 94695 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:47:13923908, 94695 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:47:13923908, 94695 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:47:14244091, 94695 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:47:14244091, 94695 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:47:14325019, 94695 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:47:14325019, 94695 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:47:14325626, 94695 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:47:14325626, 94695 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:47:14325913, 94695 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:47:14325913, 94695 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:47:14329237, 94695 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:47:14329237, 94695 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:47:14329682, 94695 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:47:14329682, 94695 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:47:14329948, 94695 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:47:14329948, 94695 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:47:14330166, 94695 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:47:14330166, 94695 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:47:14333516, 94695 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:47:14333516, 94695 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:47:14334284, 94695 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:47:14334284, 94695 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:47:14335297, 94695 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:47:14335297, 94695 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:47:14335540, 94695 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 21:47:14335540, 94695 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 21:47:14336141, 94695 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:47:14336141, 94695 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:50:59791356, 94890 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:50:59791356, 94890 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:50:59791532, 94890 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:50:59791532, 94890 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:51:00433784, 94890 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:51:00433784, 94890 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:51:00434142, 94890 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:51:00434142, 94890 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:51:05811991, 94890 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:51:05811991, 94890 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:51:06647617, 94890 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:51:06647617, 94890 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:51:06648338, 94890 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:51:06648338, 94890 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:51:06997606, 94890 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:51:06997606, 94890 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:51:07088367, 94890 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:51:07088367, 94890 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:51:07088985, 94890 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:51:07088985, 94890 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:51:07089280, 94890 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:51:07089280, 94890 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:51:07092805, 94890 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:51:07092805, 94890 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:51:07093265, 94890 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:51:07093265, 94890 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:51:07093542, 94890 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:51:07093542, 94890 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:51:07093751, 94890 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:51:07093751, 94890 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:51:07097567, 94890 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:51:07097567, 94890 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:51:07098400, 94890 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:51:07098400, 94890 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:51:07099408, 94890 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:51:07099408, 94890 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:51:07099644, 94890 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 21:51:07099644, 94890 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 21:51:07100290, 94890 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:51:07100290, 94890 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:52:39393802, 94986 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:52:39393802, 94986 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:52:39393988, 94986 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:52:39393988, 94986 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:52:40027574, 94986 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:52:40027574, 94986 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:52:40027938, 94986 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:52:40027938, 94986 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:52:40343770, 94986 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:52:40343770, 94986 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:52:41241337, 94986 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:52:41241337, 94986 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:52:41243113, 94986 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:52:41243113, 94986 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:52:41556736, 94986 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:52:41556736, 94986 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:52:41640839, 94986 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:52:41640839, 94986 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:52:41641522, 94986 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:52:41641522, 94986 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:52:41641802, 94986 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:52:41641802, 94986 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:52:41644743, 94986 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:52:41644743, 94986 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:52:41645082, 94986 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:52:41645082, 94986 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:52:41645341, 94986 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:52:41645341, 94986 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 21:52:41645546, 94986 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:52:41645546, 94986 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:52:41649050, 94986 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:52:41649050, 94986 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:52:41649718, 94986 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:52:41649718, 94986 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 21:52:41650585, 94986 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:52:41650585, 94986 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:52:41650801, 94986 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 21:52:41650801, 94986 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 21:52:41651372, 94986 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:52:41651372, 94986 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:53:51086159, 95061 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:53:51086159, 95061 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:53:51086340, 95061 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:53:51086340, 95061 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:53:51734901, 95061 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:53:51734901, 95061 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:53:51735253, 95061 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:53:51735253, 95061 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:53:52085474, 95061 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:53:52085474, 95061 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:53:52994459, 95061 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:53:52994459, 95061 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:53:52995822, 95061 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:53:52995822, 95061 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:53:53305350, 95061 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:53:53305350, 95061 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:53:53387166, 95061 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:53:53387166, 95061 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:53:53387731, 95061 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:53:53387731, 95061 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:53:53388011, 95061 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:53:53388011, 95061 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:53:53390905, 95061 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:53:53390905, 95061 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:53:53391263, 95061 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:53:53391263, 95061 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:53:53391511, 95061 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:53:53391511, 95061 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:53:53391715, 95061 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:53:53391715, 95061 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:53:53395135, 95061 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:53:53395135, 95061 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:53:53395758, 95061 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:53:53395758, 95061 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:53:53396579, 95061 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:53:53396579, 95061 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:53:53396789, 95061 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[E0423 21:53:53396789, 95061 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[I0423 21:53:53397358, 95061 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:53:53397358, 95061 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:56:19465944, 95214 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:56:19465944, 95214 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:56:19466115, 95214 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:56:19466115, 95214 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:56:20106079, 95214 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:56:20106079, 95214 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:56:20106468, 95214 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:56:20106468, 95214 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:56:20448459, 95214 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:56:20448459, 95214 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:56:21331120, 95214 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:56:21331120, 95214 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:56:21333156, 95214 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:56:21333156, 95214 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:56:21630968, 95214 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:56:21630968, 95214 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:56:21709862, 95214 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:21709862, 95214 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:21710171, 95214 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:21710171, 95214 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:21710340, 95214 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:21710340, 95214 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:21710510, 95214 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in ['vertex_id', 'text']
[I0423 21:56:21710510, 95214 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in ['vertex_id', 'text']
[I0423 21:56:21710916, 95214 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:21710916, 95214 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:21711612, 95214 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:21711612, 95214 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:21713902, 95214 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:21713902, 95214 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:21714098, 95214 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:21714098, 95214 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:21714235, 95214 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:56:21714235, 95214 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:56:21714349, 95214 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:21714349, 95214 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:21715850, 95214 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:56:21715850, 95214 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:56:21716280, 95214 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:21716280, 95214 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:21716816, 95214 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:21716816, 95214 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:56:21716955, 95214 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[E0423 21:56:21716955, 95214 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[I0423 21:56:21717397, 95214 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:56:21717397, 95214 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:56:55940013, 95293 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:56:55940013, 95293 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:56:55940191, 95293 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:56:55940191, 95293 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:56:56574142, 95293 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:56:56574142, 95293 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:56:56574501, 95293 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:56:56574501, 95293 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:56:56961232, 95293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:56:56961232, 95293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:56:57855631, 95293 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:56:57855631, 95293 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:56:57858893, 95293 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:56:57858893, 95293 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:56:58208340, 95293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:56:58208340, 95293 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:56:58290472, 95293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:58290472, 95293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:58291086, 95293 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:58291086, 95293 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:58291345, 95293 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:58291345, 95293 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:58291755, 95293 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in ['vertex_id', 'text']
[I0423 21:56:58291755, 95293 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in ['vertex_id', 'text']
[I0423 21:56:58292681, 95293 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:58292681, 95293 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:58293951, 95293 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:58293951, 95293 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:58297598, 95293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:58297598, 95293 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:56:58297912, 95293 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:58297912, 95293 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:56:58298151, 95293 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:56:58298151, 95293 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:56:58298355, 95293 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:58298355, 95293 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:56:58300705, 95293 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:56:58300705, 95293 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:56:58301329, 95293 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:58301329, 95293 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:56:58302168, 95293 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:56:58302168, 95293 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:56:58302363, 95293 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[E0423 21:56:58302363, 95293 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[I0423 21:56:58302940, 95293 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:56:58302940, 95293 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:57:48518911, 95358 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:57:48518911, 95358 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 21:57:48519077, 95358 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:57:48519077, 95358 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 21:57:49155992, 95358 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:57:49155992, 95358 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 21:57:49156352, 95358 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:57:49156352, 95358 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 21:57:49526528, 95358 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:57:49526528, 95358 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 21:57:50462695, 95358 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:57:50462695, 95358 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 21:57:50464813, 95358 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:57:50464813, 95358 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 21:57:50778625, 95358 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:57:50778625, 95358 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 21:57:50852938, 95358 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:57:50852938, 95358 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:57:50853256, 95358 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:57:50853256, 95358 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:57:50853435, 95358 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:57:50853435, 95358 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:57:50855408, 95358 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:57:50855408, 95358 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 21:57:50855653, 95358 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:57:50855653, 95358 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 21:57:50855833, 95358 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:57:50855833, 95358 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 21:57:50855979, 95358 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:57:50855979, 95358 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 21:57:50858435, 95358 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:57:50858435, 95358 eventual_consistency_checker.py:195] Remove existing entries from Milvus with vertex_ids in []
[I0423 21:57:50858872, 95358 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:57:50858872, 95358 eventual_consistency_checker.py:202] Embedding content from vertex type: index1
[I0423 21:57:50859506, 95358 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 21:57:50859506, 95358 eventual_consistency_checker.py:228] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 21:57:50859665, 95358 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[E0423 21:57:50859665, 95358 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[I0423 21:57:50860104, 95358 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 21:57:50860104, 95358 eventual_consistency_checker.py:250] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:03:04089619, 95560 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:03:04089619, 95560 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:03:04089794, 95560 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:03:04089794, 95560 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:03:04782951, 95560 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:03:04782951, 95560 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:03:04783328, 95560 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:03:04783328, 95560 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:03:05123958, 95560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:03:05123958, 95560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:03:05999882, 95560 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:03:05999882, 95560 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:03:06001572, 95560 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:03:06001572, 95560 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:03:06306937, 95560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:03:06306937, 95560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:03:06384853, 95560 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:06384853, 95560 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:06385463, 95560 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:06385463, 95560 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:06385742, 95560 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:06385742, 95560 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:06385998, 95560 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:03:06385998, 95560 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:03:06386788, 95560 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:06386788, 95560 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:06388227, 95560 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:06388227, 95560 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:06392076, 95560 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:06392076, 95560 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:06392339, 95560 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:06392339, 95560 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:06392556, 95560 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:03:06392556, 95560 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:03:06392741, 95560 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:06392741, 95560 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:06394761, 95560 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:03:06394761, 95560 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:03:06395395, 95560 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:06395395, 95560 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:06396255, 95560 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:06396255, 95560 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:03:06396458, 95560 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 22:03:06396458, 95560 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 22:03:06397241, 95560 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:03:06397241, 95560 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:03:34066884, 95640 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:03:34066884, 95640 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:03:34067056, 95640 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:03:34067056, 95640 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:03:34704896, 95640 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:03:34704896, 95640 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:03:34705289, 95640 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:03:34705289, 95640 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:03:35283115, 95640 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:03:35283115, 95640 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:03:36155915, 95640 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:03:36155915, 95640 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:03:36157971, 95640 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:03:36157971, 95640 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:03:36461665, 95640 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:03:36461665, 95640 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:03:36536046, 95640 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:36536046, 95640 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:36536310, 95640 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:36536310, 95640 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:36536464, 95640 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:36536464, 95640 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:36536610, 95640 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:03:36536610, 95640 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:03:36537013, 95640 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:36537013, 95640 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:36537724, 95640 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:36537724, 95640 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:36539747, 95640 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:36539747, 95640 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:03:36539924, 95640 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:36539924, 95640 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:03:36540064, 95640 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:03:36540064, 95640 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:03:36540196, 95640 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:36540196, 95640 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:03:36541518, 95640 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:03:36541518, 95640 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:03:36541931, 95640 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:36541931, 95640 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:03:36542460, 95640 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:03:36542460, 95640 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:03:36542660, 95640 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 22:03:36542660, 95640 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 22:03:36543350, 95640 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:03:36543350, 95640 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:21:39379227, 96054 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:21:39379227, 96054 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:21:39379651, 96054 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:21:39379651, 96054 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:21:40038157, 96054 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:21:40038157, 96054 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:21:40038498, 96054 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:21:40038498, 96054 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:21:40977819, 96054 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:21:40977819, 96054 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:21:42689402, 96054 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:21:42689402, 96054 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:21:42690073, 96054 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:21:42690073, 96054 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:21:43013299, 96054 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:21:43013299, 96054 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:21:43092211, 96054 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:21:43092211, 96054 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:21:43092741, 96054 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:21:43092741, 96054 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:21:43092963, 96054 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:21:43092963, 96054 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:21:43093190, 96054 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:21:43093190, 96054 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:21:43093801, 96054 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:21:43093801, 96054 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:21:43094929, 96054 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:21:43094929, 96054 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:21:43098706, 96054 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:21:43098706, 96054 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:21:43098994, 96054 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:21:43098994, 96054 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:21:43099208, 96054 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:21:43099208, 96054 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:21:43099414, 96054 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:21:43099414, 96054 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:21:43101254, 96054 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:21:43101254, 96054 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:21:43101839, 96054 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:21:43101839, 96054 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:21:43102593, 96054 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:21:43102593, 96054 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:21:43102807, 96054 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 22:21:43102807, 96054 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 22:21:43103322, 96054 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:21:43103322, 96054 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:22:27320575, 96140 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:22:27320575, 96140 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:22:27320758, 96140 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:22:27320758, 96140 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:22:28016997, 96140 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:22:28016997, 96140 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:22:28017394, 96140 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:22:28017394, 96140 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:22:28353975, 96140 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:22:28353975, 96140 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:22:30230807, 96140 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:22:30230807, 96140 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:22:30232503, 96140 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:22:30232503, 96140 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:22:30523946, 96140 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:22:30523946, 96140 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:22:30601138, 96140 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:22:30601138, 96140 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:22:30601650, 96140 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:22:30601650, 96140 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:22:30601871, 96140 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:22:30601871, 96140 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:22:30602086, 96140 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:22:30602086, 96140 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:22:30603174, 96140 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:22:30603174, 96140 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:22:30604610, 96140 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:22:30604610, 96140 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:43:44056253, 96504 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:43:44056253, 96504 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:43:44056425, 96504 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:43:44056425, 96504 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:43:44703757, 96504 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:43:44703757, 96504 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:43:44704121, 96504 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:43:44704121, 96504 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:43:45074672, 96504 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:43:45074672, 96504 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:43:45969410, 96504 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:43:45969410, 96504 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:43:45971111, 96504 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:43:45971111, 96504 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:43:46323566, 96504 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:43:46323566, 96504 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:43:46396542, 96504 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:43:46396542, 96504 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:43:46396896, 96504 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:43:46396896, 96504 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:43:46397115, 96504 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:43:46397115, 96504 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:43:46397327, 96504 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:43:46397327, 96504 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:43:46397930, 96504 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:43:46397930, 96504 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:43:46398986, 96504 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:43:46398986, 96504 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:44:05159779, 96555 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:44:05159779, 96555 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:44:05159951, 96555 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:44:05159951, 96555 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:44:05797326, 96555 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:44:05797326, 96555 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:44:05797688, 96555 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:44:05797688, 96555 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:44:06119860, 96555 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:44:06119860, 96555 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:44:07018733, 96555 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:44:07018733, 96555 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:44:07020396, 96555 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:44:07020396, 96555 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:44:07312524, 96555 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:44:07312524, 96555 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:44:07390673, 96555 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:44:07390673, 96555 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:44:07391212, 96555 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:44:07391212, 96555 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:44:07391436, 96555 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:44:07391436, 96555 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:44:07391655, 96555 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:44:07391655, 96555 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:44:07392270, 96555 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:44:07392270, 96555 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:44:07393550, 96555 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:44:07393550, 96555 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:44:56834561, 96649 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:44:56834561, 96649 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:44:56834748, 96649 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:44:56834748, 96649 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:44:57511915, 96649 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:44:57511915, 96649 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:44:57512258, 96649 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:44:57512258, 96649 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:44:57827742, 96649 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:44:57827742, 96649 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:44:58728319, 96649 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:44:58728319, 96649 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:44:58730134, 96649 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:44:58730134, 96649 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:44:59047649, 96649 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:44:59047649, 96649 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:44:59131334, 96649 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:44:59131334, 96649 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:44:59131850, 96649 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:44:59131850, 96649 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:44:59132067, 96649 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:44:59132067, 96649 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:44:59132285, 96649 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:44:59132285, 96649 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:44:59132889, 96649 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:44:59132889, 96649 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:44:59133968, 96649 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:44:59133968, 96649 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:30359662, 96719 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:45:30359662, 96719 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:45:30359849, 96719 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:45:30359849, 96719 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:45:30996481, 96719 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:45:30996481, 96719 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:45:30996878, 96719 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:45:30996878, 96719 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:45:31298426, 96719 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:45:31298426, 96719 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:45:32183039, 96719 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:45:32183039, 96719 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:45:32184962, 96719 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:45:32184962, 96719 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:45:32493940, 96719 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:45:32493940, 96719 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:45:32572258, 96719 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:32572258, 96719 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:32572630, 96719 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:32572630, 96719 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:32572860, 96719 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:32572860, 96719 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:32573080, 96719 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:45:32573080, 96719 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:45:32573682, 96719 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:32573682, 96719 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:32574761, 96719 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:32574761, 96719 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:32577540, 96719 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:32577540, 96719 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:32577796, 96719 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:32577796, 96719 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:32578011, 96719 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0423 22:45:32578011, 96719 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0423 22:45:32578182, 96719 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:32578182, 96719 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:32580242, 96719 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:45:32580242, 96719 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:45:32580938, 96719 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:32580938, 96719 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:32581724, 96719 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:32581724, 96719 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:45:32581914, 96719 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[E0423 22:45:32581914, 96719 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[I0423 22:45:32582445, 96719 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:45:32582445, 96719 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:45:54940614, 96778 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:45:54940614, 96778 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:45:54940795, 96778 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:45:54940795, 96778 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:45:55589213, 96778 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:45:55589213, 96778 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:45:55589586, 96778 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:45:55589586, 96778 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:45:55916802, 96778 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:45:55916802, 96778 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:45:56821612, 96778 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:45:56821612, 96778 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:45:56823354, 96778 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:45:56823354, 96778 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:45:57132793, 96778 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:45:57132793, 96778 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:45:57209920, 96778 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:57209920, 96778 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:57210274, 96778 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:57210274, 96778 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:57210479, 96778 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:57210479, 96778 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:57210673, 96778 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:45:57210673, 96778 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:45:57211219, 96778 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:57211219, 96778 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:57212188, 96778 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:57212188, 96778 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:57215613, 96778 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:57215613, 96778 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:45:57215928, 96778 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:57215928, 96778 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:45:57216165, 96778 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0423 22:45:57216165, 96778 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0423 22:45:57216368, 96778 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:57216368, 96778 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:45:57218519, 96778 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:45:57218519, 96778 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:45:57219318, 96778 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:57219318, 96778 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:45:57220282, 96778 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:45:57220282, 96778 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:45:57220506, 96778 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[E0423 22:45:57220506, 96778 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[I0423 22:45:57221098, 96778 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:45:57221098, 96778 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:46:18315391, 96840 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:46:18315391, 96840 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:46:18315569, 96840 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:46:18315569, 96840 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:46:18973060, 96840 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:46:18973060, 96840 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:46:18973419, 96840 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:46:18973419, 96840 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:46:19319894, 96840 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:46:19319894, 96840 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:46:20244899, 96840 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:46:20244899, 96840 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:46:20246507, 96840 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:46:20246507, 96840 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:46:20631330, 96840 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:46:20631330, 96840 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:46:20715913, 96840 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:20715913, 96840 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:20716425, 96840 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:20716425, 96840 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:20716657, 96840 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:20716657, 96840 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:20716875, 96840 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:46:20716875, 96840 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:46:20717495, 96840 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:20717495, 96840 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:20718595, 96840 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:20718595, 96840 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:20722031, 96840 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:20722031, 96840 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:20722322, 96840 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:20722322, 96840 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:20722567, 96840 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 22:46:20722567, 96840 eventual_consistency_checker.py:243] Eventual Consistency Check running for graphname testGraph 
[I0423 22:46:20722752, 96840 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:20722752, 96840 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:20724702, 96840 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:46:20724702, 96840 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:46:20725289, 96840 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:20725289, 96840 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:20726043, 96840 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:20726043, 96840 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:46:20726226, 96840 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[E0423 22:46:20726226, 96840 eventual_consistency_checker.py:238] No changes detected for vertex type: index1
[I0423 22:46:20726744, 96840 eventual_consistency_checker.py:248] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:46:20726744, 96840 eventual_consistency_checker.py:248] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:46:42222994, 96910 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:46:42222994, 96910 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0423 22:46:42223173, 96910 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:46:42223173, 96910 utils.py:160] NumExpr defaulting to 8 threads.
[I0423 22:46:42871411, 96910 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:46:42871411, 96910 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0423 22:46:42871750, 96910 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:46:42871750, 96910 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0423 22:46:43176176, 96910 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:46:43176176, 96910 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0423 22:46:44008625, 96910 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:46:44008625, 96910 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0423 22:46:44009742, 96910 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:46:44009742, 96910 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0423 22:46:44308554, 96910 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:46:44308554, 96910 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0423 22:46:44387977, 96910 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:44387977, 96910 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:44388458, 96910 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:44388458, 96910 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:44388688, 96910 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:44388688, 96910 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:44388949, 96910 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:46:44388949, 96910 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0423 22:46:44389567, 96910 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:44389567, 96910 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:44390665, 96910 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:44390665, 96910 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:44393195, 96910 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:44393195, 96910 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0423 22:46:44393467, 96910 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:44393467, 96910 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0423 22:46:44393673, 96910 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:46:44393673, 96910 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0423 22:46:44393856, 96910 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:44393856, 96910 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0423 22:46:44395796, 96910 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:46:44395796, 96910 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0423 22:46:44396403, 96910 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:44396403, 96910 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0423 22:46:44397203, 96910 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0423 22:46:44397203, 96910 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0423 22:46:44397402, 96910 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0423 22:46:44397402, 96910 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0423 22:46:44398021, 96910 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0423 22:46:44398021, 96910 eventual_consistency_checker.py:245] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0424 12:45:07863389, 9670 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:45:07863389, 9670 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:45:07863968, 9670 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:45:07863968, 9670 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:45:08738764, 9670 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:45:08738764, 9670 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:45:08739112, 9670 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:45:08739112, 9670 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:45:09788047, 9670 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:45:09788047, 9670 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:45:11418011, 9670 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:45:11418011, 9670 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:45:11420694, 9670 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:45:11420694, 9670 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:45:11734897, 9670 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:45:11734897, 9670 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:45:14783980, 9670 main.py:71] /docs ENTRY request_id=ed43e4be-53a5-4149-8841-f84c0f93fc36
[I0424 12:45:14783980, 9670 main.py:71] /docs ENTRY request_id=ed43e4be-53a5-4149-8841-f84c0f93fc36
[I0424 12:45:15051487, 9670 main.py:71] /openapi.json ENTRY request_id=5ca67aa2-ebb2-41eb-89d2-e96917598a4d
[I0424 12:45:15051487, 9670 main.py:71] /openapi.json ENTRY request_id=5ca67aa2-ebb2-41eb-89d2-e96917598a4d
[I0424 12:45:26594989, 9670 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=32f19ec9-8823-482e-9db4-0f8ce3a0442e
[I0424 12:45:26594989, 9670 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=32f19ec9-8823-482e-9db4-0f8ce3a0442e
[I0424 12:49:39355713, 9796 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:49:39355713, 9796 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:49:39355904, 9796 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:49:39355904, 9796 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:49:40176455, 9796 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:49:40176455, 9796 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:49:40176831, 9796 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:49:40176831, 9796 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:49:40524890, 9796 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:49:40524890, 9796 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:49:41429501, 9796 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:49:41429501, 9796 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:49:41430512, 9796 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:49:41430512, 9796 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:49:41762484, 9796 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:49:41762484, 9796 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:49:43706545, 9796 main.py:73] /docs ENTRY request_id=206ba761-08d7-4ac4-9511-ef57528a1178
[I0424 12:49:43706545, 9796 main.py:73] /docs ENTRY request_id=206ba761-08d7-4ac4-9511-ef57528a1178
[I0424 12:49:43914422, 9796 main.py:73] /openapi.json ENTRY request_id=8febe466-23d7-4fe7-8c70-25d9d99fbc79
[I0424 12:49:43914422, 9796 main.py:73] /openapi.json ENTRY request_id=8febe466-23d7-4fe7-8c70-25d9d99fbc79
[I0424 12:49:52604112, 9796 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=f048e480-e58b-47e3-b12c-a6c8cbbc7cac
[I0424 12:49:52604112, 9796 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=f048e480-e58b-47e3-b12c-a6c8cbbc7cac
[I0424 12:49:53971749, 9796 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=30db52a0-4d5b-4457-b68a-120446005673
[I0424 12:49:53971749, 9796 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=30db52a0-4d5b-4457-b68a-120446005673
[I0424 12:49:58696242, 9796 main.py:73] /docs ENTRY request_id=cbc763ed-0591-4eac-9bf3-5980f49d23d3
[I0424 12:49:58696242, 9796 main.py:73] /docs ENTRY request_id=cbc763ed-0591-4eac-9bf3-5980f49d23d3
[I0424 12:49:58779998, 9796 main.py:73] /openapi.json ENTRY request_id=aa52543d-b501-44fa-b983-0074a5a2cd05
[I0424 12:49:58779998, 9796 main.py:73] /openapi.json ENTRY request_id=aa52543d-b501-44fa-b983-0074a5a2cd05
[I0424 12:50:00958286, 9796 main.py:73] /docs ENTRY request_id=88a6864b-bf0b-4a0b-a484-3f5c0c2690e4
[I0424 12:50:00958286, 9796 main.py:73] /docs ENTRY request_id=88a6864b-bf0b-4a0b-a484-3f5c0c2690e4
[I0424 12:50:01085655, 9796 main.py:73] /openapi.json ENTRY request_id=11cf91c6-309a-4a81-bef8-dc9e819c46b2
[I0424 12:50:01085655, 9796 main.py:73] /openapi.json ENTRY request_id=11cf91c6-309a-4a81-bef8-dc9e819c46b2
[I0424 12:51:20084127, 9851 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:51:20084127, 9851 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:51:20084308, 9851 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:51:20084308, 9851 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:51:20869680, 9851 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:51:20869680, 9851 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:51:20870005, 9851 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:51:20870005, 9851 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:51:21204512, 9851 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:51:21204512, 9851 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:51:22096984, 9851 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:51:22096984, 9851 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:51:22099409, 9851 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:51:22099409, 9851 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:51:22409390, 9851 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:51:22409390, 9851 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:58:08412162, 9982 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:08412162, 9982 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:08412775, 9982 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:08412775, 9982 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:09175882, 9982 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:58:09175882, 9982 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:58:09176214, 9982 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:58:09176214, 9982 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:58:09515208, 9982 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:58:09515208, 9982 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:58:10378821, 9982 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:58:10378821, 9982 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:58:10379181, 9982 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:58:10379181, 9982 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:58:10686021, 9982 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:58:10686021, 9982 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:58:21585573, 10007 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:21585573, 10007 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:21585763, 10007 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:21585763, 10007 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:23534095, 10019 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:23534095, 10019 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 12:58:23534314, 10019 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:23534314, 10019 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 12:58:24180630, 10019 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:58:24180630, 10019 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 12:58:24180962, 10019 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:58:24180962, 10019 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 12:58:24494192, 10019 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:58:24494192, 10019 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 12:58:25342366, 10019 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:58:25342366, 10019 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 12:58:25343132, 10019 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:58:25343132, 10019 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 12:58:25693146, 10019 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:58:25693146, 10019 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 12:58:26162837, 10019 main.py:73] /docs ENTRY request_id=5841243c-67fc-4a4a-949d-b6ffbbae1af6
[I0424 12:58:26162837, 10019 main.py:73] /docs ENTRY request_id=5841243c-67fc-4a4a-949d-b6ffbbae1af6
[I0424 12:58:26381265, 10019 main.py:73] /openapi.json ENTRY request_id=aae5a7ab-9bbc-46c9-9b72-0eb66f486a1a
[I0424 12:58:26381265, 10019 main.py:73] /openapi.json ENTRY request_id=aae5a7ab-9bbc-46c9-9b72-0eb66f486a1a
[I0424 12:58:44167924, 10019 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=45d0a45e-bd86-4aca-b4f3-4948f7b9107b
[I0424 12:58:44167924, 10019 main.py:73] /SupportAI/supportai/forceupdate ENTRY request_id=45d0a45e-bd86-4aca-b4f3-4948f7b9107b
[I0424 13:00:13042180, 10069 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 13:00:13042180, 10069 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 13:00:13042360, 10069 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 13:00:13042360, 10069 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 13:00:13830715, 10069 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 13:00:13830715, 10069 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 13:00:13831084, 10069 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 13:00:13831084, 10069 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 13:00:14171133, 10069 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 13:00:14171133, 10069 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 13:00:15041263, 10069 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 13:00:15041263, 10069 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 13:00:15043142, 10069 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 13:00:15043142, 10069 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 13:00:15359067, 10069 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 13:00:15359067, 10069 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 13:00:31696462, 10069 main.py:76] /docs ENTRY request_id=42fa97cc-2374-4015-b7f7-6b89da5c163b
[I0424 13:00:31696462, 10069 main.py:76] /docs ENTRY request_id=42fa97cc-2374-4015-b7f7-6b89da5c163b
[I0424 13:00:31920067, 10069 main.py:76] /openapi.json ENTRY request_id=9cc124dd-ea10-4612-9a69-dfb377d59782
[I0424 13:00:31920067, 10069 main.py:76] /openapi.json ENTRY request_id=9cc124dd-ea10-4612-9a69-dfb377d59782
[I0424 13:00:39002925, 10069 main.py:76] /SupportAI/supportai/forceupdate ENTRY request_id=15076ca6-58cd-4a55-b261-56ef4101e326
[I0424 13:00:39002925, 10069 main.py:76] /SupportAI/supportai/forceupdate ENTRY request_id=15076ca6-58cd-4a55-b261-56ef4101e326
[I0424 13:00:54984567, 10108 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 13:00:54984567, 10108 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 13:00:54984764, 10108 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 13:00:54984764, 10108 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 13:00:55697001, 10108 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 13:00:55697001, 10108 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 13:00:55697336, 10108 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 13:00:55697336, 10108 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 13:00:56067894, 10108 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 13:00:56067894, 10108 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 13:00:56923463, 10108 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 13:00:56923463, 10108 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 13:00:56924808, 10108 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 13:00:56924808, 10108 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 13:00:57237782, 10108 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 13:00:57237782, 10108 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 13:01:05729812, 10108 main.py:79] /docs ENTRY request_id=d6bdbf2c-bf12-4d73-847d-978f4cef24fa
[I0424 13:01:05729812, 10108 main.py:79] /docs ENTRY request_id=d6bdbf2c-bf12-4d73-847d-978f4cef24fa
[I0424 13:01:05859115, 10108 main.py:79] /openapi.json ENTRY request_id=9ffc4e98-2b08-4d59-91df-0e689d59bf3d
[I0424 13:01:05859115, 10108 main.py:79] /openapi.json ENTRY request_id=9ffc4e98-2b08-4d59-91df-0e689d59bf3d
[I0424 13:01:12372373, 10108 main.py:79] /SupportAI/supportai/forceupdate ENTRY request_id=e8a593c4-82a3-4c54-963e-2dac45d10f27
[I0424 13:01:12372373, 10108 main.py:79] /SupportAI/supportai/forceupdate ENTRY request_id=e8a593c4-82a3-4c54-963e-2dac45d10f27
[I0424 13:08:57829766, 10108 main.py:79] /openapi.json ENTRY request_id=d2e0e098-d607-4816-8380-b78fe84f6bd3
[I0424 13:08:57829766, 10108 main.py:79] /openapi.json ENTRY request_id=d2e0e098-d607-4816-8380-b78fe84f6bd3
[I0424 13:08:58275541, 10108 main.py:79] /favicon.ico ENTRY request_id=bc96e94c-b0ca-486c-805a-e735155d7469
[I0424 13:08:58275541, 10108 main.py:79] /favicon.ico ENTRY request_id=bc96e94c-b0ca-486c-805a-e735155d7469
[I0424 13:08:58295968, 10108 main.py:105] "{\"timestamp\": \"2024-04-24T13:08:58.295810\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/favicon.ico\", \"actionName\": \"/favicon.ico\", \"status\": \"SUCCESS\", \"requestId\": \"bc96e94c-b0ca-486c-805a-e735155d7469\"}"
[I0424 13:08:58295968, 10108 main.py:105] "{\"timestamp\": \"2024-04-24T13:08:58.295810\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/favicon.ico\", \"actionName\": \"/favicon.ico\", \"status\": \"SUCCESS\", \"requestId\": \"bc96e94c-b0ca-486c-805a-e735155d7469\"}"
[I0424 13:51:39407153, 10108 main.py:79] /SupportAI/supportai/forceupdate ENTRY request_id=a4314813-0f6e-4410-8362-e10faf936bda
[I0424 13:51:39407153, 10108 main.py:79] /SupportAI/supportai/forceupdate ENTRY request_id=a4314813-0f6e-4410-8362-e10faf936bda
[I0424 15:14:43577497, 18845 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:14:43577497, 18845 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:14:43577694, 18845 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:14:43577694, 18845 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:14:44350671, 18845 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:14:44350671, 18845 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:14:44351014, 18845 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:14:44351014, 18845 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:14:44748234, 18845 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:14:44748234, 18845 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:14:45749501, 18845 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:14:45749501, 18845 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:14:45752389, 18845 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:14:45752389, 18845 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:14:46064476, 18845 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:14:46064476, 18845 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:14:53104086, 18845 main.py:73] /docs ENTRY request_id=8c311dc6-2e69-41d4-9dde-e40972fbbf84
[I0424 15:14:53104086, 18845 main.py:73] /docs ENTRY request_id=8c311dc6-2e69-41d4-9dde-e40972fbbf84
[I0424 15:14:53678891, 18845 main.py:73] /openapi.json ENTRY request_id=fce17397-4161-4f17-a56a-a5d48b426005
[I0424 15:14:53678891, 18845 main.py:73] /openapi.json ENTRY request_id=fce17397-4161-4f17-a56a-a5d48b426005
[I0424 15:17:20881027, 19418 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:17:20881027, 19418 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:17:20881237, 19418 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:17:20881237, 19418 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:17:21683609, 19418 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:17:21683609, 19418 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:17:21683960, 19418 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:17:21683960, 19418 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:17:22052445, 19418 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:17:22052445, 19418 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:17:22935518, 19418 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:17:22935518, 19418 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:17:22935847, 19418 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:17:22935847, 19418 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:17:23278808, 19418 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:17:23278808, 19418 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:20:25598184, 19577 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:20:25598184, 19577 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 15:20:25598363, 19577 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:20:25598363, 19577 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 15:20:26390625, 19577 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:20:26390625, 19577 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 15:20:26390991, 19577 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:20:26390991, 19577 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 15:20:26731607, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:20:26731607, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 15:20:27603010, 19577 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:20:27603010, 19577 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 15:20:27604516, 19577 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:20:27604516, 19577 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 15:20:27933674, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:20:27933674, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 15:20:30937830, 19577 main.py:71] /docs ENTRY request_id=98bc4cf4-3477-4df1-b06d-02f0fa192ae9
[I0424 15:20:30937830, 19577 main.py:71] /docs ENTRY request_id=98bc4cf4-3477-4df1-b06d-02f0fa192ae9
[I0424 15:20:30990309, 19577 main.py:71] /openapi.json ENTRY request_id=381fdcb2-3e66-4662-a5ad-518e0163eb4a
[I0424 15:20:30990309, 19577 main.py:71] /openapi.json ENTRY request_id=381fdcb2-3e66-4662-a5ad-518e0163eb4a
[I0424 15:20:45393668, 19577 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=14b045c2-1d8d-4f07-b879-bc734baf37e2
[I0424 15:20:45393668, 19577 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=14b045c2-1d8d-4f07-b879-bc734baf37e2
[I0424 15:20:45397266, 19577 main.py:97] "{\"timestamp\": \"2024-04-24T15:20:45.397130\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/forceupdate\", \"actionName\": \"/SupportAI/supportai/forceupdate\", \"status\": \"FAILURE\", \"requestId\": \"14b045c2-1d8d-4f07-b879-bc734baf37e2\"}"
[I0424 15:20:45397266, 19577 main.py:97] "{\"timestamp\": \"2024-04-24T15:20:45.397130\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/forceupdate\", \"actionName\": \"/SupportAI/supportai/forceupdate\", \"status\": \"FAILURE\", \"requestId\": \"14b045c2-1d8d-4f07-b879-bc734baf37e2\"}"
[I0424 15:35:18044226, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:35:18044226, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:35:18049278, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:18049278, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:18049937, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18049937, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18263300, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18263300, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18264505, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:18264505, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:18264922, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:35:18264922, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:35:18265365, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:35:18265365, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:35:18265731, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18265731, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18750027, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18750027, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18751212, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:35:18751212, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:35:18751869, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:35:18751869, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:35:18756293, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:18756293, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:18756952, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18756952, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:18888695, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18888695, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:35:18889938, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:18889938, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:18890345, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:35:18890345, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:35:18898020, 19577 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34
[I0424 15:35:18898020, 19577 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34
[I0424 15:35:18911910, 19577 main.py:97] "{\"timestamp\": \"2024-04-24T15:35:18.909374\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/forceupdate\", \"actionName\": \"/SupportAI/supportai/forceupdate\", \"status\": \"SUCCESS\", \"requestId\": \"e0259f18-0f0e-45d3-8ab9-40447a841f34\"}"
[I0424 15:35:18911910, 19577 main.py:97] "{\"timestamp\": \"2024-04-24T15:35:18.909374\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/forceupdate\", \"actionName\": \"/SupportAI/supportai/forceupdate\", \"status\": \"SUCCESS\", \"requestId\": \"e0259f18-0f0e-45d3-8ab9-40447a841f34\"}"
[I0424 15:35:19248608, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0424 15:35:19248608, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0424 15:35:19914213, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0424 15:35:19914213, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0424 15:35:20352779, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0424 15:35:20352779, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0424 15:35:20752607, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0424 15:35:20752607, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0424 15:35:21152105, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0424 15:35:21152105, 19577 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0424 15:35:21268055, 19577 openai_service.py:25] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 instantiated OpenAI model_name=gpt-4-0613
[I0424 15:35:21268055, 19577 openai_service.py:25] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 instantiated OpenAI model_name=gpt-4-0613
[I0424 15:35:21268668, 19577 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0424 15:35:21268668, 19577 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0424 15:35:21268896, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21268896, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21269017, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21269017, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21269130, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21269130, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21442936, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21442936, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21443971, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21443971, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21445142, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21445142, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21445806, 19577 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0424 15:35:21445806, 19577 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0424 15:35:21446797, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21446797, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21447186, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21447186, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21447558, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21447558, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21606323, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21606323, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21607634, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21607634, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21608463, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21608463, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21609313, 19577 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0424 15:35:21609313, 19577 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0424 15:35:21616672, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21616672, 19577 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 15:35:21616969, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21616969, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:35:21617219, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21617219, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21773245, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21773245, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:35:21774443, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21774443, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:35:21775287, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21775287, 19577 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 15:35:21776109, 19577 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0424 15:35:21776109, 19577 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0424 15:35:21779794, 19577 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 15:35:21779794, 19577 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 15:35:21782297, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:35:21782297, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:00480049, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:00480049, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:00480733, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:00480733, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:00480985, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:00480985, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:00596072, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:00596072, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:00596592, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:00596592, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:00596853, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:00596853, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:00597164, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:00597164, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:00597404, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:00597404, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:01261000, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:01261000, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:01261450, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:01261450, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:01261703, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:01261703, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:01262059, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:01262059, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:01262303, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:01262303, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:01379802, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:01379802, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:01380692, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:01380692, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:01381069, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:01381069, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:01382601, 19577 main.py:71] /SupportAI/supportai/search ENTRY request_id=36ac2e5f-dc3f-45e3-903a-48a7fd91fbab
[I0424 15:36:01382601, 19577 main.py:71] /SupportAI/supportai/search ENTRY request_id=36ac2e5f-dc3f-45e3-903a-48a7fd91fbab
[I0424 15:36:01963187, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:36:01963187, 19577 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 15:36:01965259, 19577 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0424 15:36:01965259, 19577 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0424 15:36:01965887, 19577 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0424 15:36:01965887, 19577 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0424 15:36:01967082, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0424 15:36:01967082, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0424 15:36:01967673, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:01967673, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:01967920, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:01967920, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:01968191, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:01968191, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:01968416, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:01968416, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:01968628, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:01968628, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02077896, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02077896, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02078131, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02078131, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02078212, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:02078212, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:02078332, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 196609.RESTPP_1_1.1713972962075.N
[I0424 15:36:02078332, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 196609.RESTPP_1_1.1713972962075.N
[I0424 15:36:02078526, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02078526, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02078601, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02078601, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02187971, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02187971, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02188182, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02188182, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02188269, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02188269, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02188349, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02188349, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02296349, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02296349, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02296560, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02296560, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02296660, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02296660, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02296743, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02296743, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02406452, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02406452, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02406717, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02406717, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02509995, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02509995, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02510296, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02510296, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02629209, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02629209, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02629753, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02629753, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02630109, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 196609.RESTPP_1_1.1713972962075.N
[I0424 15:36:02630109, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 196609.RESTPP_1_1.1713972962075.N
[I0424 15:36:02630648, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02630648, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:02630866, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02630866, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:02751221, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02751221, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:02751807, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02751807, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:02856888, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:02856888, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:02857322, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:02857322, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:03218423, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Document does not exist
[I0424 15:36:03218423, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Document does not exist
[I0424 15:36:03218782, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:03218782, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:03218934, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0424 15:36:03218934, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0424 15:36:03219075, 19577 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0424 15:36:03219075, 19577 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0424 15:36:03219217, 19577 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0424 15:36:03219217, 19577 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0424 15:36:03219391, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 15:36:03219391, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 15:36:03219534, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0424 15:36:03219534, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0424 15:36:03221177, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0424 15:36:03221177, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0424 15:36:03221433, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:03221433, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:03221534, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:03221534, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:03221639, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:03221639, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:03221729, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03221729, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03221818, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03221818, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03335482, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03335482, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03335739, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03335739, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03335865, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:03335865, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:03336014, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 65538.RESTPP_1_1.1713972963330.N
[I0424 15:36:03336014, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 65538.RESTPP_1_1.1713972963330.N
[I0424 15:36:03336251, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03336251, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03336367, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03336367, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03445962, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03445962, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03446259, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03446259, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03446439, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03446439, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03446588, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03446588, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03555889, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03555889, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03556236, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03556236, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03556429, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03556429, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03556610, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03556610, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03666567, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03666567, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03666966, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03666966, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03768101, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03768101, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03769706, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03769706, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03886151, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03886151, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:03886455, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03886455, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:03886656, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 65538.RESTPP_1_1.1713972963330.N
[I0424 15:36:03886656, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 65538.RESTPP_1_1.1713972963330.N
[I0424 15:36:03886942, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03886942, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:03887072, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:03887072, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04008666, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04008666, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04009787, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04009787, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04112047, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:04112047, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:04114040, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:04114040, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:04494002, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_DocumentChunk does not exist
[I0424 15:36:04494002, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_DocumentChunk does not exist
[I0424 15:36:04496334, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:04496334, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:04496830, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0424 15:36:04496830, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0424 15:36:04497204, 19577 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0424 15:36:04497204, 19577 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0424 15:36:04497551, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 15:36:04497551, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 15:36:04497879, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0424 15:36:04497879, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0424 15:36:04498305, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0424 15:36:04498305, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0424 15:36:04498738, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:04498738, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:04498960, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:04498960, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:04499223, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:04499223, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:04499447, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04499447, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04499663, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04499663, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04611070, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04611070, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04611382, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04611382, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04611536, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:04611536, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:04611746, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 196612.RESTPP_1_1.1713972964607.N
[I0424 15:36:04611746, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 196612.RESTPP_1_1.1713972964607.N
[I0424 15:36:04612042, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04612042, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04612198, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04612198, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04721295, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04721295, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04721631, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04721631, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04721835, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04721835, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04722013, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04722013, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04830698, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04830698, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04830895, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04830895, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04830989, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04830989, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:04831091, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04831091, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:04938989, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04938989, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:04939219, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:04939219, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05043850, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05043850, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05044863, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05044863, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05153944, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05153944, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05154320, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05154320, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05154585, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 196612.RESTPP_1_1.1713972964607.N
[I0424 15:36:05154585, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 196612.RESTPP_1_1.1713972964607.N
[I0424 15:36:05154969, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05154969, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05155138, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05155138, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05268411, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05268411, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05268766, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05268766, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05374318, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:05374318, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:05374963, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:05374963, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:05740127, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Entity does not exist
[I0424 15:36:05740127, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Entity does not exist
[I0424 15:36:05744517, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:05744517, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:05745842, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0424 15:36:05745842, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0424 15:36:05746681, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 15:36:05746681, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 15:36:05747758, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0424 15:36:05747758, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0424 15:36:05749220, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0424 15:36:05749220, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0424 15:36:05750338, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:05750338, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:05750861, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:05750861, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:05752141, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:05752141, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:05753068, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05753068, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05754223, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05754223, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05875388, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05875388, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05875874, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05875874, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05876048, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:05876048, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:05876305, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 65541.RESTPP_1_1.1713972965870.N
[I0424 15:36:05876305, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 65541.RESTPP_1_1.1713972965870.N
[I0424 15:36:05876719, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05876719, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05876891, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05876891, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05988364, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05988364, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:05988956, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05988956, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:05989190, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05989190, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:05989394, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:05989394, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06077818, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:06077818, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:06078383, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06078383, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06079170, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06079170, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06104794, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06104794, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06105137, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06105137, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06105329, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06105329, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06105503, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06105503, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06190777, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06190777, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06191352, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06191352, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06191738, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:06191738, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:06192078, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:06192078, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:06192359, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06192359, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06218594, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06218594, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06218900, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06218900, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06324239, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06324239, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06324855, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06324855, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06463055, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06463055, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06463252, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06463252, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06463371, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 65541.RESTPP_1_1.1713972965870.N
[I0424 15:36:06463371, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 65541.RESTPP_1_1.1713972965870.N
[I0424 15:36:06463539, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06463539, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06463613, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06463613, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06570470, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06570470, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06570678, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06570678, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06672703, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06672703, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06672607, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:06672607, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:06673042, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:06673042, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:06673160, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:06673160, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:06673367, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:06673367, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:06673720, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06673720, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:06674568, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06674568, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:06785126, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06785126, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:06785357, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06785357, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:06785457, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:06785457, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:06785807, 19577 main.py:71] /SupportAI/supportai/search ENTRY request_id=baa70d0f-f4ec-47f0-95f4-90778e6e3708
[I0424 15:36:06785807, 19577 main.py:71] /SupportAI/supportai/search ENTRY request_id=baa70d0f-f4ec-47f0-95f4-90778e6e3708
[I0424 15:36:07069474, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Relationship does not exist
[I0424 15:36:07069474, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Relationship does not exist
[I0424 15:36:07070138, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:07070138, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:07070362, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0424 15:36:07070362, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0424 15:36:07071014, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 15:36:07071014, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 15:36:07071251, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0424 15:36:07071251, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0424 15:36:07071524, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0424 15:36:07071524, 19577 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0424 15:36:07071763, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:07071763, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:07071883, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:07071883, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:07072020, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:07072020, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:07072135, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07072135, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07072248, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07072248, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07181923, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07181923, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07182201, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07182201, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07182320, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:07182320, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:07182481, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 16973825.RESTPP_1_1.1713972967178.N
[I0424 15:36:07182481, 19577 tg_proxy.py:53] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates started with RESTPP ID 16973825.RESTPP_1_1.1713972967178.N
[I0424 15:36:07182727, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07182727, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07182836, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07182836, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07293123, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07293123, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07293343, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07293343, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07293429, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07293429, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07293518, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07293518, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07401605, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07401605, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07401800, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07401800, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07401895, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07401895, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07402027, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07402027, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07507759, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07507759, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07507972, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07507972, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07610548, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07610548, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07610795, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07610795, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07717690, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07717690, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07717901, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07717901, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07718041, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 16973825.RESTPP_1_1.1713972967178.N
[I0424 15:36:07718041, 19577 tg_proxy.py:62] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 query Scan_For_Updates completed successfully with RESTPP ID 16973825.RESTPP_1_1.1713972967178.N
[I0424 15:36:07718216, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07718216, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:07718293, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07718293, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:07825774, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07825774, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:07825990, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07825990, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:07930982, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:07930982, 19577 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 15:36:07931306, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:07931306, 19577 milvus_embedding_store.py:336] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus ENTRY delete()
[I0424 15:36:08295144, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Concept does not exist
[I0424 15:36:08295144, 19577 milvus_embedding_store.py:339] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus collection SupportAI_Concept does not exist
[I0424 15:36:08297111, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:08297111, 19577 milvus_embedding_store.py:342] request_id=e0259f18-0f0e-45d3-8ab9-40447a841f34 Milvus EXIT delete()
[I0424 15:36:08297805, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0424 15:36:08297805, 19577 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0424 15:36:08298193, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 15:36:08298193, 19577 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 15:36:08301853, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0424 15:36:08301853, 19577 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0424 15:36:08302642, 19577 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0424 15:36:08302642, 19577 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0424 15:36:08305137, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:08305137, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:08305556, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:08305556, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:08305753, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:08305753, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:08417355, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:08417355, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:08417892, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:08417892, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:08418137, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:08418137, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:08418375, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:08418375, 19577 pyTigerGraphBase.py:379] entry: _post
[I0424 15:36:08418586, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:08418586, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:08922268, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:08922268, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:08922782, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:08922782, 19577 pyTigerGraphBase.py:387] exit: _post
[I0424 15:36:08922872, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:08922872, 19577 pyTigerGraphBase.py:84] entry: __init__
[I0424 15:36:08922978, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:08922978, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:08923140, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:08923140, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09028885, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09028885, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09029088, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09029088, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09029178, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:09029178, 19577 pyTigerGraphBase.py:203] exit: __init__
[I0424 15:36:09029535, 19577 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7
[I0424 15:36:09029535, 19577 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7
[I0424 15:36:09030170, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:09030170, 19577 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 15:36:09030329, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:09030329, 19577 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 15:36:09030574, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:09030574, 19577 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 15:36:09030712, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09030712, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09030792, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09030792, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09137204, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09137204, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09137450, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09137450, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09137545, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:09137545, 19577 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 15:36:09137678, 19577 tg_proxy.py:53] request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7 query ECC_Status started with RESTPP ID 65537.RESTPP_1_1.1713972969134.N
[I0424 15:36:09137678, 19577 tg_proxy.py:53] request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7 query ECC_Status started with RESTPP ID 65537.RESTPP_1_1.1713972969134.N
[I0424 15:36:09137877, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09137877, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09137966, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09137966, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09249622, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09249622, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09249821, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09249821, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09249960, 19577 tg_proxy.py:62] request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7 query ECC_Status completed successfully with RESTPP ID 65537.RESTPP_1_1.1713972969134.N
[I0424 15:36:09249960, 19577 tg_proxy.py:62] request_id=4f776e52-2bd9-49ad-a0cf-c67a630615a7 query ECC_Status completed successfully with RESTPP ID 65537.RESTPP_1_1.1713972969134.N
[I0424 15:36:09250156, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09250156, 19577 pyTigerGraphBase.py:342] entry: _get
[I0424 15:36:09250243, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09250243, 19577 pyTigerGraphBase.py:256] entry: _req
[I0424 15:36:09361608, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09361608, 19577 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 15:36:09361860, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 15:36:09361860, 19577 pyTigerGraphBase.py:350] exit: _get
[I0424 16:06:37589417, 20560 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:06:37589417, 20560 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:06:37589642, 20560 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:06:37589642, 20560 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:06:38379967, 20560 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:06:38379967, 20560 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:06:38380293, 20560 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:06:38380293, 20560 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:06:38760429, 20560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:06:38760429, 20560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:06:39675361, 20560 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:06:39675361, 20560 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:06:39675647, 20560 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:06:39675647, 20560 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:06:39970024, 20560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:06:39970024, 20560 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:06:52578036, 20589 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:06:52578036, 20589 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:06:52578235, 20589 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:06:52578235, 20589 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:06:53360790, 20589 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:06:53360790, 20589 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:06:53361154, 20589 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:06:53361154, 20589 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:06:53661455, 20589 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:06:53661455, 20589 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:06:54523040, 20589 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:06:54523040, 20589 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:06:54523975, 20589 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:06:54523975, 20589 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:06:54850327, 20589 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:06:54850327, 20589 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:07:28485874, 20690 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:07:28485874, 20690 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:07:28486055, 20690 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:07:28486055, 20690 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:07:29197018, 20690 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:07:29197018, 20690 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:07:29197353, 20690 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:07:29197353, 20690 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:07:29517246, 20690 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:07:29517246, 20690 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:07:30444408, 20690 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:07:30444408, 20690 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:07:30446547, 20690 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:07:30446547, 20690 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:07:30772663, 20690 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:07:30772663, 20690 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:12:24192620, 20841 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:12:24192620, 20841 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:12:24192787, 20841 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:12:24192787, 20841 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:12:24893899, 20841 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:12:24893899, 20841 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:12:24894222, 20841 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:12:24894222, 20841 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:12:25239215, 20841 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:12:25239215, 20841 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:12:26143224, 20841 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:12:26143224, 20841 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:12:26144063, 20841 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:12:26144063, 20841 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:12:26466939, 20841 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:12:26466939, 20841 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:12:46962852, 20891 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:12:46962852, 20891 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:12:46963028, 20891 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:12:46963028, 20891 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:12:47612014, 20891 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:12:47612014, 20891 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:12:47612326, 20891 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:12:47612326, 20891 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:12:47928093, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:12:47928093, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:12:48804221, 20891 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:12:48804221, 20891 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:12:48806257, 20891 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:12:48806257, 20891 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:12:49112099, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:12:49112099, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:19:45387410, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=b34c74be-58e4-40ce-888c-eb38e728e1e5
[I0424 16:19:45387410, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=b34c74be-58e4-40ce-888c-eb38e728e1e5
[I0424 16:19:45390759, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:19:45.390619\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"FAILURE\", \"requestId\": \"b34c74be-58e4-40ce-888c-eb38e728e1e5\"}"
[I0424 16:19:45390759, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:19:45.390619\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"FAILURE\", \"requestId\": \"b34c74be-58e4-40ce-888c-eb38e728e1e5\"}"
[I0424 16:20:07855459, 20891 main.py:71] /SupportAI/supportai/force_update ENTRY request_id=ef1991f5-0c8e-4266-9bfc-f51d74a3c9bb
[I0424 16:20:07855459, 20891 main.py:71] /SupportAI/supportai/force_update ENTRY request_id=ef1991f5-0c8e-4266-9bfc-f51d74a3c9bb
[I0424 16:20:07861942, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:20:07.861785\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/force_update\", \"actionName\": \"/SupportAI/supportai/force_update\", \"status\": \"FAILURE\", \"requestId\": \"ef1991f5-0c8e-4266-9bfc-f51d74a3c9bb\"}"
[I0424 16:20:07861942, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:20:07.861785\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/force_update\", \"actionName\": \"/SupportAI/supportai/force_update\", \"status\": \"FAILURE\", \"requestId\": \"ef1991f5-0c8e-4266-9bfc-f51d74a3c9bb\"}"
[I0424 16:20:17423958, 20891 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=07c5571c-2a2e-4c0f-ac46-118335037559
[I0424 16:20:17423958, 20891 main.py:71] /SupportAI/supportai/forceupdate ENTRY request_id=07c5571c-2a2e-4c0f-ac46-118335037559
[I0424 16:21:29319320, 20891 main.py:128] Authenticating with id token
[I0424 16:21:29319320, 20891 main.py:128] Authenticating with id token
[I0424 16:21:29320915, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:21:29320915, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:21:29322588, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:21:29322588, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:21:29323362, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:29323362, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:29754918, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:21:29754918, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:21:29755316, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:21:29755316, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:21:29755630, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:21:29755630, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:21:29755895, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:21:29755895, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:21:29756322, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:29756322, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:54099898, 20891 main.py:128] Authenticating with id token
[I0424 16:21:54099898, 20891 main.py:128] Authenticating with id token
[I0424 16:21:54102302, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:21:54102302, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:21:54102944, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:21:54102944, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:21:54103256, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:54103256, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:54238278, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:21:54238278, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:21:54239174, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:21:54239174, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:21:54239715, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:21:54239715, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:21:54241592, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:21:54241592, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:21:54242110, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:21:54242110, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:22:16271422, 20891 main.py:128] Authenticating with id token
[I0424 16:22:16271422, 20891 main.py:128] Authenticating with id token
[I0424 16:22:16272582, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:22:16272582, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:22:16273205, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:22:16273205, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:22:16273717, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:22:16273717, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:22:16397788, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:22:16397788, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:22:16398491, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:22:16398491, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:22:16398844, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:22:16398844, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:22:16399311, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:22:16399311, 20891 pyTigerGraphGSQL.py:40] entry: gsql
[I0424 16:22:16399845, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:22:16399845, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:23:43787880, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=2f6cb563-65a3-428f-9888-3888014fe834
[I0424 16:23:43787880, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=2f6cb563-65a3-428f-9888-3888014fe834
[I0424 16:23:43793736, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:23:43.793546\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"FAILURE\", \"requestId\": \"2f6cb563-65a3-428f-9888-3888014fe834\"}"
[I0424 16:23:43793736, 20891 main.py:97] "{\"timestamp\": \"2024-04-24T16:23:43.793546\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"FAILURE\", \"requestId\": \"2f6cb563-65a3-428f-9888-3888014fe834\"}"
[I0424 16:24:21557653, 20891 main.py:118] Authenticating with basic auth
[I0424 16:24:21557653, 20891 main.py:118] Authenticating with basic auth
[I0424 16:24:21561039, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:24:21561039, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:24:21562435, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:21562435, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:21563016, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:21563016, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:21723632, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:21723632, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:21724983, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:21724983, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:21725532, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:24:21725532, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:24:21726133, 20891 pyTigerGraphBase.py:379] entry: _post
[I0424 16:24:21726133, 20891 pyTigerGraphBase.py:379] entry: _post
[I0424 16:24:21726630, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:21726630, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:22395576, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:22395576, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:22397076, 20891 pyTigerGraphBase.py:387] exit: _post
[I0424 16:24:22397076, 20891 pyTigerGraphBase.py:387] exit: _post
[I0424 16:24:22397520, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:24:22397520, 20891 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:24:22397979, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:22397979, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:22398315, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:22398315, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:22530475, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:22530475, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:22531548, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:22531548, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:22532522, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:24:22532522, 20891 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:24:22533057, 20891 util.py:94] Connected to TigerGraph with password
[I0424 16:24:22533057, 20891 util.py:94] Connected to TigerGraph with password
[I0424 16:24:22535479, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=78172580-a287-457b-9580-a877268549cd
[I0424 16:24:22535479, 20891 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=78172580-a287-457b-9580-a877268549cd
[I0424 16:24:22881919, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0424 16:24:22881919, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0424 16:24:23545657, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0424 16:24:23545657, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0424 16:24:23972217, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0424 16:24:23972217, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0424 16:24:24327911, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0424 16:24:24327911, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0424 16:24:24693678, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0424 16:24:24693678, 20891 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0424 16:24:24793304, 20891 openai_service.py:25] request_id=78172580-a287-457b-9580-a877268549cd instantiated OpenAI model_name=gpt-4-0613
[I0424 16:24:24793304, 20891 openai_service.py:25] request_id=78172580-a287-457b-9580-a877268549cd instantiated OpenAI model_name=gpt-4-0613
[I0424 16:24:24793821, 20891 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0424 16:24:24793821, 20891 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0424 16:24:24794052, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:24794052, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:24794157, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:24794157, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:24794250, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:24794250, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:24976108, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:24976108, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:24976641, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:24976641, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:24977125, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:24977125, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:24977479, 20891 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0424 16:24:24977479, 20891 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0424 16:24:24977967, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:24977967, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:24978146, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:24978146, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:24978313, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:24978313, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25145811, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:25145811, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:25146342, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25146342, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25146685, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:25146685, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:25147060, 20891 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0424 16:24:25147060, 20891 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0424 16:24:25147555, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:25147555, 20891 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0424 16:24:25147769, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25147769, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25147978, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25147978, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25314361, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:25314361, 20891 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0424 16:24:25314891, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25314891, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25315168, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:25315168, 20891 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0424 16:24:25315527, 20891 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0424 16:24:25315527, 20891 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0424 16:24:25316005, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0424 16:24:25316005, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0424 16:24:25316420, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:25316420, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:25316628, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:25316628, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:25316878, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:25316878, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:25317092, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25317092, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25317298, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25317298, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25428475, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25428475, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25428762, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25428762, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25428905, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:25428905, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:25429103, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1713975865441.N
[I0424 16:24:25429103, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1713975865441.N
[I0424 16:24:25429366, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25429366, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25429510, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25429510, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25540719, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25540719, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25540919, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25540919, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25541016, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25541016, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25541102, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25541102, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25648578, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25648578, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25648886, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25648886, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25649044, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25649044, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25649171, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25649171, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25757395, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25757395, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25757794, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25757794, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25862087, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25862087, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25862820, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25862820, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25984818, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25984818, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:25985391, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25985391, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:25985759, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1713975865441.N
[I0424 16:24:25985759, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1713975865441.N
[I0424 16:24:25986283, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25986283, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:25986509, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:25986509, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26101725, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26101725, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26102852, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26102852, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26205017, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:26205017, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:26207055, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:26207055, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:26582111, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Document does not exist
[I0424 16:24:26582111, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Document does not exist
[I0424 16:24:26582513, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:26582513, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:26582710, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0424 16:24:26582710, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0424 16:24:26582893, 20891 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0424 16:24:26582893, 20891 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0424 16:24:26583074, 20891 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0424 16:24:26583074, 20891 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0424 16:24:26583356, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 16:24:26583356, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 16:24:26583578, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0424 16:24:26583578, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0424 16:24:26583972, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0424 16:24:26583972, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0424 16:24:26584188, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:26584188, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:26584318, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:26584318, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:26584449, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:26584449, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:26584563, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26584563, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26584683, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26584683, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26697693, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26697693, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26697940, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26697940, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26698051, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:26698051, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:26698201, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1713975866710.N
[I0424 16:24:26698201, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1713975866710.N
[I0424 16:24:26698430, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26698430, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26698533, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26698533, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26801705, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26801705, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26801986, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26801986, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26802131, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26802131, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26802261, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26802261, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26908217, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26908217, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:26908573, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26908573, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:26908762, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26908762, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:26908936, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:26908936, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27017323, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27017323, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27017807, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27017807, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27123249, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27123249, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27124607, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27124607, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27245317, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27245317, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27245943, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27245943, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27246190, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27246190, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27246402, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27246402, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27364837, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27364837, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27365385, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27365385, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27365627, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27365627, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27365843, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27365843, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27483715, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27483715, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27484256, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27484256, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27589634, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27589634, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27590035, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27590035, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27696243, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27696243, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27696495, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27696495, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27696650, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1713975866710.N
[I0424 16:24:27696650, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1713975866710.N
[I0424 16:24:27696877, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27696877, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:27696975, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27696975, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:27804842, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27804842, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:27805151, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27805151, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:27907401, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:27907401, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:27907794, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:27907794, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:28294943, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_DocumentChunk does not exist
[I0424 16:24:28294943, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_DocumentChunk does not exist
[I0424 16:24:28295880, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:28295880, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:28296405, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0424 16:24:28296405, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0424 16:24:28296792, 20891 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0424 16:24:28296792, 20891 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0424 16:24:28297157, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 16:24:28297157, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 16:24:28297520, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0424 16:24:28297520, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0424 16:24:28297968, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0424 16:24:28297968, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0424 16:24:28298704, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:28298704, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:28298949, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:28298949, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:28299201, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:28299201, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:28299407, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28299407, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28299611, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28299611, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28417226, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28417226, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28417806, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28417806, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28418030, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:28418030, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:28418344, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 196613.RESTPP_1_1.1713975868427.N
[I0424 16:24:28418344, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 196613.RESTPP_1_1.1713975868427.N
[I0424 16:24:28418868, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28418868, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28419073, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28419073, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28534389, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28534389, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28535323, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28535323, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28535586, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28535586, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28536146, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28536146, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28652541, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28652541, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28654124, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28654124, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28654417, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28654417, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28654632, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28654632, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28769238, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28769238, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:28770204, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28770204, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:28875680, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28875680, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:28876902, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:28876902, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29012700, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29012700, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29013675, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29013675, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29014579, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 196613.RESTPP_1_1.1713975868427.N
[I0424 16:24:29014579, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 196613.RESTPP_1_1.1713975868427.N
[I0424 16:24:29015341, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29015341, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29015628, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29015628, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29146041, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29146041, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29147500, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29147500, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29253912, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:29253912, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:29259389, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:29259389, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:29670269, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Entity does not exist
[I0424 16:24:29670269, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Entity does not exist
[I0424 16:24:29670936, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:29670936, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:29671169, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0424 16:24:29671169, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0424 16:24:29671364, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 16:24:29671364, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 16:24:29671543, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0424 16:24:29671543, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0424 16:24:29671784, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0424 16:24:29671784, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0424 16:24:29672019, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:29672019, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:29672138, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:29672138, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:29672274, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:29672274, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:29672387, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29672387, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29672501, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29672501, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29810485, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29810485, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29812078, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29812078, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29812239, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:29812239, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:29812433, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 65543.RESTPP_1_1.1713975869797.N
[I0424 16:24:29812433, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 65543.RESTPP_1_1.1713975869797.N
[I0424 16:24:29812784, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29812784, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29812906, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29812906, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29934140, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29934140, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:29934770, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29934770, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:29935072, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29935072, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:29935342, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:29935342, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30062678, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30062678, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30062881, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30062881, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30062969, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30062969, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30063046, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30063046, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30166788, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30166788, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30167009, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30167009, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30267660, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30267660, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30267906, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30267906, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30375267, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30375267, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30375464, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30375464, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30375580, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 65543.RESTPP_1_1.1713975869797.N
[I0424 16:24:30375580, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 65543.RESTPP_1_1.1713975869797.N
[I0424 16:24:30375745, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30375745, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30375819, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30375819, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30481028, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30481028, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:30481231, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30481231, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:30585668, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:30585668, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:30586059, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:30586059, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:30950375, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Relationship does not exist
[I0424 16:24:30950375, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Relationship does not exist
[I0424 16:24:30951112, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:30951112, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:30951340, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0424 16:24:30951340, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0424 16:24:30951564, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 16:24:30951564, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 16:24:30951770, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0424 16:24:30951770, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0424 16:24:30952043, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0424 16:24:30952043, 20891 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0424 16:24:30952335, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:30952335, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:30952474, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:30952474, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:30952640, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:30952640, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:30952779, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30952779, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:30952913, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:30952913, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31063970, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31063970, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31064224, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31064224, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31064321, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:31064321, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:31064463, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 196616.RESTPP_1_1.1713975871076.N
[I0424 16:24:31064463, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates started with RESTPP ID 196616.RESTPP_1_1.1713975871076.N
[I0424 16:24:31064691, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31064691, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31064782, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31064782, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31170719, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31170719, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31171096, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31171096, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31171293, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31171293, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31171474, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31171474, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31291520, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31291520, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31291934, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31291934, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31292146, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31292146, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31292321, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31292321, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31405414, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31405414, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31405736, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31405736, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31511331, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31511331, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31512220, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31512220, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31648941, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31648941, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31649911, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31649911, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31650328, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 196616.RESTPP_1_1.1713975871076.N
[I0424 16:24:31650328, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query Scan_For_Updates completed successfully with RESTPP ID 196616.RESTPP_1_1.1713975871076.N
[I0424 16:24:31651561, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31651561, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:31651941, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31651941, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:31780481, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31780481, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:31781073, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31781073, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:31894140, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:31894140, 20891 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0424 16:24:31895724, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:31895724, 20891 milvus_embedding_store.py:336] request_id=78172580-a287-457b-9580-a877268549cd Milvus ENTRY delete()
[I0424 16:24:32274951, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Concept does not exist
[I0424 16:24:32274951, 20891 milvus_embedding_store.py:339] request_id=78172580-a287-457b-9580-a877268549cd Milvus collection SupportAI_Concept does not exist
[I0424 16:24:32276486, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:32276486, 20891 milvus_embedding_store.py:342] request_id=78172580-a287-457b-9580-a877268549cd Milvus EXIT delete()
[I0424 16:24:32276968, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0424 16:24:32276968, 20891 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0424 16:24:32277472, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0424 16:24:32277472, 20891 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0424 16:24:32277931, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0424 16:24:32277931, 20891 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0424 16:24:32279975, 20891 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0424 16:24:32279975, 20891 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0424 16:24:32281100, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:32281100, 20891 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0424 16:24:32281453, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:32281453, 20891 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0424 16:24:32281898, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:32281898, 20891 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0424 16:24:32282273, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32282273, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32282649, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32282649, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32415472, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32415472, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32416021, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:32416021, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:32416255, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:32416255, 20891 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0424 16:24:32416580, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query ECC_Status started with RESTPP ID 65546.RESTPP_1_1.1713975872418.N
[I0424 16:24:32416580, 20891 tg_proxy.py:53] request_id=78172580-a287-457b-9580-a877268549cd query ECC_Status started with RESTPP ID 65546.RESTPP_1_1.1713975872418.N
[I0424 16:24:32417043, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32417043, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32417258, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32417258, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32542525, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32542525, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32543439, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:32543439, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:32543859, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query ECC_Status completed successfully with RESTPP ID 65546.RESTPP_1_1.1713975872418.N
[I0424 16:24:32543859, 20891 tg_proxy.py:62] request_id=78172580-a287-457b-9580-a877268549cd query ECC_Status completed successfully with RESTPP ID 65546.RESTPP_1_1.1713975872418.N
[I0424 16:24:32545103, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32545103, 20891 pyTigerGraphBase.py:342] entry: _get
[I0424 16:24:32545378, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32545378, 20891 pyTigerGraphBase.py:256] entry: _req
[I0424 16:24:32665294, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32665294, 20891 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:24:32665495, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:24:32665495, 20891 pyTigerGraphBase.py:350] exit: _get
[I0424 16:26:52490268, 21268 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:26:52490268, 21268 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:26:52490512, 21268 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:26:52490512, 21268 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:26:53242226, 21268 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:26:53242226, 21268 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:26:53242583, 21268 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:26:53242583, 21268 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:26:53573359, 21268 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:26:53573359, 21268 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:26:54407677, 21268 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:26:54407677, 21268 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:26:54408094, 21268 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:26:54408094, 21268 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:26:54728412, 21268 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:26:54728412, 21268 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:26:56952960, 21282 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:26:56952960, 21282 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:26:56953157, 21282 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:26:56953157, 21282 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:26:57617448, 21282 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:26:57617448, 21282 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:26:57617771, 21282 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:26:57617771, 21282 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:26:57904892, 21282 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:26:57904892, 21282 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:26:58708573, 21282 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:26:58708573, 21282 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:26:58709200, 21282 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:26:58709200, 21282 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:26:59000718, 21282 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:26:59000718, 21282 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:05995704, 21312 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:05995704, 21312 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:05996508, 21312 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:05996508, 21312 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:06678462, 21312 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:06678462, 21312 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:06678789, 21312 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:06678789, 21312 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:07004891, 21312 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:07004891, 21312 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:07918354, 21312 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:07918354, 21312 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:07920395, 21312 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:07920395, 21312 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:08240621, 21312 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:08240621, 21312 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:08888470, 21312 main.py:71] /docs ENTRY request_id=4025c41a-69e7-409f-a133-a5f9987b767e
[I0424 16:27:08888470, 21312 main.py:71] /docs ENTRY request_id=4025c41a-69e7-409f-a133-a5f9987b767e
[I0424 16:27:08992350, 21312 main.py:71] /openapi.json ENTRY request_id=fc9d40ed-e63e-4a39-98c9-9fb55d2d5f1d
[I0424 16:27:08992350, 21312 main.py:71] /openapi.json ENTRY request_id=fc9d40ed-e63e-4a39-98c9-9fb55d2d5f1d
[I0424 16:27:14374216, 21312 main.py:71] /docs ENTRY request_id=e36b80bd-c9ef-4410-8b34-b98da6621bfd
[I0424 16:27:14374216, 21312 main.py:71] /docs ENTRY request_id=e36b80bd-c9ef-4410-8b34-b98da6621bfd
[I0424 16:27:14437232, 21312 main.py:71] /openapi.json ENTRY request_id=18455a84-ab21-4bb6-a02c-e6517a00a7de
[I0424 16:27:14437232, 21312 main.py:71] /openapi.json ENTRY request_id=18455a84-ab21-4bb6-a02c-e6517a00a7de
[I0424 16:27:25484278, 21312 main.py:71] /{graphname}/supportai/auth_check ENTRY request_id=000474e6-39b7-4365-a827-5b79203f8540
[I0424 16:27:25484278, 21312 main.py:71] /{graphname}/supportai/auth_check ENTRY request_id=000474e6-39b7-4365-a827-5b79203f8540
[I0424 16:27:25486739, 21312 main.py:97] "{\"timestamp\": \"2024-04-24T16:27:25.486571\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/{graphname}/supportai/auth_check\", \"actionName\": \"/{graphname}/supportai/auth_check\", \"status\": \"FAILURE\", \"requestId\": \"000474e6-39b7-4365-a827-5b79203f8540\"}"
[I0424 16:27:25486739, 21312 main.py:97] "{\"timestamp\": \"2024-04-24T16:27:25.486571\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/{graphname}/supportai/auth_check\", \"actionName\": \"/{graphname}/supportai/auth_check\", \"status\": \"FAILURE\", \"requestId\": \"000474e6-39b7-4365-a827-5b79203f8540\"}"
[I0424 16:27:25497944, 21312 main.py:118] Authenticating with basic auth
[I0424 16:27:25497944, 21312 main.py:118] Authenticating with basic auth
[I0424 16:27:25498664, 21312 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:27:25498664, 21312 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:27:25499050, 21312 pyTigerGraphBase.py:342] entry: _get
[I0424 16:27:25499050, 21312 pyTigerGraphBase.py:342] entry: _get
[I0424 16:27:25499357, 21312 pyTigerGraphBase.py:256] entry: _req
[I0424 16:27:25499357, 21312 pyTigerGraphBase.py:256] entry: _req
[I0424 16:27:25670341, 21312 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:27:25670341, 21312 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:27:25672233, 21312 pyTigerGraphBase.py:350] exit: _get
[I0424 16:27:25672233, 21312 pyTigerGraphBase.py:350] exit: _get
[I0424 16:27:25673135, 21312 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:27:25673135, 21312 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:27:25673804, 21312 pyTigerGraphBase.py:379] entry: _post
[I0424 16:27:25673804, 21312 pyTigerGraphBase.py:379] entry: _post
[I0424 16:27:25674612, 21312 pyTigerGraphBase.py:256] entry: _req
[I0424 16:27:25674612, 21312 pyTigerGraphBase.py:256] entry: _req
[I0424 16:27:47294022, 21347 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:47294022, 21347 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:47294207, 21347 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:47294207, 21347 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:47966227, 21347 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:47966227, 21347 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:47966545, 21347 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:47966545, 21347 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:48270098, 21347 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:48270098, 21347 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:49191280, 21347 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:49191280, 21347 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:49191721, 21347 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:49191721, 21347 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:49468204, 21347 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:49468204, 21347 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:52727898, 21359 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:52727898, 21359 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 16:27:52728079, 21359 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:52728079, 21359 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 16:27:53368384, 21359 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:53368384, 21359 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 16:27:53368723, 21359 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:53368723, 21359 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 16:27:53718689, 21359 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:53718689, 21359 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 16:27:56035034, 21359 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:56035034, 21359 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 16:27:56036609, 21359 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:56036609, 21359 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 16:27:56718990, 21359 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:56718990, 21359 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 16:27:56972195, 21359 main.py:71] /docs ENTRY request_id=fde7b885-b23b-4e6d-9217-f185c96e8ba1
[I0424 16:27:56972195, 21359 main.py:71] /docs ENTRY request_id=fde7b885-b23b-4e6d-9217-f185c96e8ba1
[I0424 16:27:57079398, 21359 main.py:71] /openapi.json ENTRY request_id=aada7055-f682-4f77-aff8-7b49f7180f97
[I0424 16:27:57079398, 21359 main.py:71] /openapi.json ENTRY request_id=aada7055-f682-4f77-aff8-7b49f7180f97
[I0424 16:28:03133455, 21359 main.py:118] Authenticating with basic auth
[I0424 16:28:03133455, 21359 main.py:118] Authenticating with basic auth
[I0424 16:28:03134983, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:03134983, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:03136508, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:03136508, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:03137509, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03137509, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03269206, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03269206, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03269989, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:03269989, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:03270544, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:03270544, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:03271002, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 16:28:03271002, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 16:28:03271393, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03271393, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03668534, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03668534, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03669446, 21359 pyTigerGraphBase.py:387] exit: _post
[I0424 16:28:03669446, 21359 pyTigerGraphBase.py:387] exit: _post
[I0424 16:28:03669844, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:03669844, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:03671562, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:03671562, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:03672074, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03672074, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:03795117, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03795117, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:03796502, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:03796502, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:03797513, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:03797513, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:03798228, 21359 util.py:94] Connected to TigerGraph with password
[I0424 16:28:03798228, 21359 util.py:94] Connected to TigerGraph with password
[I0424 16:28:03803679, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=d1bafbdb-82af-43b1-9fc0-2af21dde2778
[I0424 16:28:03803679, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=d1bafbdb-82af-43b1-9fc0-2af21dde2778
[I0424 16:28:03810733, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:03.810580\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"SUCCESS\", \"requestId\": \"d1bafbdb-82af-43b1-9fc0-2af21dde2778\"}"
[I0424 16:28:03810733, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:03.810580\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"SUCCESS\", \"requestId\": \"d1bafbdb-82af-43b1-9fc0-2af21dde2778\"}"
[I0424 16:28:09312725, 21359 main.py:71] /docs ENTRY request_id=a55aba13-2f30-4a6f-ad1c-a54ee3ec180d
[I0424 16:28:09312725, 21359 main.py:71] /docs ENTRY request_id=a55aba13-2f30-4a6f-ad1c-a54ee3ec180d
[I0424 16:28:09506825, 21359 main.py:71] /openapi.json ENTRY request_id=fdfde827-0cff-44f1-89db-299da99a7503
[I0424 16:28:09506825, 21359 main.py:71] /openapi.json ENTRY request_id=fdfde827-0cff-44f1-89db-299da99a7503
[I0424 16:28:17140015, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=8d0b0f4b-29f4-40c1-80aa-586c93471cfd
[I0424 16:28:17140015, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=8d0b0f4b-29f4-40c1-80aa-586c93471cfd
[I0424 16:28:17143912, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:17.142486\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"FAILURE\", \"requestId\": \"8d0b0f4b-29f4-40c1-80aa-586c93471cfd\"}"
[I0424 16:28:17143912, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:17.142486\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"FAILURE\", \"requestId\": \"8d0b0f4b-29f4-40c1-80aa-586c93471cfd\"}"
[I0424 16:28:18772415, 21359 main.py:118] Authenticating with basic auth
[I0424 16:28:18772415, 21359 main.py:118] Authenticating with basic auth
[I0424 16:28:18789004, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:18789004, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:18789473, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:18789473, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:18789607, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:18789607, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:18930447, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:18930447, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:18931287, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:18931287, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:18931566, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:18931566, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:18931864, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 16:28:18931864, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 16:28:18932097, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:18932097, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:19416117, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:19416117, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:19417225, 21359 pyTigerGraphBase.py:387] exit: _post
[I0424 16:28:19417225, 21359 pyTigerGraphBase.py:387] exit: _post
[I0424 16:28:19417524, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:19417524, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 16:28:19417925, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:19417925, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 16:28:19418318, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:19418318, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 16:28:19548873, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:19548873, 21359 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0424 16:28:19549974, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:19549974, 21359 pyTigerGraphBase.py:350] exit: _get
[I0424 16:28:19550268, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:19550268, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 16:28:19550701, 21359 util.py:94] Connected to TigerGraph with password
[I0424 16:28:19550701, 21359 util.py:94] Connected to TigerGraph with password
[I0424 16:28:19552825, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=59741372-2ada-46b4-96d1-4ae104ff11ff
[I0424 16:28:19552825, 21359 main.py:71] /SupportAI/supportai/auth_check ENTRY request_id=59741372-2ada-46b4-96d1-4ae104ff11ff
[I0424 16:28:19567523, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:19.567341\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"SUCCESS\", \"requestId\": \"59741372-2ada-46b4-96d1-4ae104ff11ff\"}"
[I0424 16:28:19567523, 21359 main.py:97] "{\"timestamp\": \"2024-04-24T16:28:19.567341\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/auth_check\", \"actionName\": \"/SupportAI/supportai/auth_check\", \"status\": \"SUCCESS\", \"requestId\": \"59741372-2ada-46b4-96d1-4ae104ff11ff\"}"
[I0424 18:03:52417493, 21359 main.py:118] Authenticating with basic auth
[I0424 18:03:52417493, 21359 main.py:118] Authenticating with basic auth
[I0424 18:03:52419396, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 18:03:52419396, 21359 pyTigerGraphBase.py:84] entry: __init__
[I0424 18:03:52419718, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 18:03:52419718, 21359 pyTigerGraphBase.py:342] entry: _get
[I0424 18:03:52420075, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 18:03:52420075, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 18:03:52561813, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 18:03:52561813, 21359 pyTigerGraphBase.py:203] exit: __init__
[I0424 18:03:52563434, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 18:03:52563434, 21359 pyTigerGraphBase.py:379] entry: _post
[I0424 18:03:52563759, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 18:03:52563759, 21359 pyTigerGraphBase.py:256] entry: _req
[I0424 18:22:38892649, 22986 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 18:22:38892649, 22986 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 18:22:38896226, 22986 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 18:22:38896226, 22986 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 18:22:39663778, 22986 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 18:22:39663778, 22986 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 18:22:39664138, 22986 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 18:22:39664138, 22986 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 18:22:41396990, 23067 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 18:22:41396990, 23067 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0424 18:22:41397187, 23067 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 18:22:41397187, 23067 utils.py:160] NumExpr defaulting to 8 threads.
[I0424 18:22:42077411, 23067 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 18:22:42077411, 23067 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0424 18:22:42077761, 23067 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 18:22:42077761, 23067 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0424 18:22:42433028, 23067 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 18:22:42433028, 23067 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0424 18:22:43309258, 23067 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 18:22:43309258, 23067 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0424 18:22:43310953, 23067 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 18:22:43310953, 23067 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0424 18:22:43636702, 23067 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0424 18:22:43636702, 23067 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0425 11:59:18157660, 36593 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0425 11:59:18157660, 36593 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0425 11:59:18157842, 36593 utils.py:160] NumExpr defaulting to 8 threads.
[I0425 11:59:18157842, 36593 utils.py:160] NumExpr defaulting to 8 threads.
[I0425 11:59:18909390, 36593 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0425 11:59:18909390, 36593 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0425 11:59:18909713, 36593 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0425 11:59:18909713, 36593 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0425 11:59:19284275, 36593 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0425 11:59:19284275, 36593 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0425 11:59:20247703, 36593 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0425 11:59:20247703, 36593 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0425 11:59:20250276, 36593 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0425 11:59:20250276, 36593 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0425 11:59:20665340, 36593 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0425 11:59:20665340, 36593 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0425 11:59:32492686, 36635 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0425 11:59:32492686, 36635 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0425 11:59:32492876, 36635 utils.py:160] NumExpr defaulting to 8 threads.
[I0425 11:59:32492876, 36635 utils.py:160] NumExpr defaulting to 8 threads.
[I0425 11:59:33238864, 36635 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0425 11:59:33238864, 36635 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0425 11:59:33239167, 36635 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0425 11:59:33239167, 36635 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0425 11:59:33560386, 36635 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0425 11:59:33560386, 36635 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0425 11:59:34447343, 36635 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0425 11:59:34447343, 36635 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0425 11:59:34448843, 36635 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0425 11:59:34448843, 36635 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0425 11:59:34772261, 36635 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0425 11:59:34772261, 36635 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 11:10:27418704, 68628 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:27418704, 68628 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:27418877, 68628 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:27418877, 68628 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:28199820, 68628 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:28199820, 68628 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:28200160, 68628 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:28200160, 68628 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:28564536, 68628 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:28564536, 68628 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:29456199, 68628 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 11:10:29456199, 68628 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 11:10:29457684, 68628 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 11:10:29457684, 68628 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 11:10:29765241, 68628 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 11:10:29765241, 68628 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 11:10:38747415, 68850 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:38747415, 68850 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:38747600, 68850 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:38747600, 68850 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:39447699, 68850 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:39447699, 68850 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:39448014, 68850 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:39448014, 68850 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:39809247, 68850 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:39809247, 68850 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:41670334, 68877 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:41670334, 68877 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 11:10:41670511, 68877 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:41670511, 68877 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 11:10:42306800, 68877 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:42306800, 68877 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 11:10:42307125, 68877 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:42307125, 68877 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 11:10:42619142, 68877 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:42619142, 68877 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 11:10:43478533, 68877 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 11:10:43478533, 68877 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 11:10:43480456, 68877 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 11:10:43480456, 68877 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 11:10:43793210, 68877 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 11:10:43793210, 68877 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 13:55:06052930, 71602 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 13:55:06052930, 71602 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 13:55:06053447, 71602 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 13:55:06053447, 71602 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 13:55:06711869, 71602 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 13:55:06711869, 71602 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 13:55:06712180, 71602 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 13:55:06712180, 71602 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 13:55:07712023, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 13:55:07712023, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 13:55:08902345, 71602 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 13:55:08902345, 71602 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 13:55:08904116, 71602 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 13:55:08904116, 71602 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 13:55:09214817, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 13:55:09214817, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 14:32:06709127, 71602 main.py:118] Authenticating with basic auth
[I0426 14:32:06709127, 71602 main.py:118] Authenticating with basic auth
[I0426 14:32:06710189, 71602 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:32:06710189, 71602 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:32:06710718, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:06710718, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:06711110, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:06711110, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:06877590, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:06877590, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:06878615, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:06878615, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:06878891, 71602 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:32:06878891, 71602 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:32:06879206, 71602 pyTigerGraphBase.py:379] entry: _post
[I0426 14:32:06879206, 71602 pyTigerGraphBase.py:379] entry: _post
[I0426 14:32:06879484, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:06879484, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:07578255, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:07578255, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:07581189, 71602 pyTigerGraphBase.py:387] exit: _post
[I0426 14:32:07581189, 71602 pyTigerGraphBase.py:387] exit: _post
[I0426 14:32:07582018, 71602 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:32:07582018, 71602 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:32:07583962, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:07583962, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:07584465, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:07584465, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:07710025, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:07710025, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:07711002, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:07711002, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:07711274, 71602 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:32:07711274, 71602 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:32:07711726, 71602 util.py:94] Connected to TigerGraph with password
[I0426 14:32:07711726, 71602 util.py:94] Connected to TigerGraph with password
[I0426 14:32:07717557, 71602 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414
[I0426 14:32:07717557, 71602 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414
[I0426 14:32:08093420, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:32:08093420, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:32:08710383, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:32:08710383, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:32:09181388, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:32:09181388, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:32:09598998, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:32:09598998, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:32:09991716, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:32:09991716, 71602 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:32:10082657, 71602 openai_service.py:25] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:32:10082657, 71602 openai_service.py:25] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:32:10082963, 71602 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:32:10082963, 71602 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:32:10083113, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10083113, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10083205, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10083205, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10083289, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10083289, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10264894, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10264894, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10265393, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10265393, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10265871, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10265871, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10266191, 71602 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:32:10266191, 71602 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:32:10266617, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10266617, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10266802, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10266802, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10266975, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10266975, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10457487, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10457487, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10458016, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10458016, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10458297, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10458297, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10458637, 71602 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:32:10458637, 71602 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:32:10459060, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10459060, 71602 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:32:10459248, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10459248, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10459422, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10459422, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10646893, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10646893, 71602 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:32:10648469, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10648469, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10648997, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10648997, 71602 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:32:10649529, 71602 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:32:10649529, 71602 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:32:10650879, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:32:10650879, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:32:10651416, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:10651416, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:10651659, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:10651659, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:10651895, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:10651895, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:10652099, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10652099, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10652303, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10652303, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10768210, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:10768210, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:10768620, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10768620, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10768720, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:10768720, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:10768871, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714141930789.N
[I0426 14:32:10768871, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714141930789.N
[I0426 14:32:10769171, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10769171, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10769266, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10769266, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10893075, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:10893075, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:10894077, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10894077, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:10894346, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10894346, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:10894899, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:10894899, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11015090, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11015090, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11015355, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11015355, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11015476, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11015476, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11015613, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11015613, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11126492, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11126492, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11126682, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11126682, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11230335, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11230335, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11230596, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11230596, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11347188, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11347188, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11347418, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11347418, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11347556, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714141930789.N
[I0426 14:32:11347556, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714141930789.N
[I0426 14:32:11347762, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11347762, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11347848, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11347848, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11455840, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11455840, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:11456202, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11456202, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:11562117, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:11562117, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:11563063, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:11563063, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:11914671, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Document does not exist
[I0426 14:32:11914671, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Document does not exist
[I0426 14:32:11916646, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:11916646, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:11917893, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:32:11917893, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:32:11922862, 71602 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:32:11922862, 71602 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:32:11926862, 71602 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:32:11926862, 71602 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:32:11927251, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:32:11927251, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:32:11927573, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0426 14:32:11927573, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0426 14:32:11929975, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:32:11929975, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:32:11930405, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:11930405, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:11930551, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:11930551, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:11930710, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:11930710, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:11930849, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11930849, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:11930981, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:11930981, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12078552, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12078552, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12078919, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12078919, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12079016, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:12079016, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:12079161, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714141932077.N
[I0426 14:32:12079161, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714141932077.N
[I0426 14:32:12079419, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12079419, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12079509, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12079509, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12201673, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12201673, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12202576, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12202576, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12202991, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12202991, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12203235, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12203235, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12354503, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12354503, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12359744, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12359744, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12360469, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12360469, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12360718, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12360718, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12504139, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12504139, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12505422, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12505422, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12610137, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12610137, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12611909, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12611909, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12743860, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12743860, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12744351, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12744351, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12744646, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714141932077.N
[I0426 14:32:12744646, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714141932077.N
[I0426 14:32:12745056, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12745056, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:12745231, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12745231, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:12852446, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12852446, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:12852649, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12852649, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:12958198, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:12958198, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:12958873, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:12958873, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:13340592, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:32:13340592, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:32:13341590, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:13341590, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:13342103, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:32:13342103, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:32:13342429, 71602 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:32:13342429, 71602 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:32:13342999, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:32:13342999, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:32:13343429, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0426 14:32:13343429, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0426 14:32:13343809, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:32:13343809, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:32:13344171, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:13344171, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:13344360, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:13344360, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:13344567, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:13344567, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:13344745, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13344745, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13344917, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13344917, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13455326, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13455326, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13455627, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13455627, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13455764, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:13455764, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:13455958, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714141933481.N
[I0426 14:32:13455958, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714141933481.N
[I0426 14:32:13456234, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13456234, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13456362, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13456362, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13564412, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13564412, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13564778, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13564778, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13564923, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13564923, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13565052, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13565052, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13677749, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13677749, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13678089, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13678089, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13678258, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13678258, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13678406, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13678406, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13794932, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13794932, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:13795516, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13795516, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:13901158, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13901158, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:13902545, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:13902545, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14027699, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14027699, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14028324, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14028324, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14028669, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714141933481.N
[I0426 14:32:14028669, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714141933481.N
[I0426 14:32:14029170, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14029170, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14029389, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14029389, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14159554, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14159554, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14160112, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14160112, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14266379, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:14266379, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:14271179, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:14271179, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:14662183, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Entity does not exist
[I0426 14:32:14662183, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Entity does not exist
[I0426 14:32:14663575, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:14663575, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:14663972, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:32:14663972, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:32:14664272, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:32:14664272, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:32:14664560, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0426 14:32:14664560, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0426 14:32:14664913, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:32:14664913, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:32:14665334, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:14665334, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:14665553, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:14665553, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:14665811, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:14665811, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:14666029, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14666029, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14666237, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14666237, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14787475, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14787475, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14787974, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14787974, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14788135, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:14788135, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:14788369, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714141934808.N
[I0426 14:32:14788369, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714141934808.N
[I0426 14:32:14788785, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14788785, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14788943, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14788943, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14914449, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14914449, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:14914995, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14914995, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:14915194, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14915194, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:14915368, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:14915368, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15053283, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15053283, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15053722, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15053722, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15053840, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15053840, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15053934, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15053934, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15175066, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15175066, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15175577, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15175577, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15281226, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15281226, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15282500, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15282500, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15404603, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15404603, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15405263, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15405263, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15405816, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714141934808.N
[I0426 14:32:15405816, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714141934808.N
[I0426 14:32:15407020, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15407020, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:15407540, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15407540, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:15523382, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15523382, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:15524237, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15524237, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:15630262, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:15630262, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:15631674, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:15631674, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:16099554, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Relationship does not exist
[I0426 14:32:16099554, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Relationship does not exist
[I0426 14:32:16107527, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:16107527, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:16107998, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:32:16107998, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:32:16108393, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:32:16108393, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:32:16108738, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0426 14:32:16108738, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0426 14:32:16109194, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:32:16109194, 71602 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:32:16109631, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:16109631, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:16109852, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:16109852, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:16110103, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:16110103, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:16110325, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16110325, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16110535, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16110535, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16227992, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16227992, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16228912, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16228912, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16229160, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:16229160, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:16229713, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714141936250.N
[I0426 14:32:16229713, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714141936250.N
[I0426 14:32:16230193, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16230193, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16230384, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16230384, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16352051, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16352051, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16352667, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16352667, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16352909, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16352909, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16353123, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16353123, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16474868, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16474868, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16475415, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16475415, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16475618, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16475618, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16475802, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16475802, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16601679, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16601679, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16602065, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16602065, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16707365, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16707365, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16707871, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16707871, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16824947, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16824947, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16825285, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16825285, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16825497, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714141936250.N
[I0426 14:32:16825497, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714141936250.N
[I0426 14:32:16825873, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16825873, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:16826029, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16826029, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:16938080, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16938080, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:16938589, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:16938589, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17044236, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:17044236, 71602 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:32:17045245, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:17045245, 71602 milvus_embedding_store.py:336] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus ENTRY delete()
[I0426 14:32:17453423, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Concept does not exist
[I0426 14:32:17453423, 71602 milvus_embedding_store.py:339] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus collection SupportAI_Concept does not exist
[I0426 14:32:17454367, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:17454367, 71602 milvus_embedding_store.py:342] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 Milvus EXIT delete()
[I0426 14:32:17454737, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:32:17454737, 71602 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:32:17455104, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:32:17455104, 71602 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:32:17455441, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0426 14:32:17455441, 71602 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0426 14:32:17455883, 71602 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:32:17455883, 71602 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:32:17456409, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:17456409, 71602 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:32:17456642, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:17456642, 71602 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:32:17456883, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:17456883, 71602 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:32:17457097, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17457097, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17457434, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17457434, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17586336, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17586336, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17586732, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17586732, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17586834, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:17586834, 71602 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:32:17587006, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query ECC_Status started with RESTPP ID 131081.RESTPP_1_1.1714141937596.N
[I0426 14:32:17587006, 71602 tg_proxy.py:53] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query ECC_Status started with RESTPP ID 131081.RESTPP_1_1.1714141937596.N
[I0426 14:32:17587266, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17587266, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17587362, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17587362, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17710059, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17710059, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17710921, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17710921, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17711848, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query ECC_Status completed successfully with RESTPP ID 131081.RESTPP_1_1.1714141937596.N
[I0426 14:32:17711848, 71602 tg_proxy.py:62] request_id=5a16f29f-9a2e-4f70-88ff-7333a0137414 query ECC_Status completed successfully with RESTPP ID 131081.RESTPP_1_1.1714141937596.N
[I0426 14:32:17719316, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17719316, 71602 pyTigerGraphBase.py:342] entry: _get
[I0426 14:32:17723562, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17723562, 71602 pyTigerGraphBase.py:256] entry: _req
[I0426 14:32:17849432, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17849432, 71602 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:32:17849650, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:32:17849650, 71602 pyTigerGraphBase.py:350] exit: _get
[I0426 14:48:01730412, 72256 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 14:48:01730412, 72256 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 14:48:01730584, 72256 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 14:48:01730584, 72256 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 14:48:02403241, 72256 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 14:48:02403241, 72256 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 14:48:02403589, 72256 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 14:48:02403589, 72256 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 14:48:07736818, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 14:48:07736818, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 14:48:08658747, 72256 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 14:48:08658747, 72256 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 14:48:08660152, 72256 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 14:48:08660152, 72256 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 14:48:08993110, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 14:48:08993110, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 14:49:10118321, 72256 main.py:118] Authenticating with basic auth
[I0426 14:49:10118321, 72256 main.py:118] Authenticating with basic auth
[I0426 14:49:10119365, 72256 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:49:10119365, 72256 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:49:10119702, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:10119702, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:10119955, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:10119955, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:10298228, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:10298228, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:10299270, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:10299270, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:10299612, 72256 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:49:10299612, 72256 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:49:10299958, 72256 pyTigerGraphBase.py:379] entry: _post
[I0426 14:49:10299958, 72256 pyTigerGraphBase.py:379] entry: _post
[I0426 14:49:10300243, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:10300243, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:10931887, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:10931887, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:10932823, 72256 pyTigerGraphBase.py:387] exit: _post
[I0426 14:49:10932823, 72256 pyTigerGraphBase.py:387] exit: _post
[I0426 14:49:10933330, 72256 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:49:10933330, 72256 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:49:10935503, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:10935503, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:10937981, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:10937981, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:11081735, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:11081735, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:11083357, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:11083357, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:11084292, 72256 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:49:11084292, 72256 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:49:11085758, 72256 util.py:94] Connected to TigerGraph with password
[I0426 14:49:11085758, 72256 util.py:94] Connected to TigerGraph with password
[I0426 14:49:11089296, 72256 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=9fb2f555-7927-4a85-a96d-304f7be46853
[I0426 14:49:11089296, 72256 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=9fb2f555-7927-4a85-a96d-304f7be46853
[I0426 14:49:11459213, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:49:11459213, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:49:11886045, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:49:11886045, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:49:12301826, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:49:12301826, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:49:12710936, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:49:12710936, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:49:13112937, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:49:13112937, 72256 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:49:13224712, 72256 openai_service.py:25] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:49:13224712, 72256 openai_service.py:25] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:49:13225096, 72256 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:49:13225096, 72256 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:49:13225301, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13225301, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13225541, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13225541, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13225911, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13225911, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13401511, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13401511, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13402251, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13402251, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13403796, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13403796, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13405590, 72256 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:49:13405590, 72256 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:49:13409845, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13409845, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13410191, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13410191, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13410452, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13410452, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13585265, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13585265, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13586114, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13586114, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13586727, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13586727, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13587398, 72256 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:49:13587398, 72256 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:49:13588531, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13588531, 72256 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:49:13599806, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13599806, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13600844, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13600844, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13779966, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13779966, 72256 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:49:13782398, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13782398, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13783032, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13783032, 72256 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:49:13785587, 72256 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:49:13785587, 72256 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:49:13786451, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:49:13786451, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:49:13787092, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:13787092, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:13787359, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:13787359, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:13788188, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:13788188, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:13788449, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13788449, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13788776, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13788776, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13938835, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:13938835, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:13939476, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13939476, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:13942001, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:13942001, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:13942527, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714142954018.N
[I0426 14:49:13942527, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714142954018.N
[I0426 14:49:13943306, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13943306, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:13943720, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:13943720, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14089187, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14089187, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14089412, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14089412, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14089506, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14089506, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14089594, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14089594, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14199293, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14199293, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14199532, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14199532, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14199636, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14199636, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14199726, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14199726, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14309242, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14309242, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14309434, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14309434, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14410715, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14410715, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14410932, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14410932, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14519429, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14519429, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14519636, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14519636, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14519777, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714142954018.N
[I0426 14:49:14519777, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714142954018.N
[I0426 14:49:14519972, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14519972, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:14520059, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14520059, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:14631849, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14631849, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:14632091, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14632091, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:14737494, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:14737494, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:14743830, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:14743830, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:15122682, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Document does not exist
[I0426 14:49:15122682, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Document does not exist
[I0426 14:49:15124564, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:15124564, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:15125021, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:49:15125021, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:49:15125366, 72256 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:49:15125366, 72256 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:49:15125707, 72256 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:49:15125707, 72256 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:49:15126046, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:49:15126046, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:49:15126397, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0426 14:49:15126397, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0426 14:49:15127103, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:49:15127103, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:49:15127536, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:15127536, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:15127648, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:15127648, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:15127744, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:15127744, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:15127822, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15127822, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15127916, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15127916, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15243290, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15243290, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15243848, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15243848, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15244043, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:15244043, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:15244321, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714142955321.N
[I0426 14:49:15244321, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714142955321.N
[I0426 14:49:15244771, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15244771, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15244951, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15244951, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15367090, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15367090, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15367679, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15367679, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15367921, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15367921, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15368143, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15368143, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15491753, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15491753, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15492249, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15492249, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15492448, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15492448, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15492626, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15492626, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15617757, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15617757, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15618348, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15618348, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15721185, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15721185, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15722370, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15722370, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15849459, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15849459, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15850097, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15850097, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15850445, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714142955321.N
[I0426 14:49:15850445, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714142955321.N
[I0426 14:49:15850984, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15850984, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:15851208, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15851208, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:15972164, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15972164, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:15972713, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:15972713, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16080982, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:16080982, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:16082408, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:16082408, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:16420451, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:49:16420451, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:49:16422395, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:16422395, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:16423278, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:49:16423278, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:49:16423806, 72256 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:49:16423806, 72256 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:49:16424172, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:49:16424172, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:49:16424512, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0426 14:49:16424512, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0426 14:49:16424952, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:49:16424952, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:49:16425368, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:16425368, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:16425586, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:16425586, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:16425822, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:16425822, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:16426030, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16426030, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16426237, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16426237, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16549178, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16549178, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16549734, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16549734, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16549957, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:16549957, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:16550277, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714142956624.N
[I0426 14:49:16550277, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714142956624.N
[I0426 14:49:16550814, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16550814, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16551026, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16551026, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16666166, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16666166, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16666659, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16666659, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16666851, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16666851, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16667024, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16667024, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16786630, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16786630, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16787242, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16787242, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16787499, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16787499, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:16787737, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16787737, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:16913167, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16913167, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:16913688, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:16913688, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17019197, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17019197, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17020635, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17020635, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17146993, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17146993, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17147456, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17147456, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17147639, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714142956624.N
[I0426 14:49:17147639, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714142956624.N
[I0426 14:49:17147981, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17147981, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17148083, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17148083, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17267899, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17267899, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17269081, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17269081, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17373580, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:17373580, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:17376519, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:17376519, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:17755498, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Entity does not exist
[I0426 14:49:17755498, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Entity does not exist
[I0426 14:49:17756284, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:17756284, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:17756865, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:49:17756865, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:49:17757766, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:49:17757766, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:49:17759222, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0426 14:49:17759222, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0426 14:49:17759737, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:49:17759737, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:49:17760156, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:17760156, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:17760403, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:17760403, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:17760730, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:17760730, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:17761061, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17761061, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17761245, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17761245, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17875245, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17875245, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17876207, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17876207, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17876391, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:17876391, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:17876618, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714142957955.N
[I0426 14:49:17876618, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714142957955.N
[I0426 14:49:17876999, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17876999, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17877137, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17877137, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17997678, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17997678, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:17998232, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17998232, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:17998466, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17998466, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:17998694, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:17998694, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18116954, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18116954, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18117393, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18117393, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18117642, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18117642, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18117947, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18117947, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18235780, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18235780, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18236545, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18236545, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18342293, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18342293, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18344016, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18344016, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18468289, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18468289, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18468783, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18468783, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18469061, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714142957955.N
[I0426 14:49:18469061, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714142957955.N
[I0426 14:49:18469476, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18469476, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:18469661, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18469661, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:18595577, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18595577, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:18596648, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18596648, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:18702656, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:18702656, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:18704580, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:18704580, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:19066083, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Relationship does not exist
[I0426 14:49:19066083, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Relationship does not exist
[I0426 14:49:19066927, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:19066927, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:19067309, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:49:19067309, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:49:19067661, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:49:19067661, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:49:19067945, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0426 14:49:19067945, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0426 14:49:19068299, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:49:19068299, 72256 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:49:19068660, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:19068660, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:19068839, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:19068839, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:19069038, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:19069038, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:19069210, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19069210, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19069377, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19069377, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19205423, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19205423, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19206008, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19206008, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19206237, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:19206237, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:19206566, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714142959279.N
[I0426 14:49:19206566, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714142959279.N
[I0426 14:49:19207031, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19207031, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19207245, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19207245, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19329594, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19329594, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19329978, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19329978, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19330086, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19330086, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19330174, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19330174, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19447451, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19447451, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19448425, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19448425, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19448700, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19448700, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19449301, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19449301, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19570292, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19570292, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19570835, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19570835, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19676187, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19676187, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19676761, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19676761, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19797553, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19797553, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19798122, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19798122, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19798459, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714142959279.N
[I0426 14:49:19798459, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714142959279.N
[I0426 14:49:19798964, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19798964, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:19799177, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19799177, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:19920924, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19920924, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:19921455, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:19921455, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20027700, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:20027700, 72256 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:49:20029454, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:20029454, 72256 milvus_embedding_store.py:336] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus ENTRY delete()
[I0426 14:49:20397861, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Concept does not exist
[I0426 14:49:20397861, 72256 milvus_embedding_store.py:339] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus collection SupportAI_Concept does not exist
[I0426 14:49:20400681, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:20400681, 72256 milvus_embedding_store.py:342] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 Milvus EXIT delete()
[I0426 14:49:20401176, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:49:20401176, 72256 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:49:20401694, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:49:20401694, 72256 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:49:20402059, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0426 14:49:20402059, 72256 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0426 14:49:20402598, 72256 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:49:20402598, 72256 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:49:20403517, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:20403517, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:20404035, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:20404035, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:20404299, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:20404299, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:20404524, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20404524, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20404745, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20404745, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20531734, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20531734, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20532265, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20532265, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20532481, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:20532481, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:20532795, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 131081.RESTPP_1_1.1714142960602.N
[I0426 14:49:20532795, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 131081.RESTPP_1_1.1714142960602.N
[I0426 14:49:20533277, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20533277, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20533483, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20533483, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20651922, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20651922, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20652690, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20652690, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20652960, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 131081.RESTPP_1_1.1714142960602.N
[I0426 14:49:20652960, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 131081.RESTPP_1_1.1714142960602.N
[I0426 14:49:20653349, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20653349, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20653490, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20653490, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20772586, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20772586, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:20773748, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20773748, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:20880360, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:20880360, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:20881497, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:20881497, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:20881859, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:20881859, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:20882160, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20882160, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:20882459, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:20882459, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21001113, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21001113, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21002084, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21002084, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21002632, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21002632, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21002948, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 65546.RESTPP_1_1.1714142961081.N
[I0426 14:49:21002948, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 65546.RESTPP_1_1.1714142961081.N
[I0426 14:49:21003388, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21003388, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21003540, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21003540, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21125130, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21125130, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21126099, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21126099, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21126798, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 65546.RESTPP_1_1.1714142961081.N
[I0426 14:49:21126798, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 65546.RESTPP_1_1.1714142961081.N
[I0426 14:49:21127314, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21127314, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21127498, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21127498, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21242365, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21242365, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21242577, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21242577, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21344204, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:21344204, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:21344622, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:21344622, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:21344828, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:21344828, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:21345006, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21345006, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21345188, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21345188, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21466247, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21466247, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21467536, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21467536, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21467754, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21467754, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21468023, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 10.RESTPP_1_1.1714142961545.N
[I0426 14:49:21468023, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 10.RESTPP_1_1.1714142961545.N
[I0426 14:49:21468462, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21468462, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21468641, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21468641, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21587147, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21587147, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21587731, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21587731, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21588196, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 10.RESTPP_1_1.1714142961545.N
[I0426 14:49:21588196, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 10.RESTPP_1_1.1714142961545.N
[I0426 14:49:21588783, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21588783, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21589015, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21589015, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21709645, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21709645, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21710082, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21710082, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21816403, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:21816403, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:21817749, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:21817749, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:21818344, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:21818344, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:21818687, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21818687, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21818989, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21818989, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21954370, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21954370, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:21955561, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21955561, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:21955797, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21955797, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:21956096, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 196619.RESTPP_1_1.1714142962034.N
[I0426 14:49:21956096, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 196619.RESTPP_1_1.1714142962034.N
[I0426 14:49:21956533, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21956533, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:21956704, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:21956704, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22074548, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22074548, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22075055, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22075055, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22075345, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 196619.RESTPP_1_1.1714142962034.N
[I0426 14:49:22075345, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 196619.RESTPP_1_1.1714142962034.N
[I0426 14:49:22075751, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22075751, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22075929, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22075929, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22197774, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22197774, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22198194, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22198194, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22304200, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:22304200, 72256 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:49:22305498, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:22305498, 72256 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:49:22306084, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:22306084, 72256 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:49:22306609, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22306609, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22307118, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22307118, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22428171, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22428171, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22428714, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22428714, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22428934, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:22428934, 72256 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:49:22429248, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 131084.RESTPP_1_1.1714142962506.N
[I0426 14:49:22429248, 72256 tg_proxy.py:53] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status started with RESTPP ID 131084.RESTPP_1_1.1714142962506.N
[I0426 14:49:22429717, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22429717, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22429925, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22429925, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22558228, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22558228, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22558762, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22558762, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22559118, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 131084.RESTPP_1_1.1714142962506.N
[I0426 14:49:22559118, 72256 tg_proxy.py:62] request_id=9fb2f555-7927-4a85-a96d-304f7be46853 query ECC_Status completed successfully with RESTPP ID 131084.RESTPP_1_1.1714142962506.N
[I0426 14:49:22559605, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22559605, 72256 pyTigerGraphBase.py:342] entry: _get
[I0426 14:49:22559821, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22559821, 72256 pyTigerGraphBase.py:256] entry: _req
[I0426 14:49:22682516, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22682516, 72256 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:49:22683113, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22683113, 72256 pyTigerGraphBase.py:350] exit: _get
[I0426 14:49:22794252, 72256 main.py:97] "{\"timestamp\": \"2024-04-26T14:49:22.793854\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"9fb2f555-7927-4a85-a96d-304f7be46853\"}"
[I0426 14:49:22794252, 72256 main.py:97] "{\"timestamp\": \"2024-04-26T14:49:22.793854\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"9fb2f555-7927-4a85-a96d-304f7be46853\"}"
[I0426 14:50:50954180, 72812 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 14:50:50954180, 72812 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 14:50:50954381, 72812 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 14:50:50954381, 72812 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 14:50:51632645, 72812 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 14:50:51632645, 72812 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 14:50:51632976, 72812 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 14:50:51632976, 72812 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 14:50:51995215, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 14:50:51995215, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 14:50:52899287, 72812 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 14:50:52899287, 72812 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 14:50:52900093, 72812 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 14:50:52900093, 72812 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 14:50:53272397, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 14:50:53272397, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 14:51:00132926, 72812 main.py:118] Authenticating with basic auth
[I0426 14:51:00132926, 72812 main.py:118] Authenticating with basic auth
[I0426 14:51:00134060, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:51:00134060, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:51:00134577, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:00134577, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:00134961, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:00134961, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:00494194, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:00494194, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:00495870, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:00495870, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:00497813, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:51:00497813, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:51:00498305, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 14:51:00498305, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 14:51:00498579, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:00498579, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:01014778, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:01014778, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:01016839, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 14:51:01016839, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 14:51:01017155, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:51:01017155, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 14:51:01022601, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:01022601, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:01023124, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:01023124, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:01140634, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:01140634, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:01141105, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:01141105, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:01141365, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:51:01141365, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 14:51:01141714, 72812 util.py:94] Connected to TigerGraph with password
[I0426 14:51:01141714, 72812 util.py:94] Connected to TigerGraph with password
[I0426 14:51:01142769, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57
[I0426 14:51:01142769, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57
[I0426 14:51:01441732, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:51:01441732, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Document
[I0426 14:51:01844624, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:51:01844624, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_DocumentChunk
[I0426 14:51:02241456, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:51:02241456, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Entity
[I0426 14:51:02651904, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:51:02651904, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Relationship
[I0426 14:51:03053001, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:51:03053001, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=SupportAI_Concept
[I0426 14:51:03183497, 72812 openai_service.py:25] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:51:03183497, 72812 openai_service.py:25] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 instantiated OpenAI model_name=gpt-4-0613
[I0426 14:51:03184127, 72812 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:51:03184127, 72812 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 14:51:03184388, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03184388, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03184522, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03184522, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03184830, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03184830, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03345500, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03345500, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03346040, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03346040, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03346522, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03346522, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03346848, 72812 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:51:03346848, 72812 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 14:51:03347347, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03347347, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03347560, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03347560, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03347763, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03347763, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03538950, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03538950, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03539769, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03539769, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03541467, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03541467, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03542375, 72812 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:51:03542375, 72812 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 14:51:03543380, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03543380, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 14:51:03543765, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03543765, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03544140, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03544140, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03736287, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03736287, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 14:51:03739882, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03739882, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03740353, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03740353, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 14:51:03740835, 72812 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:51:03740835, 72812 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname SupportAI 
[I0426 14:51:03741918, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:51:03741918, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 14:51:03742609, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:03742609, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:03742865, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:03742865, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:03743304, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:03743304, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:03743894, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03743894, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03744250, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03744250, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03878460, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:03878460, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:03879484, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03879484, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:03879730, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:03879730, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:03880124, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908289.RESTPP_1_1.1714143063959.N
[I0426 14:51:03880124, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908289.RESTPP_1_1.1714143063959.N
[I0426 14:51:03880817, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03880817, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:03881062, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:03881062, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04015785, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04015785, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04017569, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04017569, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04017929, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04017929, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04018479, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04018479, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04159468, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04159468, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04160291, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04160291, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04160558, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04160558, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04160958, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04160958, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04293711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04293711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04295374, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04295374, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04400796, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04400796, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04402265, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04402265, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04542329, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04542329, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04543108, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04543108, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04543809, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908289.RESTPP_1_1.1714143063959.N
[I0426 14:51:04543809, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908289.RESTPP_1_1.1714143063959.N
[I0426 14:51:04545868, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04545868, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:04546236, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04546236, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:04676936, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04676936, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:04678177, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04678177, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:04780250, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:04780250, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:04782056, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:04782056, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:05186318, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Document does not exist
[I0426 14:51:05186318, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Document does not exist
[I0426 14:51:05187873, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:05187873, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:05188295, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:51:05188295, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 14:51:05188682, 72812 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:51:05188682, 72812 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 14:51:05189060, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:51:05189060, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 14:51:05191384, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:51:05191384, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:51:05192381, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0426 14:51:05192381, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0426 14:51:05194120, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:51:05194120, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 14:51:05195185, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:05195185, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:05195482, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:05195482, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:05195776, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:05195776, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:05196050, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05196050, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05196293, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05196293, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05341092, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05341092, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05342221, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05342221, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05342722, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:05342722, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:05343264, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16777219.RESTPP_1_1.1714143065417.N
[I0426 14:51:05343264, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16777219.RESTPP_1_1.1714143065417.N
[I0426 14:51:05346818, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05346818, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05347734, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05347734, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05492662, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05492662, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05493056, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05493056, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05493200, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05493200, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05493322, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05493322, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05618085, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05618085, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05619009, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05619009, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05619414, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05619414, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05620509, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05620509, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05754093, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05754093, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05755120, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05755120, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05858259, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05858259, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05859311, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05859311, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05993973, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05993973, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:05994996, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05994996, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:05995460, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16777219.RESTPP_1_1.1714143065417.N
[I0426 14:51:05995460, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16777219.RESTPP_1_1.1714143065417.N
[I0426 14:51:05996311, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05996311, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:05997379, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:05997379, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06141939, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06141939, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06143524, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06143524, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06248517, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:06248517, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:06248884, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:06248884, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:06629156, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:51:06629156, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_DocumentChunk does not exist
[I0426 14:51:06630806, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:06630806, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:06631291, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:51:06631291, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 14:51:06631819, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:51:06631819, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 14:51:06632300, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:51:06632300, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:51:06632757, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0426 14:51:06632757, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0426 14:51:06633472, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:51:06633472, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 14:51:06634090, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:06634090, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:06634401, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:06634401, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:06635422, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:06635422, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:06636893, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06636893, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06637217, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06637217, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06768587, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06768587, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06770867, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06770867, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06771125, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:06771125, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:06773862, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908292.RESTPP_1_1.1714143066847.N
[I0426 14:51:06773862, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908292.RESTPP_1_1.1714143066847.N
[I0426 14:51:06774820, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06774820, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06775122, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06775122, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06905805, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06905805, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:06906784, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06906784, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:06907326, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06907326, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:06907617, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:06907617, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07063943, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07063943, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07065280, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07065280, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07065629, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07065629, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07065940, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07065940, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07202237, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07202237, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07203153, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07203153, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07308036, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07308036, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07309259, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07309259, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07445140, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07445140, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07446388, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07446388, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07446861, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908292.RESTPP_1_1.1714143066847.N
[I0426 14:51:07446861, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908292.RESTPP_1_1.1714143066847.N
[I0426 14:51:07447642, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07447642, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:07447936, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07447936, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:07590498, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07590498, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:07591451, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07591451, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:07696183, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:07696183, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:07698243, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:07698243, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:08110059, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Entity does not exist
[I0426 14:51:08110059, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Entity does not exist
[I0426 14:51:08111356, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:08111356, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:08111893, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:51:08111893, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 14:51:08112359, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:51:08112359, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:51:08112827, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0426 14:51:08112827, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0426 14:51:08113390, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:51:08113390, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 14:51:08113903, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:08113903, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:08114193, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:08114193, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:08114505, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:08114505, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:08114787, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08114787, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08115068, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08115068, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08233591, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08233591, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08234533, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08234533, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08234785, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:08234785, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:08235122, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16777222.RESTPP_1_1.1714143068318.N
[I0426 14:51:08235122, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16777222.RESTPP_1_1.1714143068318.N
[I0426 14:51:08235606, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08235606, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08235894, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08235894, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08370942, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08370942, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08372770, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08372770, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08373260, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08373260, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08374343, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08374343, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08489540, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08489540, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08490537, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08490537, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08491008, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08491008, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08491301, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08491301, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08630490, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08630490, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08630996, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08630996, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08736167, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08736167, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08737693, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08737693, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08879134, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08879134, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:08880098, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08880098, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:08880577, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16777222.RESTPP_1_1.1714143068318.N
[I0426 14:51:08880577, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16777222.RESTPP_1_1.1714143068318.N
[I0426 14:51:08881277, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08881277, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:08881559, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:08881559, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09023371, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09023371, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09024505, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09024505, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09130737, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:09130737, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:09132682, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:09132682, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:09540885, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Relationship does not exist
[I0426 14:51:09540885, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Relationship does not exist
[I0426 14:51:09542488, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:09542488, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:09542865, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:51:09542865, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 14:51:09543278, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:51:09543278, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:51:09543644, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0426 14:51:09543644, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0426 14:51:09544921, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:51:09544921, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 14:51:09545783, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:09545783, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:09546228, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:09546228, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:09546523, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:09546523, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:09546767, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09546767, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09547084, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09547084, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09672972, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09672972, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09675519, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09675519, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09675863, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:09675863, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:09676536, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908295.RESTPP_1_1.1714143069753.N
[I0426 14:51:09676536, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates started with RESTPP ID 16908295.RESTPP_1_1.1714143069753.N
[I0426 14:51:09677217, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09677217, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09677475, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09677475, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09813599, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09813599, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09814723, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09814723, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09815701, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09815701, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09815992, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09815992, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09946756, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09946756, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:09947997, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09947997, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:09957975, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09957975, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:09958433, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:09958433, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:10103440, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10103440, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10104466, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10104466, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10207620, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:10207620, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:10208811, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:10208811, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:10357930, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10357930, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10359005, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10359005, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10359812, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908295.RESTPP_1_1.1714143069753.N
[I0426 14:51:10359812, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query Scan_For_Updates completed successfully with RESTPP ID 16908295.RESTPP_1_1.1714143069753.N
[I0426 14:51:10360696, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:10360696, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:10364775, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:10364775, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:10502335, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10502335, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:10504984, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10504984, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:10607599, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:10607599, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 14:51:10609437, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:10609437, 72812 milvus_embedding_store.py:336] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus ENTRY delete()
[I0426 14:51:10995953, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Concept does not exist
[I0426 14:51:10995953, 72812 milvus_embedding_store.py:339] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus collection SupportAI_Concept does not exist
[I0426 14:51:11000226, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:11000226, 72812 milvus_embedding_store.py:342] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 Milvus EXIT delete()
[I0426 14:51:11001194, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:51:11001194, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 14:51:11001612, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 14:51:11001612, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 14:51:11002047, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0426 14:51:11002047, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0426 14:51:11002647, 72812 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:51:11002647, 72812 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname SupportAI. Success=False
[I0426 14:51:11003920, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:11003920, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:11004191, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:11004191, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:11004622, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:11004622, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:11004867, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11004867, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11005109, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11005109, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11134179, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11134179, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11135429, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11135429, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11136076, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:11136076, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:11138153, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16777225.RESTPP_1_1.1714143071218.N
[I0426 14:51:11138153, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16777225.RESTPP_1_1.1714143071218.N
[I0426 14:51:11142078, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11142078, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11142890, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11142890, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11265274, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11265274, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11265517, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11265517, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11265690, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16777225.RESTPP_1_1.1714143071218.N
[I0426 14:51:11265690, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16777225.RESTPP_1_1.1714143071218.N
[I0426 14:51:11265925, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11265925, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11266034, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11266034, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11377776, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11377776, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11378165, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11378165, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11482201, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:11482201, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:11482792, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:11482792, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:11483018, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:11483018, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:11483200, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11483200, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11483374, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11483374, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11652631, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11652631, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11654087, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11654087, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11654377, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:11654377, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:11654817, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16973834.RESTPP_1_1.1714143071733.N
[I0426 14:51:11654817, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16973834.RESTPP_1_1.1714143071733.N
[I0426 14:51:11655711, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11655711, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11655995, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11655995, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11785447, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11785447, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11787905, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11787905, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11788448, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16973834.RESTPP_1_1.1714143071733.N
[I0426 14:51:11788448, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16973834.RESTPP_1_1.1714143071733.N
[I0426 14:51:11789430, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11789430, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:11789788, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11789788, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:11935918, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11935918, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:11939061, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:11939061, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12043648, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:12043648, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:12045099, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:12045099, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:12045461, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:12045461, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:12045791, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12045791, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12046084, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12046084, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12185431, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12185431, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12186541, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12186541, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12187072, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:12187072, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:12187450, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16908298.RESTPP_1_1.1714143072267.N
[I0426 14:51:12187450, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16908298.RESTPP_1_1.1714143072267.N
[I0426 14:51:12188116, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12188116, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12188350, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12188350, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12329125, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12329125, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12329975, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12329975, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12330501, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16908298.RESTPP_1_1.1714143072267.N
[I0426 14:51:12330501, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16908298.RESTPP_1_1.1714143072267.N
[I0426 14:51:12331202, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12331202, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12331441, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12331441, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12461944, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12461944, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12467304, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12467304, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12573731, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:12573731, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:12575004, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:12575004, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:12575316, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:12575316, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:12575562, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12575562, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12575807, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12575807, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12708901, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12708901, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12709584, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12709584, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12709822, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:12709822, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:12710329, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16842763.RESTPP_1_1.1714143072787.N
[I0426 14:51:12710329, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16842763.RESTPP_1_1.1714143072787.N
[I0426 14:51:12711005, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12711005, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12711245, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12711245, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12838155, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12838155, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12838961, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12838961, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12839461, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16842763.RESTPP_1_1.1714143072787.N
[I0426 14:51:12839461, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16842763.RESTPP_1_1.1714143072787.N
[I0426 14:51:12840187, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12840187, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:12840426, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12840426, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:12983970, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12983970, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:12985590, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:12985590, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13088895, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:13088895, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 14:51:13089999, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:13089999, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 14:51:13090422, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:13090422, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 14:51:13090688, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13090688, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13090932, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13090932, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13229171, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13229171, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13230770, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13230770, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13231068, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:13231068, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 14:51:13231609, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16777228.RESTPP_1_1.1714143073311.N
[I0426 14:51:13231609, 72812 tg_proxy.py:53] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status started with RESTPP ID 16777228.RESTPP_1_1.1714143073311.N
[I0426 14:51:13232403, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13232403, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13232688, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13232688, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13374396, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13374396, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13381172, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13381172, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13386186, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16777228.RESTPP_1_1.1714143073311.N
[I0426 14:51:13386186, 72812 tg_proxy.py:62] request_id=e8c14e18-7b10-4642-9ee9-d80c9a847f57 query ECC_Status completed successfully with RESTPP ID 16777228.RESTPP_1_1.1714143073311.N
[I0426 14:51:13387364, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13387364, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 14:51:13387627, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13387627, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 14:51:13517397, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13517397, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 14:51:13521487, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13521487, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 14:51:13630238, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T14:51:13.629821\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"e8c14e18-7b10-4642-9ee9-d80c9a847f57\"}"
[I0426 14:51:13630238, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T14:51:13.629821\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"e8c14e18-7b10-4642-9ee9-d80c9a847f57\"}"
[I0426 15:03:39759374, 72812 main.py:118] Authenticating with basic auth
[I0426 15:03:39759374, 72812 main.py:118] Authenticating with basic auth
[I0426 15:03:39760262, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:03:39760262, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:03:39761448, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:39761448, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:39762050, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:39762050, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:39933490, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:39933490, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:39934588, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:39934588, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:39935028, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:03:39935028, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:03:39935454, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:03:39935454, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:03:39935815, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:39935815, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40635690, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40635690, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40636153, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:03:40636153, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:03:40636275, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:03:40636275, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:03:40636542, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40636542, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40636644, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40636644, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40755686, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40755686, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40756615, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:40756615, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:40756882, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:03:40756882, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:03:40757311, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:03:40757311, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:03:40773255, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf
[I0426 15:03:40773255, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf
[I0426 15:03:40775068, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:40775068, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:40775228, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:40775228, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:40775351, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:40775351, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:40775459, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40775459, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40775561, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40775561, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40881469, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40881469, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:40881773, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:40881773, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:40881928, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:40881928, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:40882142, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 65537.RESTPP_1_1.1714143820979.N
[I0426 15:03:40882142, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 65537.RESTPP_1_1.1714143820979.N
[I0426 15:03:40882460, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40882460, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:40882609, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:40882609, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41028652, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41028652, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41029189, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41029189, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41029514, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 65537.RESTPP_1_1.1714143820979.N
[I0426 15:03:41029514, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 65537.RESTPP_1_1.1714143820979.N
[I0426 15:03:41029936, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41029936, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41030102, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41030102, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41173228, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41173228, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41174031, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41174031, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41277130, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:41277130, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:41278096, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:41278096, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:41278449, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:41278449, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:41278701, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41278701, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41278951, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41278951, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41420103, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41420103, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41421366, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41421366, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41421873, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:41421873, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:41422834, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714143821514.N
[I0426 15:03:41422834, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714143821514.N
[I0426 15:03:41425836, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41425836, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41428971, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41428971, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41563808, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41563808, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41564777, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41564777, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41565346, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714143821514.N
[I0426 15:03:41565346, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714143821514.N
[I0426 15:03:41566142, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41566142, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41568529, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41568529, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41713216, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41713216, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41713781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41713781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41819500, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:41819500, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:41820701, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:41820701, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:41821075, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:41821075, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:41821355, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41821355, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41821656, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41821656, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41975692, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41975692, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:41976108, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41976108, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:41976241, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:41976241, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:41976423, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 196610.RESTPP_1_1.1714143822061.N
[I0426 15:03:41976423, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 196610.RESTPP_1_1.1714143822061.N
[I0426 15:03:41976723, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41976723, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:41976838, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:41976838, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42106846, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42106846, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42107656, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42107656, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42112206, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 196610.RESTPP_1_1.1714143822061.N
[I0426 15:03:42112206, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 196610.RESTPP_1_1.1714143822061.N
[I0426 15:03:42114631, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42114631, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42115767, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42115767, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42242711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42242711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42243713, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42243713, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42350510, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:42350510, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:42352679, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:42352679, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:42353289, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:42353289, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:42353810, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42353810, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42354325, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42354325, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42512657, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42512657, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42512937, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42512937, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42513065, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:42513065, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:42513227, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 131075.RESTPP_1_1.1714143822611.N
[I0426 15:03:42513227, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 131075.RESTPP_1_1.1714143822611.N
[I0426 15:03:42513861, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42513861, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42514002, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42514002, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42630422, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42630422, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42631131, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42631131, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42631860, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 131075.RESTPP_1_1.1714143822611.N
[I0426 15:03:42631860, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 131075.RESTPP_1_1.1714143822611.N
[I0426 15:03:42633197, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42633197, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42633820, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42633820, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42752491, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42752491, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42753290, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42753290, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42861735, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:42861735, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 15:03:42863108, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:42863108, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 15:03:42863748, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:42863748, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 15:03:42864179, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42864179, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:42864625, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42864625, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:42998043, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42998043, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:42998607, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42998607, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:42999226, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:42999226, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 15:03:42999958, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 65540.RESTPP_1_1.1714143823094.N
[I0426 15:03:42999958, 72812 tg_proxy.py:53] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status started with RESTPP ID 65540.RESTPP_1_1.1714143823094.N
[I0426 15:03:43000573, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:43000573, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:43000818, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:43000818, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:43121103, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:43121103, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:43121788, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:43121788, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:43122154, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 65540.RESTPP_1_1.1714143823094.N
[I0426 15:03:43122154, 72812 tg_proxy.py:62] request_id=de141cae-d28f-4cea-8dca-12d9cdd48aaf query ECC_Status completed successfully with RESTPP ID 65540.RESTPP_1_1.1714143823094.N
[I0426 15:03:43122687, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:43122687, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:03:43122935, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:43122935, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:03:43243972, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:43243972, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:03:43244474, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:43244474, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:03:43348085, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:03:43.347964\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"de141cae-d28f-4cea-8dca-12d9cdd48aaf\"}"
[I0426 15:03:43348085, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:03:43.347964\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"de141cae-d28f-4cea-8dca-12d9cdd48aaf\"}"
[I0426 15:04:30515372, 72812 main.py:118] Authenticating with basic auth
[I0426 15:04:30515372, 72812 main.py:118] Authenticating with basic auth
[I0426 15:04:30516882, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:04:30516882, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:04:30517494, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:04:30517494, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:04:30518040, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:30518040, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:30637657, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:30637657, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:30638188, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:04:30638188, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:04:30638447, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:04:30638447, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:04:30638701, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:04:30638701, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:04:30638937, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:30638937, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:31121365, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:31121365, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:31122688, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:04:31122688, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:04:31123407, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:04:31123407, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:04:31123795, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:04:31123795, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:04:31124119, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:31124119, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:31252851, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:31252851, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:04:31254165, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:04:31254165, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:04:31254784, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:04:31254784, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:04:31256955, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:04:31256955, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:04:31260288, 72812 main.py:71] /SupportAI/supportai/create_ingest ENTRY request_id=ec4a11b1-10c5-4eea-b386-339ce5965df9
[I0426 15:04:31260288, 72812 main.py:71] /SupportAI/supportai/create_ingest ENTRY request_id=ec4a11b1-10c5-4eea-b386-339ce5965df9
[I0426 15:04:31268776, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:04:31268776, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:04:31269704, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:31269704, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:04:31480618, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:04:31480618, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:20:20741180, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=785ef30b-baae-45d6-9d5f-8f39014d35b9
[I0426 15:20:20741180, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=785ef30b-baae-45d6-9d5f-8f39014d35b9
[I0426 15:20:28713521, 72812 main.py:71] /docs ENTRY request_id=9956e59b-3da8-4b88-8c0d-b6f3da666f14
[I0426 15:20:28713521, 72812 main.py:71] /docs ENTRY request_id=9956e59b-3da8-4b88-8c0d-b6f3da666f14
[I0426 15:20:28866202, 72812 main.py:71] /openapi.json ENTRY request_id=990ad157-f00e-4e5f-83b4-0bf6417c9052
[I0426 15:20:28866202, 72812 main.py:71] /openapi.json ENTRY request_id=990ad157-f00e-4e5f-83b4-0bf6417c9052
[I0426 15:20:36483354, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=237a454e-3352-43bf-bdc2-79887ad4251f
[I0426 15:20:36483354, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=237a454e-3352-43bf-bdc2-79887ad4251f
[I0426 15:20:59727781, 72812 main.py:71] /http://localhost/favicon.ico ENTRY request_id=6157d0bc-d779-4a4b-82a9-df0e6e680b6e
[I0426 15:20:59727781, 72812 main.py:71] /http://localhost/favicon.ico ENTRY request_id=6157d0bc-d779-4a4b-82a9-df0e6e680b6e
[I0426 15:20:59730721, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:20:59.730618\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/http://localhost/favicon.ico\", \"actionName\": \"/http://localhost/favicon.ico\", \"status\": \"FAILURE\", \"requestId\": \"6157d0bc-d779-4a4b-82a9-df0e6e680b6e\"}"
[I0426 15:20:59730721, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:20:59.730618\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/http://localhost/favicon.ico\", \"actionName\": \"/http://localhost/favicon.ico\", \"status\": \"FAILURE\", \"requestId\": \"6157d0bc-d779-4a4b-82a9-df0e6e680b6e\"}"
[I0426 15:20:59750664, 72812 main.py:71] /http://localhost/favicon.ico ENTRY request_id=cec9b90f-1159-4a87-ba25-3686888bb594
[I0426 15:20:59750664, 72812 main.py:71] /http://localhost/favicon.ico ENTRY request_id=cec9b90f-1159-4a87-ba25-3686888bb594
[I0426 15:20:59751802, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:20:59.751757\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/http://localhost/favicon.ico\", \"actionName\": \"/http://localhost/favicon.ico\", \"status\": \"FAILURE\", \"requestId\": \"cec9b90f-1159-4a87-ba25-3686888bb594\"}"
[I0426 15:20:59751802, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:20:59.751757\", \"userName\": \"\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/http://localhost/favicon.ico\", \"actionName\": \"/http://localhost/favicon.ico\", \"status\": \"FAILURE\", \"requestId\": \"cec9b90f-1159-4a87-ba25-3686888bb594\"}"
[I0426 15:21:02696281, 72812 main.py:118] Authenticating with basic auth
[I0426 15:21:02696281, 72812 main.py:118] Authenticating with basic auth
[I0426 15:21:02697876, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:21:02697876, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:21:02698460, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:21:02698460, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:21:02698712, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:02698712, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:02829785, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:02829785, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:02831289, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:21:02831289, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:21:02831655, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:21:02831655, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:21:02831982, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:21:02831982, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:21:02832270, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:02832270, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:03813913, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:03813913, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:03814283, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:21:03814283, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:21:03814406, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:21:03814406, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:21:03814536, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:21:03814536, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:21:03814623, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:03814623, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:03924667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:03924667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:21:03924966, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:21:03924966, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:21:03925108, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:21:03925108, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:21:03925271, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:21:03925271, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:21:03925872, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=9e5cf5f8-f0ea-41c2-a43f-c9ac20883489
[I0426 15:21:03925872, 72812 main.py:71] /Support/supportai/initialize ENTRY request_id=9e5cf5f8-f0ea-41c2-a43f-c9ac20883489
[I0426 15:21:03926879, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:03926879, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:03927282, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:03927282, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:07580442, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:21:07580442, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:21:07581912, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:21:07581912, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:21:07582969, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:07582969, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:07583497, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:07583497, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:10610521, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:21:10610521, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:21:10611770, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:21:10611770, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:21:10612611, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:10612611, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:21:10613588, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:21:10613588, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:22:45298525, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:22:45298525, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:22:45301323, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:22:45301323, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:22:45302676, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:22:45302676, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:22:45307809, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:22:45307809, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:23:20523079, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:23:20523079, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:23:20524210, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:23:20524210, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:23:20527147, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:23:20.526697\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/initialize\", \"actionName\": \"/Support/supportai/initialize\", \"status\": \"SUCCESS\", \"requestId\": \"9e5cf5f8-f0ea-41c2-a43f-c9ac20883489\"}"
[I0426 15:23:20527147, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:23:20.526697\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/initialize\", \"actionName\": \"/Support/supportai/initialize\", \"status\": \"SUCCESS\", \"requestId\": \"9e5cf5f8-f0ea-41c2-a43f-c9ac20883489\"}"
[I0426 15:24:06403323, 72812 main.py:118] Authenticating with basic auth
[I0426 15:24:06403323, 72812 main.py:118] Authenticating with basic auth
[I0426 15:24:06404956, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:06404956, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:06406372, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:06406372, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:06406990, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:06406990, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:06690617, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:06690617, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:06691471, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:06691471, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:06691734, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:06691734, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:06691995, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:24:06691995, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:24:06692428, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:06692428, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:07433899, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:07433899, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:07434497, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:24:07434497, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:24:07435047, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:07435047, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:07435326, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:07435326, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:07435644, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:07435644, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:07550756, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:07550756, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:07550983, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:07550983, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:07551112, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:07551112, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:07551258, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:24:07551258, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:24:07551721, 72812 main.py:71] /Support/supportai/create_ingest ENTRY request_id=fa2e9c94-7faf-465a-9a37-04c39cb34210
[I0426 15:24:07551721, 72812 main.py:71] /Support/supportai/create_ingest ENTRY request_id=fa2e9c94-7faf-465a-9a37-04c39cb34210
[I0426 15:24:07553031, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:07553031, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:07553274, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:07553274, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:08345986, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:24:08345986, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:24:08347923, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:24:08347923, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:24:08348376, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:08348376, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:08348876, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:08348876, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:08749497, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:24:08749497, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:24:08750638, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:24:08750638, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 15:24:08753562, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:24:08.753296\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"fa2e9c94-7faf-465a-9a37-04c39cb34210\"}"
[I0426 15:24:08753562, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T15:24:08.753296\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"fa2e9c94-7faf-465a-9a37-04c39cb34210\"}"
[I0426 15:24:55323369, 72812 main.py:118] Authenticating with basic auth
[I0426 15:24:55323369, 72812 main.py:118] Authenticating with basic auth
[I0426 15:24:55324099, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:55324099, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:55324475, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:55324475, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:55324771, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55324771, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55445740, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55445740, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55446466, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:55446466, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:55447221, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:55447221, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:55447815, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:24:55447815, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:24:55448347, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55448347, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55824246, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55824246, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55825642, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:24:55825642, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:24:55826238, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:55826238, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:24:55827075, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:55827075, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:24:55828421, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55828421, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55967476, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55967476, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:24:55968861, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:55968861, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:24:55969420, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:55969420, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:24:55970262, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:24:55970262, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:24:55973986, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=598f6cc0-9d43-4560-99ab-01d39b3af907
[I0426 15:24:55973986, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=598f6cc0-9d43-4560-99ab-01d39b3af907
[I0426 15:24:55980074, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:55980074, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:24:55981181, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:24:55981181, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:25:01186010, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:25:01186010, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:26:40433744, 72812 main.py:118] Authenticating with basic auth
[I0426 15:26:40433744, 72812 main.py:118] Authenticating with basic auth
[I0426 15:26:40435355, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:40435355, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:40437125, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:40437125, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:40437478, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:40437478, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:40599711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:40599711, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:40600899, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:40600899, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:40601417, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:40601417, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:40601873, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:26:40601873, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:26:40602231, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:40602231, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:41071176, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:41071176, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:41072099, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:26:41072099, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:26:41072617, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:41072617, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:41073095, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:41073095, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:41074183, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:41074183, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:41201281, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:41201281, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:41202776, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:41202776, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:41203384, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:41203384, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:41204232, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:26:41204232, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:26:41207728, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=a7362623-297d-4949-ab99-ce72021c4ace
[I0426 15:26:41207728, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=a7362623-297d-4949-ab99-ce72021c4ace
[I0426 15:26:41213006, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:26:41213006, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:26:41213763, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:41213763, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:44709597, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:26:44709597, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:26:55517615, 72812 main.py:118] Authenticating with basic auth
[I0426 15:26:55517615, 72812 main.py:118] Authenticating with basic auth
[I0426 15:26:55519429, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:55519429, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:55520295, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:55520295, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:55521787, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:55521787, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:55651432, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:55651432, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:55652781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:55652781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:55653249, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:55653249, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:55653666, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:26:55653666, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:26:55654631, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:55654631, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:56079856, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:56079856, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:56080290, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:26:56080290, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:26:56080543, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:56080543, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:26:56081308, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:56081308, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:26:56081699, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:56081699, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:56198074, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:56198074, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:26:56199387, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:56199387, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:26:56199800, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:56199800, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:26:56200292, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:26:56200292, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:26:56203523, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=31db151e-8049-419a-84db-a515cc5d44e1
[I0426 15:26:56203523, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=31db151e-8049-419a-84db-a515cc5d44e1
[I0426 15:26:56209787, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:26:56209787, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:26:56210467, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:56210467, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:26:59768052, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:26:59768052, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:29:28166671, 72812 main.py:118] Authenticating with basic auth
[I0426 15:29:28166671, 72812 main.py:118] Authenticating with basic auth
[I0426 15:29:28167486, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:29:28167486, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:29:28167851, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:29:28167851, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:29:28168141, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:28168141, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:28316348, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:28316348, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:28317471, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:29:28317471, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:29:28317876, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:29:28317876, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:29:28318159, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:29:28318159, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 15:29:28318433, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:28318433, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:28910080, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:28910080, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:28911117, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:29:28911117, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 15:29:28911580, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:29:28911580, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 15:29:28912112, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:29:28912112, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 15:29:28912481, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:28912481, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:29048733, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:29048733, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 15:29:29049671, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:29:29049671, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 15:29:29049992, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:29:29049992, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 15:29:29050482, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:29:29050482, 72812 util.py:94] Connected to TigerGraph with password
[I0426 15:29:29058765, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=d205f93e-71ba-430a-85ad-192798cfee57
[I0426 15:29:29058765, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=d205f93e-71ba-430a-85ad-192798cfee57
[I0426 15:29:29062743, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:29:29062743, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 15:29:29063175, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:29063175, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 15:29:32459398, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 15:29:32459398, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 16:45:35702689, 72812 main.py:118] Authenticating with basic auth
[I0426 16:45:35702689, 72812 main.py:118] Authenticating with basic auth
[I0426 16:45:35703919, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 16:45:35703919, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 16:45:35707283, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 16:45:35707283, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 16:45:35707566, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:35707566, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:35860888, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:35860888, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:35862592, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 16:45:35862592, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 16:45:35864425, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 16:45:35864425, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 16:45:35865261, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 16:45:35865261, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 16:45:35865688, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:35865688, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:36497318, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:36497318, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:36498512, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 16:45:36498512, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 16:45:36498947, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 16:45:36498947, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 16:45:36499469, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 16:45:36499469, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 16:45:36501006, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:36501006, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:36624989, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:36624989, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 16:45:36625822, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 16:45:36625822, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 16:45:36626210, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 16:45:36626210, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 16:45:36626667, 72812 util.py:94] Connected to TigerGraph with password
[I0426 16:45:36626667, 72812 util.py:94] Connected to TigerGraph with password
[I0426 16:45:36628619, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=625db7a3-9aa5-4807-9db5-3b348ffadc95
[I0426 16:45:36628619, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=625db7a3-9aa5-4807-9db5-3b348ffadc95
[I0426 16:45:36647455, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 16:45:36647455, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 16:45:36648024, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:36648024, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 16:45:40185281, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 16:45:40185281, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 17:23:59060331, 72812 main.py:118] Authenticating with basic auth
[I0426 17:23:59060331, 72812 main.py:118] Authenticating with basic auth
[I0426 17:23:59064274, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 17:23:59064274, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 17:23:59065130, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 17:23:59065130, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 17:23:59065657, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:23:59065657, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:23:59245427, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:23:59245427, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:23:59246707, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 17:23:59246707, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 17:23:59247258, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 17:23:59247258, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 17:23:59248624, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 17:23:59248624, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 17:23:59249142, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:23:59249142, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:24:00049174, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:24:00049174, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:24:00050366, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 17:24:00050366, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 17:24:00050697, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 17:24:00050697, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 17:24:00051224, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 17:24:00051224, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 17:24:00051522, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:24:00051522, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:24:00189033, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:24:00189033, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 17:24:00189311, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 17:24:00189311, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 17:24:00189458, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 17:24:00189458, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 17:24:00189634, 72812 util.py:94] Connected to TigerGraph with password
[I0426 17:24:00189634, 72812 util.py:94] Connected to TigerGraph with password
[I0426 17:24:00190188, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=dd42a729-cb49-4073-8fdd-3f59965b89ab
[I0426 17:24:00190188, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=dd42a729-cb49-4073-8fdd-3f59965b89ab
[I0426 17:24:00191385, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 17:24:00191385, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 17:24:00191611, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:24:00191611, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 17:24:03549613, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 17:24:03549613, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:23684961, 72812 main.py:118] Authenticating with basic auth
[I0426 19:42:23684961, 72812 main.py:118] Authenticating with basic auth
[I0426 19:42:23689449, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:23689449, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:23690280, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:23690280, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:23690949, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:23690949, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:23872156, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:23872156, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:23872928, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:23872928, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:23873207, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:23873207, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:23873573, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:42:23873573, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:42:23873814, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:23873814, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:24729092, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:24729092, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:24729601, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:42:24729601, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:42:24729809, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:24729809, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:24730107, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:24730107, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:24730285, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:24730285, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:24858877, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:24858877, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:24859149, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:24859149, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:24859298, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:24859298, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:24859726, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:42:24859726, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:42:24860838, 72812 main.py:71] /Support/supportai/create_ingest ENTRY request_id=16a8b0e2-cf4b-4f27-8d9d-b9133d86b6b4
[I0426 19:42:24860838, 72812 main.py:71] /Support/supportai/create_ingest ENTRY request_id=16a8b0e2-cf4b-4f27-8d9d-b9133d86b6b4
[I0426 19:42:24865821, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:24865821, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:24866110, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:24866110, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:26003518, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:26003518, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:26004146, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 19:42:26004146, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 19:42:26004432, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:26004432, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:26005014, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:26005014, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:26470591, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:26470591, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:26471870, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 19:42:26471870, 72812 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0426 19:42:26475364, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:42:26.475142\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"16a8b0e2-cf4b-4f27-8d9d-b9133d86b6b4\"}"
[I0426 19:42:26475364, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:42:26.475142\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"16a8b0e2-cf4b-4f27-8d9d-b9133d86b6b4\"}"
[I0426 19:42:40814763, 72812 main.py:118] Authenticating with basic auth
[I0426 19:42:40814763, 72812 main.py:118] Authenticating with basic auth
[I0426 19:42:40817881, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:40817881, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:40818754, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:40818754, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:40819216, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:40819216, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:40933900, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:40933900, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:40934406, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:40934406, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:40934659, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:40934659, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:40934910, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:42:40934910, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:42:40935142, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:40935142, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:41548196, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:41548196, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:41549348, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:42:41549348, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:42:41550689, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:41550689, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:42:41551340, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:41551340, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:41551851, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:41551851, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:41679630, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:41679630, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:41679997, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:41679997, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:41680137, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:41680137, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:42:41680330, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:42:41680330, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:42:41681067, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=9c68c024-05c7-4f13-87db-740490bca81e
[I0426 19:42:41681067, 72812 main.py:71] /Support/supportai/ingest ENTRY request_id=9c68c024-05c7-4f13-87db-740490bca81e
[I0426 19:42:41682672, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:41682672, 72812 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 19:42:41682995, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:41682995, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:45709786, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:45709786, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:45711921, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:42:45.711801\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"9c68c024-05c7-4f13-87db-740490bca81e\"}"
[I0426 19:42:45711921, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:42:45.711801\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"9c68c024-05c7-4f13-87db-740490bca81e\"}"
[I0426 19:42:46345170, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Document
[I0426 19:42:46345170, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Document
[I0426 19:42:46984799, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_DocumentChunk
[I0426 19:42:46984799, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_DocumentChunk
[I0426 19:42:47354117, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Entity
[I0426 19:42:47354117, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Entity
[I0426 19:42:47722591, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Relationship
[I0426 19:42:47722591, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Relationship
[I0426 19:42:48089605, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Concept
[I0426 19:42:48089605, 72812 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Concept
[I0426 19:42:48193023, 72812 openai_service.py:25] request_id=9c68c024-05c7-4f13-87db-740490bca81e instantiated OpenAI model_name=gpt-4-0613
[I0426 19:42:48193023, 72812 openai_service.py:25] request_id=9c68c024-05c7-4f13-87db-740490bca81e instantiated OpenAI model_name=gpt-4-0613
[I0426 19:42:48193395, 72812 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 19:42:48193395, 72812 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 19:42:48193650, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48193650, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48193823, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48193823, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48193955, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48193955, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48361690, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48361690, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48362198, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48362198, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48363137, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48363137, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48363587, 72812 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 19:42:48363587, 72812 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 19:42:48364021, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48364021, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48364206, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48364206, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48364383, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48364383, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48544273, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48544273, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48544784, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48544784, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48544940, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48544940, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48545222, 72812 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 19:42:48545222, 72812 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 19:42:48545507, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48545507, 72812 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 19:42:48545598, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48545598, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48545684, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48545684, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48716238, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48716238, 72812 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 19:42:48716650, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48716650, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48716813, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48716813, 72812 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 19:42:48717056, 72812 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname Support 
[I0426 19:42:48717056, 72812 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname Support 
[I0426 19:42:48717371, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 19:42:48717371, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 19:42:48717632, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:48717632, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:48717758, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:48717758, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:48717909, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:48717909, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:48718024, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48718024, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48718116, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48718116, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48833140, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:48833140, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:48833685, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48833685, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48833844, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:48833844, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:48834087, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196611.RESTPP_1_1.1714160568853.N
[I0426 19:42:48834087, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196611.RESTPP_1_1.1714160568853.N
[I0426 19:42:48834513, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48834513, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48834662, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48834662, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48948441, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:48948441, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:48949519, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48949519, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:48949838, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48949838, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:48950137, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:48950137, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49066242, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49066242, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49067213, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49067213, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49067702, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49067702, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49068148, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49068148, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49182502, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49182502, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49183060, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49183060, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49285080, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49285080, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49286648, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49286648, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49408491, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49408491, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49409135, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49409135, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49409522, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196611.RESTPP_1_1.1714160568853.N
[I0426 19:42:49409522, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196611.RESTPP_1_1.1714160568853.N
[I0426 19:42:49410253, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49410253, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:49410505, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49410505, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:49529507, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49529507, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:49530004, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49530004, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:49639511, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:49639511, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:49642623, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:49642623, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:50021871, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Document does not exist
[I0426 19:42:50021871, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Document does not exist
[I0426 19:42:50023900, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:50023900, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:50024475, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 19:42:50024475, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 19:42:50024938, 72812 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 19:42:50024938, 72812 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 19:42:50025685, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 19:42:50025685, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 19:42:50026117, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 19:42:50026117, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 19:42:50026372, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0426 19:42:50026372, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0426 19:42:50028482, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 19:42:50028482, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 19:42:50028833, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:50028833, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:50029000, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:50029000, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:50029179, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:50029179, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:50029329, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50029329, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50029480, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50029480, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50142471, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50142471, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50142849, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50142849, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50143038, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:50143038, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:50143309, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 65540.RESTPP_1_1.1714160570166.N
[I0426 19:42:50143309, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 65540.RESTPP_1_1.1714160570166.N
[I0426 19:42:50143695, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50143695, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50143873, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50143873, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50260942, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50260942, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50261412, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50261412, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50261612, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50261612, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50261792, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50261792, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50384787, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50384787, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50385197, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50385197, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50385365, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50385365, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50385516, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50385516, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50504447, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50504447, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50504983, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50504983, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50610607, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50610607, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50612189, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50612189, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50733224, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50733224, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50733709, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50733709, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50733964, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 65540.RESTPP_1_1.1714160570166.N
[I0426 19:42:50733964, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 65540.RESTPP_1_1.1714160570166.N
[I0426 19:42:50734324, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50734324, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:50734475, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50734475, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:50854187, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50854187, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:50855182, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50855182, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:50961504, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:50961504, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:50963409, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:50963409, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:51337681, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_DocumentChunk does not exist
[I0426 19:42:51337681, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_DocumentChunk does not exist
[I0426 19:42:51339242, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:51339242, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:51339719, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 19:42:51339719, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 19:42:51340343, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 19:42:51340343, 72812 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 19:42:51340960, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 19:42:51340960, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 19:42:51341265, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0426 19:42:51341265, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0426 19:42:51341631, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 19:42:51341631, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 19:42:51341983, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:51341983, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:51342179, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:51342179, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:51342433, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:51342433, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:51342645, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51342645, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51342854, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51342854, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51455911, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51455911, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51456289, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51456289, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51456464, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:51456464, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:51456714, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196614.RESTPP_1_1.1714160571479.N
[I0426 19:42:51456714, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196614.RESTPP_1_1.1714160571479.N
[I0426 19:42:51457082, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51457082, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51457228, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51457228, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51572877, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51572877, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51573972, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51573972, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51574315, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51574315, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51574539, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51574539, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51695355, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51695355, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51695844, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51695844, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51696019, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51696019, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51696171, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51696171, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51813911, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51813911, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:51814430, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51814430, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:51916262, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51916262, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:51917039, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:51917039, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52028307, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52028307, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52028667, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52028667, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52028936, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196614.RESTPP_1_1.1714160571479.N
[I0426 19:42:52028936, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196614.RESTPP_1_1.1714160571479.N
[I0426 19:42:52029285, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52029285, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52029451, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52029451, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52144656, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52144656, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52145158, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52145158, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52247102, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:52247102, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:52248763, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:52248763, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:52629484, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Entity does not exist
[I0426 19:42:52629484, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Entity does not exist
[I0426 19:42:52630867, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:52630867, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:52631910, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 19:42:52631910, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 19:42:52632366, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 19:42:52632366, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 19:42:52632658, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0426 19:42:52632658, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0426 19:42:52633015, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 19:42:52633015, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 19:42:52633350, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:52633350, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:52633531, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:52633531, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:52633734, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:52633734, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:52633913, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52633913, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52634118, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52634118, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52746390, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52746390, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52746682, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52746682, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52746832, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:52746832, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:52747038, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196616.RESTPP_1_1.1714160572769.N
[I0426 19:42:52747038, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 196616.RESTPP_1_1.1714160572769.N
[I0426 19:42:52747338, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52747338, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52747479, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52747479, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52861852, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52861852, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52862644, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52862644, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52863244, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52863244, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52863552, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52863552, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52981099, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52981099, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:52981691, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52981691, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:52982030, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52982030, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:52982197, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:52982197, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:53093501, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53093501, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53094601, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53094601, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53197018, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:53197018, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:53198572, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:53198572, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:53321495, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53321495, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53322423, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53322423, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53322682, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196616.RESTPP_1_1.1714160572769.N
[I0426 19:42:53322682, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 196616.RESTPP_1_1.1714160572769.N
[I0426 19:42:53323055, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:53323055, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:53323187, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:53323187, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:53438895, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53438895, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:53439834, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53439834, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:53545752, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:53545752, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:53550944, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:53550944, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:54051035, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Relationship does not exist
[I0426 19:42:54051035, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Relationship does not exist
[I0426 19:42:54051367, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:54051367, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:54051523, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 19:42:54051523, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 19:42:54051677, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 19:42:54051677, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 19:42:54051821, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0426 19:42:54051821, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0426 19:42:54051997, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 19:42:54051997, 72812 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 19:42:54052170, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:54052170, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:42:54052260, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:54052260, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:42:54052363, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:54052363, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:42:54052458, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54052458, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54052550, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54052550, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54158031, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54158031, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54158303, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54158303, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54158435, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:54158435, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:42:54158616, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 65545.RESTPP_1_1.1714160574182.N
[I0426 19:42:54158616, 72812 tg_proxy.py:53] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates started with RESTPP ID 65545.RESTPP_1_1.1714160574182.N
[I0426 19:42:54158900, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54158900, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54159023, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54159023, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54269185, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54269185, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54269671, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54269671, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54269865, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54269865, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54270041, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54270041, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54402318, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54402318, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54402806, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54402806, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54402922, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54402922, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54403017, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54403017, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54540126, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54540126, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54540737, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54540737, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54647906, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54647906, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54648903, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54648903, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54782861, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54782861, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54783125, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54783125, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54783318, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 65545.RESTPP_1_1.1714160574182.N
[I0426 19:42:54783318, 72812 tg_proxy.py:62] request_id=9c68c024-05c7-4f13-87db-740490bca81e query Scan_For_Updates completed successfully with RESTPP ID 65545.RESTPP_1_1.1714160574182.N
[I0426 19:42:54783586, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54783586, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:42:54783714, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54783714, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:42:54908232, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54908232, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:42:54908707, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:54908707, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:42:55014945, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:55014945, 72812 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 19:42:55017095, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:55017095, 72812 milvus_embedding_store.py:336] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus ENTRY delete()
[I0426 19:42:55409082, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Concept does not exist
[I0426 19:42:55409082, 72812 milvus_embedding_store.py:339] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus collection Support_Concept does not exist
[I0426 19:42:55409947, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:55409947, 72812 milvus_embedding_store.py:342] request_id=9c68c024-05c7-4f13-87db-740490bca81e Milvus EXIT delete()
[I0426 19:42:55410142, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 19:42:55410142, 72812 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 19:42:55410295, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 19:42:55410295, 72812 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 19:42:55410436, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0426 19:42:55410436, 72812 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0426 19:42:55410628, 72812 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname Support. Success=False
[I0426 19:42:55410628, 72812 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname Support. Success=False
[I0426 19:51:41952771, 72812 main.py:118] Authenticating with basic auth
[I0426 19:51:41952771, 72812 main.py:118] Authenticating with basic auth
[I0426 19:51:41954163, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:51:41954163, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:51:41954492, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:41954492, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:41954780, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:41954780, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42105708, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42105708, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42107020, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:51:42107020, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:51:42107619, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:51:42107619, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:51:42108393, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:51:42108393, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:51:42108790, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42108790, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42600903, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42600903, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42601800, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:51:42601800, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:51:42602091, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:51:42602091, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:51:42602699, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:42602699, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:42602946, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42602946, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42739213, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42739213, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:51:42740721, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:51:42740721, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:51:42741012, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:51:42741012, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:51:42742032, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:51:42742032, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:51:42746980, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=d827a9b2-e2ea-470f-acf5-caed61a57f4b
[I0426 19:51:42746980, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=d827a9b2-e2ea-470f-acf5-caed61a57f4b
[I0426 19:51:42757207, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:51:42757207, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:51:42757675, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:51:42757675, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:51:42757942, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:51:42757942, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:51:42758357, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:42758357, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:51:42758943, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:51:42758943, 72812 pyTigerGraphBase.py:256] entry: _req
[E0426 19:51:42871652, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[E0426 19:51:42871652, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[I0426 19:53:28698648, 72812 main.py:118] Authenticating with basic auth
[I0426 19:53:28698648, 72812 main.py:118] Authenticating with basic auth
[I0426 19:53:28699512, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:28699512, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:28701417, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:28701417, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:28702390, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:28702390, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:28849637, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:28849637, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:28850664, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:28850664, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:28851199, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:28851199, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:28851777, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:53:28851777, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:53:28852154, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:28852154, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29430057, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29430057, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29431073, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:53:29431073, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:53:29431516, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:29431516, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:29432522, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29432522, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29432802, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29432802, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29560848, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29560848, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29562553, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29562553, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29563403, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:29563403, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:29565350, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:53:29565350, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:53:29569923, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=77944a76-04be-4ba0-b988-3a13d743ecb8
[I0426 19:53:29569923, 72812 main.py:71] /SupportAI/supportai/consistency_status ENTRY request_id=77944a76-04be-4ba0-b988-3a13d743ecb8
[I0426 19:53:29580516, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:29580516, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:29581093, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:29581093, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:29581277, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:29581277, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:29581391, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29581391, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29581499, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29581499, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29694991, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29694991, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29695755, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29695755, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29696121, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:29696121, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:29696892, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714161209702.N
[I0426 19:53:29696892, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714161209702.N
[I0426 19:53:29697777, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29697777, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29698156, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29698156, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29827667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29827667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29827908, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29827908, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29828064, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714161209702.N
[I0426 19:53:29828064, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714161209702.N
[I0426 19:53:29828293, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29828293, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:29828395, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29828395, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:29935884, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29935884, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:29936258, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:29936258, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30042459, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:30042459, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:30043738, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:30043738, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:30044056, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:30044056, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:30044312, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30044312, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30044571, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30044571, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30191313, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30191313, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30193081, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30193081, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30193386, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:30193386, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:30193866, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714161210197.N
[I0426 19:53:30193866, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714161210197.N
[I0426 19:53:30195257, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30195257, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30195854, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30195854, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30330461, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30330461, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30332313, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30332313, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30339251, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714161210197.N
[I0426 19:53:30339251, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714161210197.N
[I0426 19:53:30340379, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30340379, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30340642, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30340642, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30466058, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30466058, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30467192, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30467192, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30572418, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:30572418, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:30573603, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:30573603, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:30573914, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:30573914, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:30574165, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30574165, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30574417, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30574417, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30709723, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30709723, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30710952, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30710952, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30711410, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:30711410, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:30711887, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714161210713.N
[I0426 19:53:30711887, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714161210713.N
[I0426 19:53:30714628, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30714628, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30714908, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30714908, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30856517, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30856517, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30857554, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30857554, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30858015, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714161210713.N
[I0426 19:53:30858015, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714161210713.N
[I0426 19:53:30861940, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30861940, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:30862987, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30862987, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:30994508, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30994508, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:30995767, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:30995767, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31102427, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:31102427, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:31103566, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:31103566, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:31104872, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:31104872, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:31105347, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31105347, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31105781, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31105781, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31245267, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31245267, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31246442, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31246442, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31246977, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:31246977, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:31248176, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714161211245.N
[I0426 19:53:31248176, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714161211245.N
[I0426 19:53:31250652, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31250652, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31254348, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31254348, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31389667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31389667, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31390566, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31390566, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31390978, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714161211245.N
[I0426 19:53:31390978, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714161211245.N
[I0426 19:53:31392067, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31392067, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31392371, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31392371, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31519183, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31519183, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31519994, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31519994, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31625832, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:31625832, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:31626923, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:31626923, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:31628222, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:31628222, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:31628637, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31628637, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31629183, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31629183, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31757007, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31757007, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31757216, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31757216, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31757305, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:31757305, 72812 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 19:53:31757427, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714161211769.N
[I0426 19:53:31757427, 72812 tg_proxy.py:53] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714161211769.N
[I0426 19:53:31757616, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31757616, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31757699, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31757699, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31865558, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31865558, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31865781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31865781, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31865925, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714161211769.N
[I0426 19:53:31865925, 72812 tg_proxy.py:62] request_id=77944a76-04be-4ba0-b988-3a13d743ecb8 query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714161211769.N
[I0426 19:53:31866136, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31866136, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:31866230, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31866230, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:31974550, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31974550, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:31974951, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:31974951, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:32081193, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:53:32.081086\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"77944a76-04be-4ba0-b988-3a13d743ecb8\"}"
[I0426 19:53:32081193, 72812 main.py:97] "{\"timestamp\": \"2024-04-26T19:53:32.081086\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"PostmanRuntime/7.37.0\", \"endpoint\": \"/SupportAI/supportai/consistency_status\", \"actionName\": \"/SupportAI/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"77944a76-04be-4ba0-b988-3a13d743ecb8\"}"
[I0426 19:53:41028860, 72812 main.py:118] Authenticating with basic auth
[I0426 19:53:41028860, 72812 main.py:118] Authenticating with basic auth
[I0426 19:53:41030997, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:41030997, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:41032484, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41032484, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41033272, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41033272, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41154107, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41154107, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41167136, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:41167136, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:41167890, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:41167890, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:41168095, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:53:41168095, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:53:41168245, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41168245, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41693019, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41693019, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41693487, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:53:41693487, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:53:41693657, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:41693657, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:53:41693864, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41693864, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41694008, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41694008, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41816725, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41816725, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:53:41817243, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:41817243, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:53:41817441, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:41817441, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:53:41817714, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:53:41817714, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:53:41818707, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=5d50be6b-43a1-405a-8ece-47b2a1ac3f99
[I0426 19:53:41818707, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=5d50be6b-43a1-405a-8ece-47b2a1ac3f99
[I0426 19:53:41820224, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:41820224, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:53:41820529, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:41820529, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:53:41820733, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:41820733, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:53:41820912, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41820912, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:53:41821087, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:53:41821087, 72812 pyTigerGraphBase.py:256] entry: _req
[E0426 19:53:41938167, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[E0426 19:53:41938167, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[I0426 19:54:07671721, 72812 main.py:118] Authenticating with basic auth
[I0426 19:54:07671721, 72812 main.py:118] Authenticating with basic auth
[I0426 19:54:07673295, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:07673295, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:07673800, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:07673800, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:07674208, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:07674208, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:07798179, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:07798179, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:07799113, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:07799113, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:07799448, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:07799448, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:07800546, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:54:07800546, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:54:07801021, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:07801021, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:08253397, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:08253397, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:08254815, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:54:08254815, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:54:08255497, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:08255497, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:08256734, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:08256734, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:08257415, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:08257415, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:08387359, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:08387359, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:08388699, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:08388699, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:08389163, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:08389163, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:08390210, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:54:08390210, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:54:08394724, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=af681ce6-7935-4aef-b943-a59b8d3fdd40
[I0426 19:54:08394724, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=af681ce6-7935-4aef-b943-a59b8d3fdd40
[I0426 19:54:08405965, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:54:08405965, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:54:08406718, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:54:08406718, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:54:08406990, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:54:08406990, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:54:08407229, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:08407229, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:08407469, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:08407469, 72812 pyTigerGraphBase.py:256] entry: _req
[E0426 19:54:08540727, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[E0426 19:54:08540727, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[I0426 19:54:24661445, 72812 main.py:118] Authenticating with basic auth
[I0426 19:54:24661445, 72812 main.py:118] Authenticating with basic auth
[I0426 19:54:24662655, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:24662655, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:24663339, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:24663339, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:24663682, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:24663682, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:24794191, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:24794191, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:24794952, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:24794952, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:24795406, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:24795406, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:24795821, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:54:24795821, 72812 pyTigerGraphBase.py:379] entry: _post
[I0426 19:54:24796067, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:24796067, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:25311411, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:25311411, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:25311739, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:54:25311739, 72812 pyTigerGraphBase.py:387] exit: _post
[I0426 19:54:25311845, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:25311845, 72812 pyTigerGraphBase.py:84] entry: __init__
[I0426 19:54:25311963, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:25311963, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:25312041, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:25312041, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:25423226, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:25423226, 72812 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 19:54:25423437, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:25423437, 72812 pyTigerGraphBase.py:350] exit: _get
[I0426 19:54:25423532, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:25423532, 72812 pyTigerGraphBase.py:203] exit: __init__
[I0426 19:54:25423659, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:54:25423659, 72812 util.py:94] Connected to TigerGraph with password
[I0426 19:54:25424095, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=5e1cff79-2bf8-4447-b097-1835cf4aa921
[I0426 19:54:25424095, 72812 main.py:71] /Support/supportai/consistency_status ENTRY request_id=5e1cff79-2bf8-4447-b097-1835cf4aa921
[I0426 19:54:25424734, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:54:25424734, 72812 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 19:54:25424852, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:54:25424852, 72812 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 19:54:25424946, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:54:25424946, 72812 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 19:54:25425026, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:25425026, 72812 pyTigerGraphBase.py:342] entry: _get
[I0426 19:54:25425120, 72812 pyTigerGraphBase.py:256] entry: _req
[I0426 19:54:25425120, 72812 pyTigerGraphBase.py:256] entry: _req
[E0426 19:54:25535053, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[E0426 19:54:25535053, 72812 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[I0426 20:01:22186098, 80184 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 20:01:22186098, 80184 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0426 20:01:22186310, 80184 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 20:01:22186310, 80184 utils.py:160] NumExpr defaulting to 8 threads.
[I0426 20:01:22953215, 80184 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 20:01:22953215, 80184 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0426 20:01:22953562, 80184 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 20:01:22953562, 80184 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0426 20:01:23330328, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 20:01:23330328, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0426 20:01:24280507, 80184 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 20:01:24280507, 80184 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0426 20:01:24282665, 80184 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 20:01:24282665, 80184 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0426 20:01:24636487, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 20:01:24636487, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0426 20:03:24516622, 80184 main.py:118] Authenticating with basic auth
[I0426 20:03:24516622, 80184 main.py:118] Authenticating with basic auth
[I0426 20:03:24518115, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:03:24518115, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:03:24518615, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:24518615, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:24518914, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:24518914, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:24684059, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:24684059, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:24685501, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:24685501, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:24686153, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:03:24686153, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:03:24686862, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:03:24686862, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:03:24687437, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:24687437, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:25162406, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:25162406, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:25162921, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:03:25162921, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:03:25163101, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:03:25163101, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:03:25164226, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:25164226, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:25164578, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:25164578, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:25275291, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:25275291, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:25275627, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:25275627, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:25275777, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:03:25275777, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:03:25276034, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:03:25276034, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:03:25276768, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=9b375a32-a505-4595-8b7f-14dd0c468a71
[I0426 20:03:25276768, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=9b375a32-a505-4595-8b7f-14dd0c468a71
[I0426 20:03:25614456, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Document
[I0426 20:03:25614456, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Document
[I0426 20:03:26030975, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_DocumentChunk
[I0426 20:03:26030975, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_DocumentChunk
[I0426 20:03:26441763, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Entity
[I0426 20:03:26441763, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Entity
[I0426 20:03:26809542, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Relationship
[I0426 20:03:26809542, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Relationship
[I0426 20:03:27192835, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Concept
[I0426 20:03:27192835, 80184 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=Support_Concept
[I0426 20:03:27294267, 80184 openai_service.py:25] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 instantiated OpenAI model_name=gpt-4-0613
[I0426 20:03:27294267, 80184 openai_service.py:25] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 instantiated OpenAI model_name=gpt-4-0613
[I0426 20:03:27294618, 80184 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 20:03:27294618, 80184 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0426 20:03:27294819, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27294819, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27294929, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27294929, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27295031, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27295031, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27463785, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27463785, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27464379, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27464379, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27464886, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27464886, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27465244, 80184 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 20:03:27465244, 80184 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0426 20:03:27465690, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27465690, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27465875, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27465875, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27466045, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27466045, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27633094, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27633094, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27633708, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27633708, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27634075, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27634075, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27634488, 80184 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 20:03:27634488, 80184 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0426 20:03:27634983, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27634983, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0426 20:03:27635214, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27635214, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27635391, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27635391, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27801054, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27801054, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:03:27801610, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27801610, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27801863, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27801863, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0426 20:03:27802158, 80184 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname Support 
[I0426 20:03:27802158, 80184 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname Support 
[I0426 20:03:27802614, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 20:03:27802614, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Document
[I0426 20:03:27802960, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:27802960, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:27803118, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:27803118, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:27803296, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:27803296, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:27803446, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27803446, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27803590, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27803590, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27918298, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:27918298, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:27918771, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27918771, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:27918915, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:27918915, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:27919126, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714161807929.N
[I0426 20:03:27919126, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 1.RESTPP_1_1.1714161807929.N
[I0426 20:03:27919593, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27919593, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:27919737, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:27919737, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28027018, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28027018, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28027197, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28027197, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28027290, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28027290, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28027374, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28027374, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28132970, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28132970, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28133204, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28133204, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28133299, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28133299, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28133381, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28133381, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28241286, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28241286, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28241479, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28241479, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28344692, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28344692, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28344924, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28344924, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28449627, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28449627, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28449831, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28449831, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28449955, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714161807929.N
[I0426 20:03:28449955, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 1.RESTPP_1_1.1714161807929.N
[I0426 20:03:28450137, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28450137, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:28450212, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28450212, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:28559823, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28559823, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:28560070, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28560070, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:28665162, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:28665162, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:28665493, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:28665493, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:29012471, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Document does not exist
[I0426 20:03:29012471, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Document does not exist
[I0426 20:03:29012792, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:29012792, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:29012918, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 20:03:29012918, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Document
[I0426 20:03:29013040, 80184 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 20:03:29013040, 80184 eventual_consistency_checker.py:209] Chunking the content from vertex type: Document
[I0426 20:03:29013159, 80184 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 20:03:29013159, 80184 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: Document
[I0426 20:03:29013278, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 20:03:29013278, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 20:03:29013396, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[E0426 20:03:29013396, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Document
[I0426 20:03:29013651, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 20:03:29013651, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: DocumentChunk
[I0426 20:03:29013790, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:29013790, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:29013867, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:29013867, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:29013950, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:29013950, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:29014023, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29014023, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29014093, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29014093, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29120581, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29120581, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29120786, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29120786, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29120861, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:29120861, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:29120970, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714161809130.N
[I0426 20:03:29120970, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 131075.RESTPP_1_1.1714161809130.N
[I0426 20:03:29121151, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29121151, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29121223, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29121223, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29226551, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29226551, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29226758, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29226758, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29226843, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29226843, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29226916, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29226916, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29336472, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29336472, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29337244, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29337244, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29337380, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29337380, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29337487, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29337487, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29442343, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29442343, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29442569, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29442569, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29547522, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29547522, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29547775, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29547775, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29654583, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29654583, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29654785, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29654785, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29654902, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714161809130.N
[I0426 20:03:29654902, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 131075.RESTPP_1_1.1714161809130.N
[I0426 20:03:29655087, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29655087, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:29655160, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29655160, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:29760696, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29760696, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:29760907, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29760907, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:29866179, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:29866179, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:29866550, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:29866550, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:30215831, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_DocumentChunk does not exist
[I0426 20:03:30215831, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_DocumentChunk does not exist
[I0426 20:03:30216124, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:30216124, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:30216258, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 20:03:30216258, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: DocumentChunk
[I0426 20:03:30216387, 80184 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 20:03:30216387, 80184 eventual_consistency_checker.py:216] Extracting and upserting entities from the content from vertex type: DocumentChunk
[I0426 20:03:30216512, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 20:03:30216512, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 20:03:30216634, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[E0426 20:03:30216634, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: DocumentChunk
[I0426 20:03:30216798, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 20:03:30216798, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Entity
[I0426 20:03:30216945, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:30216945, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:30217022, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:30217022, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:30217107, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:30217107, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:30217183, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30217183, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30217255, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30217255, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30325245, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30325245, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30325450, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30325450, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30325532, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:30325532, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:30325648, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714161810337.N
[I0426 20:03:30325648, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 4.RESTPP_1_1.1714161810337.N
[I0426 20:03:30325834, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30325834, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30325910, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30325910, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30433293, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30433293, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30433481, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30433481, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30433561, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30433561, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30433632, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30433632, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30545516, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30545516, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30545788, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30545788, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30545877, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30545877, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30545952, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30545952, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30652243, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30652243, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30652441, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30652441, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30757606, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30757606, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30757853, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30757853, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30866036, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30866036, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30866218, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30866218, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30866333, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714161810337.N
[I0426 20:03:30866333, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 4.RESTPP_1_1.1714161810337.N
[I0426 20:03:30866513, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30866513, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:30866588, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30866588, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:30974009, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30974009, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:30974202, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:30974202, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31077118, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:31077118, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:31077446, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:31077446, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:31435111, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Entity does not exist
[I0426 20:03:31435111, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Entity does not exist
[I0426 20:03:31435470, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:31435470, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:31435603, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 20:03:31435603, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Entity
[I0426 20:03:31435730, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 20:03:31435730, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 20:03:31435891, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[E0426 20:03:31435891, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Entity
[I0426 20:03:31436045, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 20:03:31436045, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Relationship
[I0426 20:03:31436202, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:31436202, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:31436277, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:31436277, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:31436363, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:31436363, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:31436435, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31436435, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31436574, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31436574, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31542517, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31542517, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31542717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31542717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31542795, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:31542795, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:31542906, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714161811555.N
[I0426 20:03:31542906, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 131078.RESTPP_1_1.1714161811555.N
[I0426 20:03:31543089, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31543089, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31543164, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31543164, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31652520, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31652520, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31652717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31652717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31652806, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31652806, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31652888, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31652888, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31760727, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31760727, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31760924, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31760924, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31761003, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31761003, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31761075, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31761075, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31864774, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31864774, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:31864964, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31864964, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:31970133, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31970133, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:31970339, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:31970339, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32076972, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32076972, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32077162, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32077162, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32077279, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714161811555.N
[I0426 20:03:32077279, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 131078.RESTPP_1_1.1714161811555.N
[I0426 20:03:32077481, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32077481, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32077556, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32077556, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32191056, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32191056, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32191247, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32191247, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32296480, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:32296480, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:32296810, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:32296810, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:32655139, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Relationship does not exist
[I0426 20:03:32655139, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Relationship does not exist
[I0426 20:03:32655503, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:32655503, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:32655686, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 20:03:32655686, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Relationship
[I0426 20:03:32655858, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 20:03:32655858, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 20:03:32656013, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[E0426 20:03:32656013, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Relationship
[I0426 20:03:32656206, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 20:03:32656206, 80184 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: Concept
[I0426 20:03:32656387, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:32656387, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:32656490, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:32656490, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:32656607, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:32656607, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:32656704, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32656704, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32656801, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32656801, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32772990, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32772990, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32773199, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32773199, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32773281, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:32773281, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:03:32773392, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714161812783.N
[I0426 20:03:32773392, 80184 tg_proxy.py:53] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates started with RESTPP ID 7.RESTPP_1_1.1714161812783.N
[I0426 20:03:32773595, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32773595, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32773668, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32773668, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32929996, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32929996, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:32930214, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32930214, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:32930302, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32930302, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:32930376, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:32930376, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33036001, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33036001, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33036199, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33036199, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33036275, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33036275, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33036343, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33036343, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33142264, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33142264, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33142450, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33142450, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33247728, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33247728, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33248118, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33248118, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33354454, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33354454, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33354640, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33354640, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33354751, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714161812783.N
[I0426 20:03:33354751, 80184 tg_proxy.py:62] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 query Scan_For_Updates completed successfully with RESTPP ID 7.RESTPP_1_1.1714161812783.N
[I0426 20:03:33354926, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33354926, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33355000, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33355000, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33467022, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33467022, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:03:33467233, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33467233, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:03:33572486, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:33572486, 80184 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0426 20:03:33572821, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:33572821, 80184 milvus_embedding_store.py:336] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus ENTRY delete()
[I0426 20:03:33922499, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Concept does not exist
[I0426 20:03:33922499, 80184 milvus_embedding_store.py:339] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus collection Support_Concept does not exist
[I0426 20:03:33922837, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:33922837, 80184 milvus_embedding_store.py:342] request_id=9b375a32-a505-4595-8b7f-14dd0c468a71 Milvus EXIT delete()
[I0426 20:03:33922997, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 20:03:33922997, 80184 eventual_consistency_checker.py:200] Embedding content from vertex type: Concept
[I0426 20:03:33923151, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0426 20:03:33923151, 80184 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0426 20:03:33923293, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[E0426 20:03:33923293, 80184 eventual_consistency_checker.py:237] No changes detected for vertex type: Concept
[I0426 20:03:33923472, 80184 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname Support. Success=False
[I0426 20:03:33923472, 80184 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname Support. Success=False
[I0426 20:03:33923660, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:33923660, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:03:33923756, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:33923756, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:03:33923852, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:33923852, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:03:33923938, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33923938, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:03:33924022, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:03:33924022, 80184 pyTigerGraphBase.py:256] entry: _req
[E0426 20:03:34028834, 80184 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[E0426 20:03:34028834, 80184 tg_proxy.py:89] Error running query ECC_Status: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/ECC_Status?v_type=Document
[I0426 20:26:00303222, 80184 main.py:118] Authenticating with basic auth
[I0426 20:26:00303222, 80184 main.py:118] Authenticating with basic auth
[I0426 20:26:00305266, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:00305266, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:00305782, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:00305782, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:00306184, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:00306184, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:00451837, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:00451837, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:00452591, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:00452591, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:00452857, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:00452857, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:00453131, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:26:00453131, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:26:00453361, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:00453361, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01342894, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01342894, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01343415, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:26:01343415, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:26:01343653, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:01343653, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:01344087, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01344087, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01344310, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01344310, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01454963, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01454963, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01455249, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01455249, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01455396, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:01455396, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:01455573, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:26:01455573, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:26:01456120, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c
[I0426 20:26:01456120, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c
[I0426 20:26:01457059, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:01457059, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:01457213, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:01457213, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:01457347, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:01457347, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:01457470, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01457470, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01457594, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01457594, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01567422, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01567422, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01567812, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01567812, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01568030, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:01568030, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:01568344, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714163161580.N
[I0426 20:26:01568344, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714163161580.N
[I0426 20:26:01568756, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01568756, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01568963, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01568963, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01689664, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01689664, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01690481, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01690481, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01690995, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714163161580.N
[I0426 20:26:01690995, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714163161580.N
[I0426 20:26:01691701, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01691701, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01692092, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01692092, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01846628, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01846628, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:01847141, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01847141, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:01952505, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:01952505, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:01952739, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:01952739, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:01952854, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:01952854, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:01952951, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01952951, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:01953044, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:01953044, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02062827, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02062827, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02063322, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02063322, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02063586, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:02063586, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:02063920, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714163162072.N
[I0426 20:26:02063920, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714163162072.N
[I0426 20:26:02064865, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02064865, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02065231, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02065231, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02198890, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02198890, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02199939, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02199939, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02200509, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714163162072.N
[I0426 20:26:02200509, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714163162072.N
[I0426 20:26:02201332, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02201332, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02201579, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02201579, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02329486, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02329486, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02330351, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02330351, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02436393, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:02436393, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:02437447, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:02437447, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:02437923, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:02437923, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:02438747, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02438747, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02439183, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02439183, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02583336, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02583336, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02583701, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02583701, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02583800, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:02583800, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:02583956, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714163162581.N
[I0426 20:26:02583956, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714163162581.N
[I0426 20:26:02584231, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02584231, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02584322, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02584322, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02709834, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02709834, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02710669, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02710669, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02711824, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714163162581.N
[I0426 20:26:02711824, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714163162581.N
[I0426 20:26:02712883, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02712883, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02713265, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02713265, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02840931, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02840931, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:02842224, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02842224, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:02947074, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:02947074, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:02948225, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:02948225, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:02948597, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:02948597, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:02948901, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02948901, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:02949218, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:02949218, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03088838, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03088838, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03089652, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03089652, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03090022, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:03090022, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:03091198, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714163163095.N
[I0426 20:26:03091198, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714163163095.N
[I0426 20:26:03093552, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03093552, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03094137, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03094137, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03222120, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03222120, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03223099, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03223099, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03223574, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714163163095.N
[I0426 20:26:03223574, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714163163095.N
[I0426 20:26:03224546, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03224546, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03224793, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03224793, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03367172, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03367172, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03367901, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03367901, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03471879, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:03471879, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:26:03473189, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:03473189, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:26:03473895, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:03473895, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:26:03475935, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03475935, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03476481, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03476481, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03607007, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03607007, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03607816, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03607816, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03611529, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:03611529, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:26:03612020, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714163163615.N
[I0426 20:26:03612020, 80184 tg_proxy.py:53] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714163163615.N
[I0426 20:26:03612761, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03612761, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03613004, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03613004, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03744772, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03744772, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03744971, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03744971, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03745108, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714163163615.N
[I0426 20:26:03745108, 80184 tg_proxy.py:62] request_id=62d2f906-49dc-4df3-b6d1-a33d26d7f14c query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714163163615.N
[I0426 20:26:03745322, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03745322, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:03745414, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03745414, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:03851260, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03851260, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:03851484, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03851484, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:03953028, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:26:03.952964\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"62d2f906-49dc-4df3-b6d1-a33d26d7f14c\"}"
[I0426 20:26:03953028, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:26:03.952964\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"62d2f906-49dc-4df3-b6d1-a33d26d7f14c\"}"
[I0426 20:26:30935472, 80184 main.py:118] Authenticating with basic auth
[I0426 20:26:30935472, 80184 main.py:118] Authenticating with basic auth
[I0426 20:26:30936318, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:30936318, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:30936798, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:30936798, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:30937218, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:30937218, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31058088, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31058088, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31059093, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:31059093, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:31059416, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:31059416, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:31059729, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:26:31059729, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:26:31059963, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31059963, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31688952, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31688952, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31689467, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:26:31689467, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:26:31689715, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:31689715, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:26:31690019, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:31690019, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:26:31690896, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31690896, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31823863, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31823863, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:26:31825415, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:31825415, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:26:31828515, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:31828515, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:26:31829254, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:26:31829254, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:26:31832547, 80184 main.py:71] /Support/supportai/ingest ENTRY request_id=8d397d1c-0d15-4be9-9773-df8db3e91cf8
[I0426 20:26:31832547, 80184 main.py:71] /Support/supportai/ingest ENTRY request_id=8d397d1c-0d15-4be9-9773-df8db3e91cf8
[I0426 20:26:31852637, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 20:26:31852637, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0426 20:26:31853143, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:31853143, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:26:34857910, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:26:34857910, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0426 20:26:34858917, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:26:34.858855\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"8d397d1c-0d15-4be9-9773-df8db3e91cf8\"}"
[I0426 20:26:34858917, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:26:34.858855\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"8d397d1c-0d15-4be9-9773-df8db3e91cf8\"}"
[I0426 20:27:13792274, 80184 main.py:118] Authenticating with basic auth
[I0426 20:27:13792274, 80184 main.py:118] Authenticating with basic auth
[I0426 20:27:13794014, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:27:13794014, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:27:13794981, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:13794981, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:13795710, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:13795710, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:13922068, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:13922068, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:13923354, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:13923354, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:13923813, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:27:13923813, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:27:13924081, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:27:13924081, 80184 pyTigerGraphBase.py:379] entry: _post
[I0426 20:27:13924313, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:13924313, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14525096, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14525096, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14525982, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:27:14525982, 80184 pyTigerGraphBase.py:387] exit: _post
[I0426 20:27:14527608, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:27:14527608, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0426 20:27:14528264, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14528264, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14528837, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14528837, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14677819, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14677819, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14678765, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14678765, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14679030, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:27:14679030, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0426 20:27:14680742, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:27:14680742, 80184 util.py:94] Connected to TigerGraph with password
[I0426 20:27:14683145, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7
[I0426 20:27:14683145, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7
[I0426 20:27:14687470, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:14687470, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:14689051, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:14689051, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:14689357, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:14689357, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:14692806, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14692806, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14693147, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14693147, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14817899, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14817899, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14818266, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14818266, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14818449, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:14818449, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:14818699, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714163234830.N
[I0426 20:27:14818699, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714163234830.N
[I0426 20:27:14819048, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14819048, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14819220, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14819220, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14935504, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14935504, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:14936036, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14936036, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:14936305, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714163234830.N
[I0426 20:27:14936305, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714163234830.N
[I0426 20:27:14936628, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14936628, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:14936780, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:14936780, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15052187, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15052187, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15052820, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15052820, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15160417, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:15160417, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:15161588, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:15161588, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:15162726, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:15162726, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:15163453, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15163453, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15163860, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15163860, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15306591, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15306591, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15307436, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15307436, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15307706, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:15307706, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:15308881, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714163235313.N
[I0426 20:27:15308881, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714163235313.N
[I0426 20:27:15312231, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15312231, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15312824, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15312824, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15447555, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15447555, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15448456, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15448456, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15449002, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714163235313.N
[I0426 20:27:15449002, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714163235313.N
[I0426 20:27:15451659, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15451659, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15451961, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15451961, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15579507, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15579507, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15580583, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15580583, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15688651, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:15688651, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:15690177, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:15690177, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:15690518, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:15690518, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:15690772, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15690772, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15691557, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15691557, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15819936, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15819936, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15820452, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15820452, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15820736, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:15820736, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:15822974, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714163235830.N
[I0426 20:27:15822974, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714163235830.N
[I0426 20:27:15827382, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15827382, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15827665, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15827665, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15964229, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15964229, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:15964942, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15964942, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:15965381, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714163235830.N
[I0426 20:27:15965381, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714163235830.N
[I0426 20:27:15966007, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15966007, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:15966290, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:15966290, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16107937, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16107937, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16108145, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16108145, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16213482, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:16213482, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:16213782, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:16213782, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:16213905, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:16213905, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:16214006, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16214006, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16214106, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16214106, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16322173, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16322173, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16322378, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16322378, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16322473, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:16322473, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:16322611, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714163236334.N
[I0426 20:27:16322611, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714163236334.N
[I0426 20:27:16322815, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16322815, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16322903, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16322903, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16428518, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16428518, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16428774, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16428774, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16428930, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714163236334.N
[I0426 20:27:16428930, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714163236334.N
[I0426 20:27:16429171, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16429171, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16429270, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16429270, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16538933, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16538933, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16539221, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16539221, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16644530, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:16644530, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0426 20:27:16644818, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:16644818, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0426 20:27:16644969, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:16644969, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0426 20:27:16645109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16645109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16645237, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16645237, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16756179, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16756179, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16756674, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16756674, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16756897, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:16756897, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0426 20:27:16757206, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714163236766.N
[I0426 20:27:16757206, 80184 tg_proxy.py:53] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status started with RESTPP ID 4.RESTPP_1_1.1714163236766.N
[I0426 20:27:16757685, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16757685, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16757893, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16757893, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16874875, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16874875, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16875427, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16875427, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16875712, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714163236766.N
[I0426 20:27:16875712, 80184 tg_proxy.py:62] request_id=354ea4ee-5ad7-4066-a74f-ff82e4e616d7 query ECC_Status completed successfully with RESTPP ID 4.RESTPP_1_1.1714163236766.N
[I0426 20:27:16876170, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16876170, 80184 pyTigerGraphBase.py:342] entry: _get
[I0426 20:27:16876351, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16876351, 80184 pyTigerGraphBase.py:256] entry: _req
[I0426 20:27:16993488, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16993488, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0426 20:27:16993952, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:16993952, 80184 pyTigerGraphBase.py:350] exit: _get
[I0426 20:27:17102551, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:27:17.102262\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"354ea4ee-5ad7-4066-a74f-ff82e4e616d7\"}"
[I0426 20:27:17102551, 80184 main.py:97] "{\"timestamp\": \"2024-04-26T20:27:17.102262\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"354ea4ee-5ad7-4066-a74f-ff82e4e616d7\"}"
[I0428 13:52:27006848, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:27006848, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:27008730, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:27008730, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:27009505, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:27009505, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:27009756, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27009756, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27174455, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27174455, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27175306, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:27175306, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:27176397, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:27176397, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:27176752, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:27176752, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:27177035, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27177035, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27848651, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27848651, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27849631, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:27849631, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:27850091, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:27850091, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:27850807, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:27850807, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:27852085, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27852085, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:27992625, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27992625, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:27993717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:27993717, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:27993993, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:27993993, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:27994446, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:27994446, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:27997718, 80184 main.py:71] /Support/supportai/create_ingest ENTRY request_id=87888cec-0b9c-4a42-8e6b-750ce2467f4c
[I0428 13:52:27997718, 80184 main.py:71] /Support/supportai/create_ingest ENTRY request_id=87888cec-0b9c-4a42-8e6b-750ce2467f4c
[I0428 13:52:28014401, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:28014401, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:28015945, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:28015945, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:29080659, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:29080659, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:29081976, 80184 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0428 13:52:29081976, 80184 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0428 13:52:29082330, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:29082330, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:29082796, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:29082796, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:29585069, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:29585069, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:29586200, 80184 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0428 13:52:29586200, 80184 pyTigerGraphGSQL.py:94] exit: gsql (success)
[I0428 13:52:29590629, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:52:29.590441\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"87888cec-0b9c-4a42-8e6b-750ce2467f4c\"}"
[I0428 13:52:29590629, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:52:29.590441\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/create_ingest\", \"actionName\": \"/Support/supportai/create_ingest\", \"status\": \"SUCCESS\", \"requestId\": \"87888cec-0b9c-4a42-8e6b-750ce2467f4c\"}"
[I0428 13:52:41318399, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:41318399, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:41319546, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:41319546, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:41320044, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:41320044, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:41320398, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:41320398, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:41439876, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:41439876, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:41441707, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:41441707, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:41442434, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:41442434, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:41444537, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:41444537, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:41445443, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:41445443, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:42081818, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:42081818, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:42082915, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:42082915, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:42083320, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:42083320, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:42083871, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:42083871, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:42084283, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:42084283, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:42219537, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:42219537, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:42220061, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:42220061, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:42220318, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:42220318, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:42220639, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:42220639, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:42223076, 80184 main.py:71] /Support/supportai/ingest ENTRY request_id=fd360177-9d9a-4733-a683-a5e3033564ee
[I0428 13:52:42223076, 80184 main.py:71] /Support/supportai/ingest ENTRY request_id=fd360177-9d9a-4733-a683-a5e3033564ee
[I0428 13:52:42229482, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:42229482, 80184 pyTigerGraphGSQL.py:40] entry: gsql
[I0428 13:52:42230531, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:42230531, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:46049951, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:46049951, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:52:46053955, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:52:46.053783\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"fd360177-9d9a-4733-a683-a5e3033564ee\"}"
[I0428 13:52:46053955, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:52:46.053783\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/ingest\", \"actionName\": \"/Support/supportai/ingest\", \"status\": \"SUCCESS\", \"requestId\": \"fd360177-9d9a-4733-a683-a5e3033564ee\"}"
[I0428 13:52:57471006, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:57471006, 80184 main.py:118] Authenticating with basic auth
[I0428 13:52:57472389, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:57472389, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:57474253, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:57474253, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:57475461, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:57475461, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:57603905, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:57603905, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:57604393, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:57604393, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:57604698, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:57604698, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:57604998, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:57604998, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:52:57605438, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:57605438, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58130205, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58130205, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58132937, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:58132937, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:52:58133848, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:58133848, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:52:58135715, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58135715, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58136041, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58136041, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58265468, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58265468, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58266584, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58266584, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58267015, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:58267015, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:52:58269052, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:58269052, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:52:58271705, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=65ed430a-e9b6-4955-9043-8697088020dc
[I0428 13:52:58271705, 80184 main.py:71] /Support/supportai/consistency_status ENTRY request_id=65ed430a-e9b6-4955-9043-8697088020dc
[I0428 13:52:58283612, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:58283612, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:58284373, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:58284373, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:58284915, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:58284915, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:58285728, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58285728, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58286305, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58286305, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58411965, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58411965, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58412870, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58412870, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58413239, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:58413239, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:58414229, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714312378434.N
[I0428 13:52:58414229, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 1.RESTPP_1_1.1714312378434.N
[I0428 13:52:58415109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58415109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58415410, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58415410, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58548351, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58548351, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58548673, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58548673, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58548836, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714312378434.N
[I0428 13:52:58548836, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 1.RESTPP_1_1.1714312378434.N
[I0428 13:52:58549091, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58549091, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58549199, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58549199, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58655991, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58655991, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58656312, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58656312, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58760845, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:58760845, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:58763043, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:58763043, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:58763444, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:58763444, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:58764599, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58764599, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58764995, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58764995, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58893541, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58893541, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:58894635, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58894635, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:58895554, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:58895554, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:58896303, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714312378914.N
[I0428 13:52:58896303, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 196609.RESTPP_1_1.1714312378914.N
[I0428 13:52:58897318, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58897318, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:58897700, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:58897700, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59030877, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59030877, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59031984, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59031984, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59032401, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714312378914.N
[I0428 13:52:59032401, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 196609.RESTPP_1_1.1714312378914.N
[I0428 13:52:59033189, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59033189, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59033430, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59033430, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59149636, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59149636, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59150489, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59150489, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59252492, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:59252492, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:59253841, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:59253841, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:59254431, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:59254431, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:59254952, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59254952, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59259009, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59259009, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59384097, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59384097, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59385077, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59385077, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59385347, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:59385347, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:59385743, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714312379405.N
[I0428 13:52:59385743, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 131074.RESTPP_1_1.1714312379405.N
[I0428 13:52:59388339, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59388339, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59388654, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59388654, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59521632, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59521632, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59522694, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59522694, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59523197, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714312379405.N
[I0428 13:52:59523197, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 131074.RESTPP_1_1.1714312379405.N
[I0428 13:52:59523894, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59523894, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59524471, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59524471, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59666565, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59666565, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59667354, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59667354, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59770953, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:59770953, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:52:59772283, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:59772283, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:52:59773395, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:59773395, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:52:59774109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59774109, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59774439, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59774439, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59905428, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59905428, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:52:59906799, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59906799, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:52:59907082, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:59907082, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:52:59907486, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714312379927.N
[I0428 13:52:59907486, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 65539.RESTPP_1_1.1714312379927.N
[I0428 13:52:59908073, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59908073, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:52:59908316, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:52:59908316, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00074646, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00074646, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00075918, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00075918, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00080109, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714312379927.N
[I0428 13:53:00080109, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 65539.RESTPP_1_1.1714312379927.N
[I0428 13:53:00084163, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00084163, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00084910, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00084910, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00217511, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00217511, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00219708, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00219708, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00326015, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:53:00326015, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:53:00329223, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:53:00329223, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:53:00330418, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:53:00330418, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:53:00330714, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00330714, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00330987, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00330987, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00466888, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00466888, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00467842, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00467842, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00468085, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:53:00468085, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 13:53:00468693, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 65540.RESTPP_1_1.1714312380487.N
[I0428 13:53:00468693, 80184 tg_proxy.py:53] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status started with RESTPP ID 65540.RESTPP_1_1.1714312380487.N
[I0428 13:53:00469557, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00469557, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00469811, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00469811, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00598349, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00598349, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00599144, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00599144, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00599554, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 65540.RESTPP_1_1.1714312380487.N
[I0428 13:53:00599554, 80184 tg_proxy.py:62] request_id=65ed430a-e9b6-4955-9043-8697088020dc query ECC_Status completed successfully with RESTPP ID 65540.RESTPP_1_1.1714312380487.N
[I0428 13:53:00600213, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00600213, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:00600451, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00600451, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:00734469, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00734469, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:00736003, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00736003, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:00846034, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:53:00.845758\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"65ed430a-e9b6-4955-9043-8697088020dc\"}"
[I0428 13:53:00846034, 80184 main.py:97] "{\"timestamp\": \"2024-04-28T13:53:00.845758\", \"userName\": \"user_1\", \"clientHost\": \"127.0.0.1:8000\", \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36\", \"endpoint\": \"/Support/supportai/consistency_status\", \"actionName\": \"/Support/supportai/consistency_status\", \"status\": \"SUCCESS\", \"requestId\": \"65ed430a-e9b6-4955-9043-8697088020dc\"}"
[I0428 13:53:44728177, 80184 main.py:118] Authenticating with basic auth
[I0428 13:53:44728177, 80184 main.py:118] Authenticating with basic auth
[I0428 13:53:44730305, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:53:44730305, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:53:44731443, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:44731443, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:44732429, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:44732429, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:44890172, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:44890172, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:44891160, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:44891160, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:44891700, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:53:44891700, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:53:44892247, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:53:44892247, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:53:44892766, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:44892766, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:45573618, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:45573618, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:45574613, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:53:45574613, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:53:45575061, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:53:45575061, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:53:45575496, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:45575496, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:53:45575780, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:45575780, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:53:45701308, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:45701308, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:53:45702550, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:45702550, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:53:45702888, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:53:45702888, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:53:45703819, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:53:45703819, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:53:45707584, 80184 main.py:71] /Support/supportai/search ENTRY request_id=a529f1d3-2863-49cc-8977-aecdf17ada2e
[I0428 13:53:45707584, 80184 main.py:71] /Support/supportai/search ENTRY request_id=a529f1d3-2863-49cc-8977-aecdf17ada2e
[I0428 13:55:52670064, 80184 main.py:118] Authenticating with basic auth
[I0428 13:55:52670064, 80184 main.py:118] Authenticating with basic auth
[I0428 13:55:52673411, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:55:52673411, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:55:52673788, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:52673788, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:52674178, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:52674178, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:52817004, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:52817004, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:52818061, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:52818061, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:52818695, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:55:52818695, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:55:52819102, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:55:52819102, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 13:55:52819465, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:52819465, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:53404977, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:53404977, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:53405976, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:55:53405976, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 13:55:53406257, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:55:53406257, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 13:55:53406638, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:53406638, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:53406878, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:53406878, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:53562287, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:53562287, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 13:55:53563723, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:53563723, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:53564704, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:55:53564704, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 13:55:53565683, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:55:53565683, 80184 util.py:94] Connected to TigerGraph with password
[I0428 13:55:53568987, 80184 main.py:71] /Support/supportai/search ENTRY request_id=45d435a2-07d5-4ed0-b26d-a1cd8408fdc8
[I0428 13:55:53568987, 80184 main.py:71] /Support/supportai/search ENTRY request_id=45d435a2-07d5-4ed0-b26d-a1cd8408fdc8
[I0428 13:55:53610871, 80184 openai_service.py:25] request_id=45d435a2-07d5-4ed0-b26d-a1cd8408fdc8 instantiated OpenAI model_name=gpt-4-0613
[I0428 13:55:53610871, 80184 openai_service.py:25] request_id=45d435a2-07d5-4ed0-b26d-a1cd8408fdc8 instantiated OpenAI model_name=gpt-4-0613
[I0428 13:55:53611309, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 13:55:53611309, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 13:55:53611439, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:53611439, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:53611556, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:53611556, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:53780099, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:55:53780099, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 13:55:53780321, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:53780321, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 13:55:53780483, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 13:55:53780483, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 13:55:56459569, 80184 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 13:55:56459569, 80184 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 13:55:56467424, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:55:56467424, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 13:55:56467599, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:55:56467599, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 13:55:56467708, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:55:56467708, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 13:55:56467807, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:56467807, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 13:55:56467900, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 13:55:56467900, 80184 pyTigerGraphBase.py:256] entry: _req
[E0428 13:55:56575422, 80184 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/Entity_Relationship_Retrieval?top_k=5
[E0428 13:55:56575422, 80184 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 404 Client Error: Not Found for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query/Support/Entity_Relationship_Retrieval?top_k=5
[I0428 14:03:13519219, 80184 main.py:118] Authenticating with basic auth
[I0428 14:03:13519219, 80184 main.py:118] Authenticating with basic auth
[I0428 14:03:13524425, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:03:13524425, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:03:13525549, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:13525549, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:13526143, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:13526143, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:13674704, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:13674704, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:13675451, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:13675451, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:13676353, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:03:13676353, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:03:13676976, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 14:03:13676976, 80184 pyTigerGraphBase.py:379] entry: _post
[I0428 14:03:13677547, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:13677547, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:14354876, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:14354876, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:14357903, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 14:03:14357903, 80184 pyTigerGraphBase.py:387] exit: _post
[I0428 14:03:14358408, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:03:14358408, 80184 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:03:14359442, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:14359442, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:14359824, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:14359824, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:14484856, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:14484856, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:14485827, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:14485827, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:14486559, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:03:14486559, 80184 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:03:14487356, 80184 util.py:94] Connected to TigerGraph with password
[I0428 14:03:14487356, 80184 util.py:94] Connected to TigerGraph with password
[I0428 14:03:14493061, 80184 main.py:71] /Support/supportai/search ENTRY request_id=c347517e-8f9b-469b-b29b-56edd995b5b2
[I0428 14:03:14493061, 80184 main.py:71] /Support/supportai/search ENTRY request_id=c347517e-8f9b-469b-b29b-56edd995b5b2
[I0428 14:03:14541543, 80184 openai_service.py:25] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 instantiated OpenAI model_name=gpt-4-0613
[I0428 14:03:14541543, 80184 openai_service.py:25] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 instantiated OpenAI model_name=gpt-4-0613
[I0428 14:03:14542134, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 14:03:14542134, 80184 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 14:03:14542347, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:14542347, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:14542450, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:14542450, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:14708203, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 14:03:14708203, 80184 pyTigerGraphBase.py:310] exit: _req (no resKey)
[I0428 14:03:14708509, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:14708509, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:14708741, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 14:03:14708741, 80184 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 14:03:16776844, 80184 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 14:03:16776844, 80184 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 14:03:16782077, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 14:03:16782077, 80184 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 14:03:16782293, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 14:03:16782293, 80184 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 14:03:16782413, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 14:03:16782413, 80184 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 14:03:16782501, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:16782501, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:16782576, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:16782576, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:16896618, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:16896618, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:16897158, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:16897158, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:16897392, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 14:03:16897392, 80184 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 14:03:16898006, 80184 tg_proxy.py:53] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 query Entity_Relationship_Retrieval started with RESTPP ID 196609.RESTPP_1_1.1714312996912.N
[I0428 14:03:16898006, 80184 tg_proxy.py:53] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 query Entity_Relationship_Retrieval started with RESTPP ID 196609.RESTPP_1_1.1714312996912.N
[I0428 14:03:16899138, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:16899138, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:16899391, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:16899391, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:17011895, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:17011895, 80184 pyTigerGraphBase.py:316] exit: _req (resKey)
[I0428 14:03:17012286, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:17012286, 80184 pyTigerGraphBase.py:350] exit: _get
[I0428 14:03:17012568, 80184 tg_proxy.py:62] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 196609.RESTPP_1_1.1714312996912.N
[I0428 14:03:17012568, 80184 tg_proxy.py:62] request_id=c347517e-8f9b-469b-b29b-56edd995b5b2 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 196609.RESTPP_1_1.1714312996912.N
[I0428 14:03:17012922, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:17012922, 80184 pyTigerGraphBase.py:342] entry: _get
[I0428 14:03:17013097, 80184 pyTigerGraphBase.py:256] entry: _req
[I0428 14:03:17013097, 80184 pyTigerGraphBase.py:256] entry: _req
[E0428 14:03:17128557, 80184 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=196609.RESTPP_1_1.1714312996912.N
[E0428 14:03:17128557, 80184 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=196609.RESTPP_1_1.1714312996912.N
[I0428 14:05:01294363, 92725 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 14:05:01294363, 92725 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 14:05:01294577, 92725 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 14:05:01294577, 92725 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 14:05:02068657, 92725 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 14:05:02068657, 92725 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 14:05:02068966, 92725 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 14:05:02068966, 92725 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 14:05:02433190, 92725 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 14:05:02433190, 92725 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 14:05:03369575, 92725 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 14:05:03369575, 92725 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 14:05:03371060, 92725 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 14:05:03371060, 92725 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 14:05:03678568, 92725 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 14:05:03678568, 92725 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 14:05:11545365, 92725 main.py:118] Authenticating with basic auth
[I0428 14:05:11545365, 92725 main.py:118] Authenticating with basic auth
[I0428 14:05:11547414, 92725 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:05:11547414, 92725 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:05:11548721, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:11548721, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:11549224, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:11549224, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:11739419, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:11739419, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:11740509, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:11740509, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:11740942, 92725 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:05:11740942, 92725 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:05:11741365, 92725 pyTigerGraphBase.py:380] entry: _post
[I0428 14:05:11741365, 92725 pyTigerGraphBase.py:380] entry: _post
[I0428 14:05:11741734, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:11741734, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:12297665, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:12297665, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:12298138, 92725 pyTigerGraphBase.py:388] exit: _post
[I0428 14:05:12298138, 92725 pyTigerGraphBase.py:388] exit: _post
[I0428 14:05:12298292, 92725 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:05:12298292, 92725 pyTigerGraphBase.py:84] entry: __init__
[I0428 14:05:12299169, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:12299169, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:12299414, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:12299414, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:12409233, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:12409233, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:12409576, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:12409576, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:12409780, 92725 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:05:12409780, 92725 pyTigerGraphBase.py:203] exit: __init__
[I0428 14:05:12410057, 92725 util.py:94] Connected to TigerGraph with password
[I0428 14:05:12410057, 92725 util.py:94] Connected to TigerGraph with password
[I0428 14:05:12410890, 92725 main.py:71] /Support/supportai/search ENTRY request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f
[I0428 14:05:12410890, 92725 main.py:71] /Support/supportai/search ENTRY request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f
[I0428 14:05:12444119, 92725 openai_service.py:25] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f instantiated OpenAI model_name=gpt-4-0613
[I0428 14:05:12444119, 92725 openai_service.py:25] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f instantiated OpenAI model_name=gpt-4-0613
[I0428 14:05:12444644, 92725 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 14:05:12444644, 92725 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 14:05:12444784, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:12444784, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:12444891, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:12444891, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:12603418, 92725 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 14:05:12603418, 92725 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 14:05:12603913, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:12603913, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:12604341, 92725 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 14:05:12604341, 92725 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 14:05:15418615, 92725 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 14:05:15418615, 92725 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 14:05:15427578, 92725 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 14:05:15427578, 92725 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 14:05:15427790, 92725 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 14:05:15427790, 92725 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 14:05:15427912, 92725 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 14:05:15427912, 92725 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 14:05:15428033, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15428033, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15428138, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:15428138, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:15533829, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:15533829, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:15534005, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:15534005, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:15534086, 92725 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 14:05:15534086, 92725 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 14:05:15534240, 92725 tg_proxy.py:53] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f query Entity_Relationship_Retrieval started with RESTPP ID 16973825.RESTPP_1_1.1714313115541.N
[I0428 14:05:15534240, 92725 tg_proxy.py:53] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f query Entity_Relationship_Retrieval started with RESTPP ID 16973825.RESTPP_1_1.1714313115541.N
[I0428 14:05:15534448, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15534448, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15534529, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:15534529, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:15640288, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:15640288, 92725 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 14:05:15640734, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:15640734, 92725 pyTigerGraphBase.py:351] exit: _get
[I0428 14:05:15641090, 92725 tg_proxy.py:62] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f query Entity_Relationship_Retrieval completed successfully with RESTPP ID 16973825.RESTPP_1_1.1714313115541.N
[I0428 14:05:15641090, 92725 tg_proxy.py:62] request_id=3d617d68-a658-40ba-a33d-4e7bd6654e1f query Entity_Relationship_Retrieval completed successfully with RESTPP ID 16973825.RESTPP_1_1.1714313115541.N
[I0428 14:05:15641567, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15641567, 92725 pyTigerGraphBase.py:343] entry: _get
[I0428 14:05:15641808, 92725 pyTigerGraphBase.py:256] entry: _req
[I0428 14:05:15641808, 92725 pyTigerGraphBase.py:256] entry: _req
[E0428 14:05:15751517, 92725 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=16973825.RESTPP_1_1.1714313115541.N
[E0428 14:05:15751517, 92725 tg_proxy.py:89] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=16973825.RESTPP_1_1.1714313115541.N
[I0428 17:59:43980981, 95622 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 17:59:43980981, 95622 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 17:59:43981148, 95622 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 17:59:43981148, 95622 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 17:59:44743884, 95622 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 17:59:44743884, 95622 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 17:59:44744304, 95622 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 17:59:44744304, 95622 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 17:59:45109509, 95622 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 17:59:45109509, 95622 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 17:59:45925826, 95622 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 17:59:45925826, 95622 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 17:59:45926182, 95622 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 17:59:45926182, 95622 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 17:59:46256662, 95622 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 17:59:46256662, 95622 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 18:00:22912619, 95671 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 18:00:22912619, 95671 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0428 18:00:22912801, 95671 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 18:00:22912801, 95671 utils.py:160] NumExpr defaulting to 8 threads.
[I0428 18:00:23655050, 95671 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 18:00:23655050, 95671 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0428 18:00:23655386, 95671 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 18:00:23655386, 95671 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0428 18:00:24012272, 95671 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 18:00:24012272, 95671 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0428 18:00:24953944, 95671 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 18:00:24953944, 95671 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0428 18:00:24955566, 95671 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 18:00:24955566, 95671 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0428 18:00:25264253, 95671 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 18:00:25264253, 95671 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0428 18:00:31783135, 95671 main.py:118] Authenticating with basic auth
[I0428 18:00:31783135, 95671 main.py:118] Authenticating with basic auth
[I0428 18:00:31784309, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:00:31784309, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:00:31784810, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:31784810, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:31785188, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:31785188, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:31941066, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:31941066, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:31942199, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:31942199, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:31942650, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:00:31942650, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:00:31943070, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:00:31943070, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:00:31943522, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:31943522, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:32639848, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:32639848, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:32641410, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:00:32641410, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:00:32641581, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:00:32641581, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:00:32642851, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:32642851, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:32643008, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:32643008, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:32754683, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:32754683, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:32755171, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:32755171, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:32755341, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:00:32755341, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:00:32755700, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:00:32755700, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:00:32756698, 95671 main.py:71] /Support/supportai/search ENTRY request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01
[I0428 18:00:32756698, 95671 main.py:71] /Support/supportai/search ENTRY request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01
[I0428 18:00:32788177, 95671 openai_service.py:25] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 instantiated OpenAI model_name=gpt-4-0613
[I0428 18:00:32788177, 95671 openai_service.py:25] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 instantiated OpenAI model_name=gpt-4-0613
[I0428 18:00:32788524, 95671 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 18:00:32788524, 95671 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 18:00:32788631, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:32788631, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:32788729, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:32788729, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:32953804, 95671 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 18:00:32953804, 95671 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 18:00:32954192, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:32954192, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:32954586, 95671 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 18:00:32954586, 95671 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 18:00:35339741, 95671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 18:00:35339741, 95671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 18:00:35347506, 95671 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 18:00:35347506, 95671 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 18:00:35347691, 95671 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 18:00:35347691, 95671 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 18:00:35347790, 95671 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 18:00:35347790, 95671 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 18:00:35347887, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35347887, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35347969, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:35347969, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:35456507, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:35456507, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:35456706, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:35456706, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:35456787, 95671 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 18:00:35456787, 95671 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 18:00:35456962, 95671 tg_proxy.py:53] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 query Entity_Relationship_Retrieval started with RESTPP ID 65537.RESTPP_1_1.1714327235516.N
[I0428 18:00:35456962, 95671 tg_proxy.py:53] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 query Entity_Relationship_Retrieval started with RESTPP ID 65537.RESTPP_1_1.1714327235516.N
[I0428 18:00:35457192, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35457192, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35457269, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:35457269, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:35564111, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:35564111, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:00:35564322, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:35564322, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:00:35564482, 95671 tg_proxy.py:62] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 65537.RESTPP_1_1.1714327235516.N
[I0428 18:00:35564482, 95671 tg_proxy.py:62] request_id=ce7e9b8c-4afc-468b-a6e3-0adf9580ec01 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 65537.RESTPP_1_1.1714327235516.N
[I0428 18:00:35564692, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35564692, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:00:35564786, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:00:35564786, 95671 pyTigerGraphBase.py:256] entry: _req
[E0428 18:00:35670246, 95671 tg_proxy.py:91] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=65537.RESTPP_1_1.1714327235516.N
[E0428 18:00:35670246, 95671 tg_proxy.py:91] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=65537.RESTPP_1_1.1714327235516.N
[I0428 18:02:30931045, 95671 main.py:118] Authenticating with basic auth
[I0428 18:02:30931045, 95671 main.py:118] Authenticating with basic auth
[I0428 18:02:30933042, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:02:30933042, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:02:30933893, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:30933893, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:30934653, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:30934653, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31080570, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31080570, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31081965, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:31081965, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:31082472, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:02:31082472, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:02:31082915, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:02:31082915, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:02:31083282, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31083282, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31754299, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31754299, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31754918, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:02:31754918, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:02:31755162, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:02:31755162, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:02:31755619, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:31755619, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:31755837, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31755837, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31867396, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31867396, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:31867811, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:31867811, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:31868008, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:02:31868008, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:02:31868313, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:02:31868313, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:02:31869302, 95671 main.py:71] /Support/supportai/search ENTRY request_id=4342ae08-98e5-459e-99a1-88595586fb26
[I0428 18:02:31869302, 95671 main.py:71] /Support/supportai/search ENTRY request_id=4342ae08-98e5-459e-99a1-88595586fb26
[I0428 18:02:31899464, 95671 openai_service.py:25] request_id=4342ae08-98e5-459e-99a1-88595586fb26 instantiated OpenAI model_name=gpt-4-0613
[I0428 18:02:31899464, 95671 openai_service.py:25] request_id=4342ae08-98e5-459e-99a1-88595586fb26 instantiated OpenAI model_name=gpt-4-0613
[I0428 18:02:31899874, 95671 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 18:02:31899874, 95671 pyTigerGraphSchema.py:211] entry: getEndpoints
[I0428 18:02:31899994, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:31899994, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:31900097, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:31900097, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:32082104, 95671 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 18:02:32082104, 95671 pyTigerGraphBase.py:311] exit: _req (no resKey)
[I0428 18:02:32082350, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:32082350, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:32082532, 95671 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 18:02:32082532, 95671 pyTigerGraphSchema.py:242] exit: getEndpoints
[I0428 18:02:35111495, 95671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 18:02:35111495, 95671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[I0428 18:02:35121942, 95671 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 18:02:35121942, 95671 pyTigerGraphQuery.py:222] entry: runInstalledQuery
[I0428 18:02:35122247, 95671 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 18:02:35122247, 95671 pyTigerGraphQuery.py:118] entry: _parseQueryParameters
[I0428 18:02:35122448, 95671 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 18:02:35122448, 95671 pyTigerGraphQuery.py:153] exit: _parseQueryParameters
[I0428 18:02:35122626, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35122626, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35122795, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:35122795, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:35239305, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:35239305, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:35239747, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:35239747, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:35239974, 95671 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 18:02:35239974, 95671 pyTigerGraphQuery.py:259] exit: runInstalledQuery (GET)
[I0428 18:02:35240421, 95671 tg_proxy.py:53] request_id=4342ae08-98e5-459e-99a1-88595586fb26 query Entity_Relationship_Retrieval started with RESTPP ID 16973825.RESTPP_1_1.1714327355297.N
[I0428 18:02:35240421, 95671 tg_proxy.py:53] request_id=4342ae08-98e5-459e-99a1-88595586fb26 query Entity_Relationship_Retrieval started with RESTPP ID 16973825.RESTPP_1_1.1714327355297.N
[I0428 18:02:35240961, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35240961, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35241172, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:35241172, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:35356018, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:35356018, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:02:35356558, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:35356558, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:02:35356946, 95671 tg_proxy.py:62] request_id=4342ae08-98e5-459e-99a1-88595586fb26 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 16973825.RESTPP_1_1.1714327355297.N
[I0428 18:02:35356946, 95671 tg_proxy.py:62] request_id=4342ae08-98e5-459e-99a1-88595586fb26 query Entity_Relationship_Retrieval completed successfully with RESTPP ID 16973825.RESTPP_1_1.1714327355297.N
[I0428 18:02:35357444, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35357444, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:02:35357665, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:02:35357665, 95671 pyTigerGraphBase.py:256] entry: _req
[E0428 18:02:35476649, 95671 tg_proxy.py:91] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=16973825.RESTPP_1_1.1714327355297.N
[E0428 18:02:35476649, 95671 tg_proxy.py:91] Error running query Entity_Relationship_Retrieval: 400 Client Error: Bad Request for url: https://62ac2a8bf4e64dc7b17ffa6da5bb9232.i.tgcloud.io:443/restpp/query_result?graph_name=Support&requestid=16973825.RESTPP_1_1.1714327355297.N
[I0428 18:08:02812220, 95671 main.py:118] Authenticating with basic auth
[I0428 18:08:02812220, 95671 main.py:118] Authenticating with basic auth
[I0428 18:08:02814817, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:08:02814817, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:08:02815153, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:08:02815153, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:08:02815397, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:02815397, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:03088625, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03088625, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03089439, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:08:03089439, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:08:03089707, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:08:03089707, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:08:03090026, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:08:03090026, 95671 pyTigerGraphBase.py:380] entry: _post
[I0428 18:08:03090266, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:03090266, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:03680567, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03680567, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03681053, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:08:03681053, 95671 pyTigerGraphBase.py:388] exit: _post
[I0428 18:08:03681189, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:08:03681189, 95671 pyTigerGraphBase.py:84] entry: __init__
[I0428 18:08:03681461, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:08:03681461, 95671 pyTigerGraphBase.py:343] entry: _get
[I0428 18:08:03681586, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:03681586, 95671 pyTigerGraphBase.py:256] entry: _req
[I0428 18:08:03792860, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03792860, 95671 pyTigerGraphBase.py:317] exit: _req (resKey)
[I0428 18:08:03793132, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:08:03793132, 95671 pyTigerGraphBase.py:351] exit: _get
[I0428 18:08:03793262, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:08:03793262, 95671 pyTigerGraphBase.py:203] exit: __init__
[I0428 18:08:03793454, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:08:03793454, 95671 util.py:94] Connected to TigerGraph with password
[I0428 18:08:03794048, 95671 main.py:71] /Support/supportai/answerquestion ENTRY request_id=d762539d-953e-4ada-b154-17a45c916c88
[I0428 18:08:03794048, 95671 main.py:71] /Support/supportai/answerquestion ENTRY request_id=d762539d-953e-4ada-b154-17a45c916c88
[I0430 20:49:28731534, 26057 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0430 20:49:28731534, 26057 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0430 20:49:28731718, 26057 utils.py:160] NumExpr defaulting to 8 threads.
[I0430 20:49:28731718, 26057 utils.py:160] NumExpr defaulting to 8 threads.
[I0430 20:49:29545984, 26057 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0430 20:49:29545984, 26057 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0430 20:49:29546348, 26057 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0430 20:49:29546348, 26057 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0430 20:49:29907269, 26057 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0430 20:49:29907269, 26057 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0430 20:49:30847573, 26057 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0430 20:49:30847573, 26057 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0430 20:49:30849480, 26057 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0430 20:49:30849480, 26057 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0430 20:49:31223706, 26057 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0430 20:49:31223706, 26057 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 19:46:50539378, 47671 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 19:46:50539378, 47671 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 19:46:50539552, 47671 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 19:46:50539552, 47671 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 19:46:51358314, 47671 embedding_services.py:43] request_id=None ENTRY embed_documents()
[I0501 19:46:51358314, 47671 embedding_services.py:43] request_id=None ENTRY embed_documents()
[I0501 19:46:51969486, 47671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[I0501 19:46:51969486, 47671 _client.py:1013] HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
[I0501 19:46:52088116, 47671 embedding_services.py:45] request_id=None EXIT embed_documents()
[I0501 19:46:52088116, 47671 embedding_services.py:45] request_id=None EXIT embed_documents()
[I0501 19:46:52141310, 47671 <frozen importlib._bootstrap>:241] Loading faiss.
[I0501 19:46:52141310, 47671 <frozen importlib._bootstrap>:241] Loading faiss.
[I0501 19:46:52174743, 47671 <frozen importlib._bootstrap>:241] Successfully loaded faiss.
[I0501 19:46:52174743, 47671 <frozen importlib._bootstrap>:241] Successfully loaded faiss.
[I0501 19:46:52179969, 47671 config.py:121] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 19:46:52179969, 47671 config.py:121] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 19:46:52180235, 47671 config.py:125] Setting up Milvus embedding store for InquiryAI
[I0501 19:46:52180235, 47671 config.py:125] Setting up Milvus embedding store for InquiryAI
[I0501 19:46:59648583, 47717 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 19:46:59648583, 47717 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 19:46:59648778, 47717 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 19:46:59648778, 47717 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 19:47:00312487, 47717 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 19:47:00312487, 47717 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 19:47:00312811, 47717 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 19:47:00312811, 47717 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 19:47:00697729, 47717 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 19:47:00697729, 47717 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 19:47:01688884, 47717 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 19:47:01688884, 47717 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 19:47:01690526, 47717 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 19:47:01690526, 47717 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 19:47:02078880, 47717 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 19:47:02078880, 47717 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:36:33385550, 50613 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:36:33385550, 50613 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:36:33385728, 50613 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:36:33385728, 50613 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:36:34034185, 50613 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:36:34034185, 50613 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:36:34034508, 50613 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:36:34034508, 50613 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:36:34398262, 50613 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:36:34398262, 50613 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:36:35318595, 50613 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:36:35318595, 50613 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:36:35319479, 50613 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:36:35319479, 50613 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:36:35616353, 50613 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:36:35616353, 50613 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:36:57597506, 50729 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:36:57597506, 50729 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:36:57597689, 50729 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:36:57597689, 50729 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:36:58245347, 50729 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:36:58245347, 50729 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:36:58245679, 50729 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:36:58245679, 50729 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:36:59198360, 50729 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:36:59198360, 50729 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:37:00382639, 50729 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:37:00382639, 50729 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:37:00384870, 50729 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:37:00384870, 50729 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:37:00690189, 50729 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:37:00690189, 50729 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:48:34219010, 51962 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:48:34219010, 51962 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:48:34219184, 51962 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:48:34219184, 51962 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:48:34881072, 51962 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:48:34881072, 51962 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:48:34881405, 51962 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:48:34881405, 51962 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:48:35277073, 51962 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:48:35277073, 51962 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:48:36233889, 51962 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:48:36233889, 51962 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:48:36236401, 51962 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:48:36236401, 51962 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:48:36539238, 51962 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:48:36539238, 51962 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:49:04329753, 52055 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:49:04329753, 52055 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 20:49:04329927, 52055 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:49:04329927, 52055 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 20:49:04965231, 52055 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:49:04965231, 52055 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 20:49:04965572, 52055 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:49:04965572, 52055 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 20:49:05285353, 52055 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:49:05285353, 52055 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 20:49:06148556, 52055 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:49:06148556, 52055 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 20:49:06150552, 52055 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:49:06150552, 52055 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 20:49:06464960, 52055 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 20:49:06464960, 52055 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 23:44:34412791, 56473 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 23:44:34412791, 56473 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0501 23:44:34412989, 56473 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 23:44:34412989, 56473 utils.py:160] NumExpr defaulting to 8 threads.
[I0501 23:44:35065331, 56473 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 23:44:35065331, 56473 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0501 23:44:35065679, 56473 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 23:44:35065679, 56473 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0501 23:44:35427155, 56473 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 23:44:35427155, 56473 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0501 23:44:36324843, 56473 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 23:44:36324843, 56473 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0501 23:44:36326543, 56473 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 23:44:36326543, 56473 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0501 23:44:36638744, 56473 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 23:44:36638744, 56473 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0501 23:44:36721953, 56473 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0501 23:44:36721953, 56473 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0501 23:44:36722548, 56473 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0501 23:44:36722548, 56473 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0501 23:44:36722826, 56473 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0501 23:44:36722826, 56473 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0501 23:44:36723076, 56473 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0501 23:44:36723076, 56473 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0501 23:44:36727649, 56473 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0501 23:44:36727649, 56473 eventual_consistency_checker.py:59] Checking if query Scan_For_Updates is installed
[I0501 23:44:36728016, 56473 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0501 23:44:36728016, 56473 eventual_consistency_checker.py:59] Checking if query Update_Vertices_Processing_Status is installed
[I0501 23:44:36728263, 56473 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0501 23:44:36728263, 56473 eventual_consistency_checker.py:59] Checking if query ECC_Status is installed
[I0501 23:44:36728488, 56473 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0501 23:44:36728488, 56473 eventual_consistency_checker.py:45] Installing query ECC_Status
[I0501 23:44:36731654, 56473 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0501 23:44:36731654, 56473 eventual_consistency_checker.py:242] Eventual Consistency Check running for graphname testGraph 
[I0501 23:44:36731913, 56473 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: index1
[I0501 23:44:36731913, 56473 eventual_consistency_checker.py:187] Fetching vertex ids and content for vertex type: index1
[I0501 23:44:36733864, 56473 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0501 23:44:36733864, 56473 eventual_consistency_checker.py:193] Remove existing entries from Milvus with vertex_ids in []
[I0501 23:44:36734446, 56473 eventual_consistency_checker.py:200] Embedding content from vertex type: index1
[I0501 23:44:36734446, 56473 eventual_consistency_checker.py:200] Embedding content from vertex type: index1
[I0501 23:44:36735281, 56473 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0501 23:44:36735281, 56473 eventual_consistency_checker.py:226] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0501 23:44:36735487, 56473 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[E0501 23:44:36735487, 56473 eventual_consistency_checker.py:237] No changes detected for vertex type: index1
[I0501 23:44:36736118, 56473 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0501 23:44:36736118, 56473 eventual_consistency_checker.py:249] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0503 18:05:29672626, 11870 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0503 18:05:29672626, 11870 utils.py:148] Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
[I0503 18:05:29673267, 11870 utils.py:160] NumExpr defaulting to 8 threads.
[I0503 18:05:29673267, 11870 utils.py:160] NumExpr defaulting to 8 threads.
[I0503 18:05:33054224, 11870 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0503 18:05:33054224, 11870 config.py:117] Milvus enabled for host https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com at port 19541
[I0503 18:05:33054579, 11870 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0503 18:05:33054579, 11870 config.py:121] Setting up Milvus embedding store for InquiryAI
[I0503 18:05:33455272, 11870 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0503 18:05:33455272, 11870 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_inquiry_documents
[I0503 18:05:34343866, 11870 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0503 18:05:34343866, 11870 milvus_embedding_store.py:149] Milvus already initialized, skipping initial document load
[I0503 18:05:34345334, 11870 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0503 18:05:34345334, 11870 config.py:134] Setting up Milvus embedding store for SupportAI with collection_name: tg_support_documents
[I0503 18:05:34655879, 11870 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0503 18:05:34655879, 11870 milvus_embedding_store.py:80] Initializing Milvus with host=https://in01-9b1837c5225162d.aws-us-west-2.vectordb.zillizcloud.com:19541,
                    port=unknown, username=ahmed, collection=tg_support_documents
[I0503 18:05:34745556, 11870 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0503 18:05:34745556, 11870 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0503 18:05:34746173, 11870 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0503 18:05:34746173, 11870 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0503 18:05:34746467, 11870 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0503 18:05:34746467, 11870 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0503 18:05:34746749, 11870 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0503 18:05:34746749, 11870 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in [1, 2, 3]
[I0503 18:05:34747541, 11870 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0503 18:05:34747541, 11870 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0503 18:05:34749801, 11870 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0503 18:05:34749801, 11870 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0503 18:05:34752139, 11870 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0503 18:05:34752139, 11870 eventual_consistency_checker.py:58] Checking if query Scan_For_Updates is installed
[I0503 18:05:34752570, 11870 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0503 18:05:34752570, 11870 eventual_consistency_checker.py:58] Checking if query Update_Vertices_Processing_Status is installed
[I0503 18:05:34752835, 11870 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0503 18:05:34752835, 11870 eventual_consistency_checker.py:240] Eventual Consistency Check running for graphname testGraph 
[I0503 18:05:34753046, 11870 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0503 18:05:34753046, 11870 eventual_consistency_checker.py:186] Fetching vertex ids and content for vertex type: index1
[I0503 18:05:34755178, 11870 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0503 18:05:34755178, 11870 eventual_consistency_checker.py:192] Remove existing entries from Milvus with vertex_ids in []
[I0503 18:05:34755791, 11870 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0503 18:05:34755791, 11870 eventual_consistency_checker.py:199] Embedding content from vertex type: index1
[I0503 18:05:34756561, 11870 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[I0503 18:05:34756561, 11870 eventual_consistency_checker.py:225] Updating the TigerGraph vertex ids to confirm that processing was completed
[E0503 18:05:34756788, 11870 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[E0503 18:05:34756788, 11870 eventual_consistency_checker.py:235] No changes detected for vertex type: index1
[I0503 18:05:34758342, 11870 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
[I0503 18:05:34758342, 11870 eventual_consistency_checker.py:247] Eventual Consistency Check finished for graphname testGraph. Success=False
